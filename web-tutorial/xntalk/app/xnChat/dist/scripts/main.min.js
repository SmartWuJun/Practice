var Pinyin = (function (){
    var Pinyin = function (ops){
            this.initialize(ops);
        },

        options = {
            checkPolyphone: false,
            charcase: 'default'
        };


    Pinyin.fn = Pinyin.prototype = {
        init: function (ops){
            this.options = extend(options, ops);
        },

        initialize: function(ops){
            this.init(ops);
            this.char_dict = "YDYQSXMWZSSXJBYMGCCZQPSSQBYCDSCDQLDYLYBSSJGYZZJJFKCCLZDHWDWZJLJPFYYNWJJTMYHZWZHFLZPPQHGSCYYYNJQYXXGJHHSDSJNKKTMOMLCRXYPSNQSECCQZGGLLYJLMYZZSECYKYYHQWJSSGGYXYZYJWWKDJHYCHMYXJTLXJYQBYXZLDWRDJRWYSRLDZJPCBZJJBRCFTLECZSTZFXXZHTRQHYBDLYCZSSYMMRFMYQZPWWJJYFCRWFDFZQPYDDWYXKYJAWJFFXYPSFTZYHHYZYSWCJYXSCLCXXWZZXNBGNNXBXLZSZSBSGPYSYZDHMDZBQBZCWDZZYYTZHBTSYYBZGNTNXQYWQSKBPHHLXGYBFMJEBJHHGQTJCYSXSTKZHLYCKGLYSMZXYALMELDCCXGZYRJXSDLTYZCQKCNNJWHJTZZCQLJSTSTBNXBTYXCEQXGKWJYFLZQLYHYXSPSFXLMPBYSXXXYDJCZYLLLSJXFHJXPJBTFFYABYXBHZZBJYZLWLCZGGBTSSMDTJZXPTHYQTGLJSCQFZKJZJQNLZWLSLHDZBWJNCJZYZSQQYCQYRZCJJWYBRTWPYFTWEXCSKDZCTBZHYZZYYJXZCFFZZMJYXXSDZZOTTBZLQWFCKSZSXFYRLNYJMBDTHJXSQQCCSBXYYTSYFBXDZTGBCNSLCYZZPSAZYZZSCJCSHZQYDXLBPJLLMQXTYDZXSQJTZPXLCGLQTZWJBHCTSYJSFXYEJJTLBGXSXJMYJQQPFZASYJNTYDJXKJCDJSZCBARTDCLYJQMWNQNCLLLKBYBZZSYHQQLTWLCCXTXLLZNTYLNEWYZYXCZXXGRKRMTCNDNJTSYYSSDQDGHSDBJGHRWRQLYBGLXHLGTGXBQJDZPYJSJYJCTMRNYMGRZJCZGJMZMGXMPRYXKJNYMSGMZJYMKMFXMLDTGFBHCJHKYLPFMDXLQJJSMTQGZSJLQDLDGJYCALCMZCSDJLLNXDJFFFFJCZFMZFFPFKHKGDPSXKTACJDHHZDDCRRCFQYJKQCCWJDXHWJLYLLZGCFCQDSMLZPBJJPLSBCJGGDCKKDEZSQCCKJGCGKDJTJDLZYCXKLQSCGJCLTFPCQCZGWPJDQYZJJBYJHSJDZWGFSJGZKQCCZLLPSPKJGQJHZZLJPLGJGJJTHJJYJZCZMLZLYQBGJWMLJKXZDZNJQSYZMLJLLJKYWXMKJLHSKJGBMCLYYMKXJQLBMLLKMDXXKWYXYSLMLPSJQQJQXYXFJTJDXMXXLLCXQBSYJBGWYMBGGBCYXPJYGPEPFGDJGBHBNSQJYZJKJKHXQFGQZKFHYGKHDKLLSDJQXPQYKYBNQSXQNSZSWHBSXWHXWBZZXDMNSJBSBKBBZKLYLXGWXDRWYQZMYWSJQLCJXXJXKJEQXSCYETLZHLYYYSDZPAQYZCMTLSHTZCFYZYXYLJSDCJQAGYSLCQLYYYSHMRQQKLDXZSCSSSYDYCJYSFSJBFRSSZQSBXXPXJYSDRCKGJLGDKZJZBDKTCSYQPYHSTCLDJDHMXMCGXYZHJDDTMHLTXZXYLYMOHYJCLTYFBQQXPFBDFHHTKSQHZYYWCNXXCRWHOWGYJLEGWDQCWGFJYCSNTMYTOLBYGWQWESJPWNMLRYDZSZTXYQPZGCWXHNGPYXSHMYQJXZTDPPBFYHZHTJYFDZWKGKZBLDNTSXHQEEGZZYLZMMZYJZGXZXKHKSTXNXXWYLYAPSTHXDWHZYMPXAGKYDXBHNHXKDPJNMYHYLPMGOCSLNZHKXXLPZZLBMLSFBHHGYGYYGGBHSCYAQTYWLXTZQCEZYDQDQMMHTKLLSZHLSJZWFYHQSWSCWLQAZYNYTLSXTHAZNKZZSZZLAXXZWWCTGQQTDDYZTCCHYQZFLXPSLZYGPZSZNGLNDQTBDLXGTCTAJDKYWNSYZLJHHZZCWNYYZYWMHYCHHYXHJKZWSXHZYXLYSKQYSPSLYZWMYPPKBYGLKZHTYXAXQSYSHXASMCHKDSCRSWJPWXSGZJLWWSCHSJHSQNHCSEGNDAQTBAALZZMSSTDQJCJKTSCJAXPLGGXHHGXXZCXPDMMHLDGTYBYSJMXHMRCPXXJZCKZXSHMLQXXTTHXWZFKHCCZDYTCJYXQHLXDHYPJQXYLSYYDZOZJNYXQEZYSQYAYXWYPDGXDDXSPPYZNDLTWRHXYDXZZJHTCXMCZLHPYYYYMHZLLHNXMYLLLMDCPPXHMXDKYCYRDLTXJCHHZZXZLCCLYLNZSHZJZZLNNRLWHYQSNJHXYNTTTKYJPYCHHYEGKCTTWLGQRLGGTGTYGYHPYHYLQYQGCWYQKPYYYTTTTLHYHLLTYTTSPLKYZXGZWGPYDSSZZDQXSKCQNMJJZZBXYQMJRTFFBTKHZKBXLJJKDXJTLBWFZPPTKQTZTGPDGNTPJYFALQMKGXBDCLZFHZCLLLLADPMXDJHLCCLGYHDZFGYDDGCYYFGYDXKSSEBDHYKDKDKHNAXXYBPBYYHXZQGAFFQYJXDMLJCSQZLLPCHBSXGJYNDYBYQSPZWJLZKSDDTACTBXZDYZYPJZQSJNKKTKNJDJGYYPGTLFYQKASDNTCYHBLWDZHBBYDWJRYGKZYHEYYFJMSDTYFZJJHGCXPLXHLDWXXJKYTCYKSSSMTWCTTQZLPBSZDZWZXGZAGYKTYWXLHLSPBCLLOQMMZSSLCMBJCSZZKYDCZJGQQDSMCYTZQQLWZQZXSSFPTTFQMDDZDSHDTDWFHTDYZJYQJQKYPBDJYYXTLJHDRQXXXHAYDHRJLKLYTWHLLRLLRCXYLBWSRSZZSYMKZZHHKYHXKSMDSYDYCJPBZBSQLFCXXXNXKXWYWSDZYQOGGQMMYHCDZTTFJYYBGSTTTYBYKJDHKYXBELHTYPJQNFXFDYKZHQKZBYJTZBXHFDXKDASWTAWAJLDYJSFHBLDNNTNQJTJNCHXFJSRFWHZFMDRYJYJWZPDJKZYJYMPCYZNYNXFBYTFYFWYGDBNZZZDNYTXZEMMQBSQEHXFZMBMFLZZSRXYMJGSXWZJSPRYDJSJGXHJJGLJJYNZZJXHGXKYMLPYYYCXYTWQZSWHWLYRJLPXSLSXMFSWWKLCTNXNYNPSJSZHDZEPTXMYYWXYYSYWLXJQZQXZDCLEEELMCPJPCLWBXSQHFWWTFFJTNQJHJQDXHWLBYZNFJLALKYYJLDXHHYCSTYYWNRJYXYWTRMDRQHWQCMFJDYZMHMYYXJWMYZQZXTLMRSPWWCHAQBXYGZYPXYYRRCLMPYMGKSJSZYSRMYJSNXTPLNBAPPYPYLXYYZKYNLDZYJZCZNNLMZHHARQMPGWQTZMXXMLLHGDZXYHXKYXYCJMFFYYHJFSBSSQLXXNDYCANNMTCJCYPRRNYTYQNYYMBMSXNDLYLYSLJRLXYSXQMLLYZLZJJJKYZZCSFBZXXMSTBJGNXYZHLXNMCWSCYZYFZLXBRNNNYLBNRTGZQYSATSWRYHYJZMZDHZGZDWYBSSCSKXSYHYTXXGCQGXZZSHYXJSCRHMKKBXCZJYJYMKQHZJFNBHMQHYSNJNZYBKNQMCLGQHWLZNZSWXKHLJHYYBQLBFCDSXDLDSPFZPSKJYZWZXZDDXJSMMEGJSCSSMGCLXXKYYYLNYPWWWGYDKZJGGGZGGSYCKNJWNJPCXBJJTQTJWDSSPJXZXNZXUMELPXFSXTLLXCLJXJJLJZXCTPSWXLYDHLYQRWHSYCSQYYBYAYWJJJQFWQCQQCJQGXALDBZZYJGKGXPLTZYFXJLTPADKYQHPMATLCPDCKBMTXYBHKLENXDLEEGQDYMSAWHZMLJTWYGXLYQZLJEEYYBQQFFNLYXRDSCTGJGXYYNKLLYQKCCTLHJLQMKKZGCYYGLLLJDZGYDHZWXPYSJBZKDZGYZZHYWYFQYTYZSZYEZZLYMHJJHTSMQWYZLKYYWZCSRKQYTLTDXWCTYJKLWSQZWBDCQYNCJSRSZJLKCDCDTLZZZACQQZZDDXYPLXZBQJYLZLLLQDDZQJYJYJZYXNYYYNYJXKXDAZWYRDLJYYYRJLXLLDYXJCYWYWNQCCLDDNYYYNYCKCZHXXCCLGZQJGKWPPCQQJYSBZZXYJSQPXJPZBSBDSFNSFPZXHDWZTDWPPTFLZZBZDMYYPQJRSDZSQZSQXBDGCPZSWDWCSQZGMDHZXMWWFYBPDGPHTMJTHZSMMBGZMBZJCFZWFZBBZMQCFMBDMCJXLGPNJBBXGYHYYJGPTZGZMQBQTCGYXJXLWZKYDPDYMGCFTPFXYZTZXDZXTGKMTYBBCLBJASKYTSSQYYMSZXFJEWLXLLSZBQJJJAKLYLXLYCCTSXMCWFKKKBSXLLLLJYXTYLTJYYTDPJHNHNNKBYQNFQYYZBYYESSESSGDYHFHWTCJBSDZZTFDMXHCNJZYMQWSRYJDZJQPDQBBSTJGGFBKJBXTGQHNGWJXJGDLLTHZHHYYYYYYSXWTYYYCCBDBPYPZYCCZYJPZYWCBDLFWZCWJDXXHYHLHWZZXJTCZLCDPXUJCZZZLYXJJTXPHFXWPYWXZPTDZZBDZCYHJHMLXBQXSBYLRDTGJRRCTTTHYTCZWMXFYTWWZCWJWXJYWCSKYBZSCCTZQNHXNWXXKHKFHTSWOCCJYBCMPZZYKBNNZPBZHHZDLSYDDYTYFJPXYNGFXBYQXCBHXCPSXTYZDMKYSNXSXLHKMZXLYHDHKWHXXSSKQYHHCJYXGLHZXCSNHEKDTGZXQYPKDHEXTYKCNYMYYYPKQYYYKXZLTHJQTBYQHXBMYHSQCKWWYLLHCYYLNNEQXQWMCFBDCCMLJGGXDQKTLXKGNQCDGZJWYJJLYHHQTTTNWCHMXCXWHWSZJYDJCCDBQCDGDNYXZTHCQRXCBHZTQCBXWGQWYYBXHMBYMYQTYEXMQKYAQYRGYZSLFYKKQHYSSQYSHJGJCNXKZYCXSBXYXHYYLSTYCXQTHYSMGSCPMMGCCCCCMTZTASMGQZJHKLOSQYLSWTMXSYQKDZLJQQYPLSYCZTCQQPBBQJZCLPKHQZYYXXDTDDTSJCXFFLLCHQXMJLWCJCXTSPYCXNDTJSHJWXDQQJSKXYAMYLSJHMLALYKXCYYDMNMDQMXMCZNNCYBZKKYFLMCHCMLHXRCJJHSYLNMTJZGZGYWJXSRXCWJGJQHQZDQJDCJJZKJKGDZQGJJYJYLXZXXCDQHHHEYTMHLFSBDJSYYSHFYSTCZQLPBDRFRZTZYKYWHSZYQKWDQZRKMSYNBCRXQBJYFAZPZZEDZCJYWBCJWHYJBQSZYWRYSZPTDKZPFPBNZTKLQYHBBZPNPPTYZZYBQNYDCPJMMCYCQMCYFZZDCMNLFPBPLNGQJTBTTNJZPZBBZNJKLJQYLNBZQHKSJZNGGQSZZKYXSHPZSNBCGZKDDZQANZHJKDRTLZLSWJLJZLYWTJNDJZJHXYAYNCBGTZCSSQMNJPJYTYSWXZFKWJQTKHTZPLBHSNJZSYZBWZZZZLSYLSBJHDWWQPSLMMFBJDWAQYZTCJTBNNWZXQXCDSLQGDSDPDZHJTQQPSWLYYJZLGYXYZLCTCBJTKTYCZJTQKBSJLGMGZDMCSGPYNJZYQYYKNXRPWSZXMTNCSZZYXYBYHYZAXYWQCJTLLCKJJTJHGDXDXYQYZZBYWDLWQCGLZGJGQRQZCZSSBCRPCSKYDZNXJSQGXSSJMYDNSTZTPBDLTKZWXQWQTZEXNQCZGWEZKSSBYBRTSSSLCCGBPSZQSZLCCGLLLZXHZQTHCZMQGYZQZNMCOCSZJMMZSQPJYGQLJYJPPLDXRGZYXCCSXHSHGTZNLZWZKJCXTCFCJXLBMQBCZZWPQDNHXLJCTHYZLGYLNLSZZPCXDSCQQHJQKSXZPBAJYEMSMJTZDXLCJYRYYNWJBNGZZTMJXLTBSLYRZPYLSSCNXPHLLHYLLQQZQLXYMRSYCXZLMMCZLTZSDWTJJLLNZGGQXPFSKYGYGHBFZPDKMWGHCXMSGDXJMCJZDYCABXJDLNBCDQYGSKYDQTXDJJYXMSZQAZDZFSLQXYJSJZYLBTXXWXQQZBJZUFBBLYLWDSLJHXJYZJWTDJCZFQZQZZDZSXZZQLZCDZFJHYSPYMPQZMLPPLFFXJJNZZYLSJEYQZFPFZKSYWJJJHRDJZZXTXXGLGHYDXCSKYSWMMZCWYBAZBJKSHFHJCXMHFQHYXXYZFTSJYZFXYXPZLCHMZMBXHZZSXYFYMNCWDABAZLXKTCSHHXKXJJZJSTHYGXSXYYHHHJWXKZXSSBZZWHHHCWTZZZPJXSNXQQJGZYZYWLLCWXZFXXYXYHXMKYYSWSQMNLNAYCYSPMJKHWCQHYLAJJMZXHMMCNZHBHXCLXTJPLTXYJHDYYLTTXFSZHYXXSJBJYAYRSMXYPLCKDUYHLXRLNLLSTYZYYQYGYHHSCCSMZCTZQXKYQFPYYRPFFLKQUNTSZLLZMWWTCQQYZWTLLMLMPWMBZSSTZRBPDDTLQJJBXZCSRZQQYGWCSXFWZLXCCRSZDZMCYGGDZQSGTJSWLJMYMMZYHFBJDGYXCCPSHXNZCSBSJYJGJMPPWAFFYFNXHYZXZYLREMZGZCYZSSZDLLJCSQFNXZKPTXZGXJJGFMYYYSNBTYLBNLHPFZDCYFBMGQRRSSSZXYSGTZRNYDZZCDGPJAFJFZKNZBLCZSZPSGCYCJSZLMLRSZBZZLDLSLLYSXSQZQLYXZLSKKBRXBRBZCYCXZZZEEYFGKLZLYYHGZSGZLFJHGTGWKRAAJYZKZQTSSHJJXDCYZUYJLZYRZDQQHGJZXSSZBYKJPBFRTJXLLFQWJHYLQTYMBLPZDXTZYGBDHZZRBGXHWNJTJXLKSCFSMWLSDQYSJTXKZSCFWJLBXFTZLLJZLLQBLSQMQQCGCZFPBPHZCZJLPYYGGDTGWDCFCZQYYYQYSSCLXZSKLZZZGFFCQNWGLHQYZJJCZLQZZYJPJZZBPDCCMHJGXDQDGDLZQMFGPSYTSDYFWWDJZJYSXYYCZCYHZWPBYKXRYLYBHKJKSFXTZJMMCKHLLTNYYMSYXYZPYJQYCSYCWMTJJKQYRHLLQXPSGTLYYCLJSCPXJYZFNMLRGJJTYZBXYZMSJYJHHFZQMSYXRSZCWTLRTQZSSTKXGQKGSPTGCZNJSJCQCXHMXGGZTQYDJKZDLBZSXJLHYQGGGTHQSZPYHJHHGYYGKGGCWJZZYLCZLXQSFTGZSLLLMLJSKCTBLLZZSZMMNYTPZSXQHJCJYQXYZXZQZCPSHKZZYSXCDFGMWQRLLQXRFZTLYSTCTMJCXJJXHJNXTNRZTZFQYHQGLLGCXSZSJDJLJCYDSJTLNYXHSZXCGJZYQPYLFHDJSBPCCZHJJJQZJQDYBSSLLCMYTTMQTBHJQNNYGKYRQYQMZGCJKPDCGMYZHQLLSLLCLMHOLZGDYYFZSLJCQZLYLZQJESHNYLLJXGJXLYSYYYXNBZLJSSZCQQCJYLLZLTJYLLZLLBNYLGQCHXYYXOXCXQKYJXXXYKLXSXXYQXCYKQXQCSGYXXYQXYGYTQOHXHXPYXXXULCYEYCHZZCBWQBBWJQZSCSZSSLZYLKDESJZWMYMCYTSDSXXSCJPQQSQYLYYZYCMDJDZYWCBTJSYDJKCYDDJLBDJJSODZYSYXQQYXDHHGQQYQHDYXWGMMMAJDYBBBPPBCMUUPLJZSMTXERXJMHQNUTPJDCBSSMSSSTKJTSSMMTRCPLZSZMLQDSDMJMQPNQDXCFYNBFSDQXYXHYAYKQYDDLQYYYSSZBYDSLNTFQTZQPZMCHDHCZCWFDXTMYQSPHQYYXSRGJCWTJTZZQMGWJJTJHTQJBBHWZPXXHYQFXXQYWYYHYSCDYDHHQMNMTMWCPBSZPPZZGLMZFOLLCFWHMMSJZTTDHZZYFFYTZZGZYSKYJXQYJZQBHMBZZLYGHGFMSHPZFZSNCLPBQSNJXZSLXXFPMTYJYGBXLLDLXPZJYZJYHHZCYWHJYLSJEXFSZZYWXKZJLUYDTMLYMQJPWXYHXSKTQJEZRPXXZHHMHWQPWQLYJJQJJZSZCPHJLCHHNXJLQWZJHBMZYXBDHHYPZLHLHLGFWLCHYYTLHJXCJMSCPXSTKPNHQXSRTYXXTESYJCTLSSLSTDLLLWWYHDHRJZSFGXTSYCZYNYHTDHWJSLHTZDQDJZXXQHGYLTZPHCSQFCLNJTCLZPFSTPDYNYLGMJLLYCQHYSSHCHYLHQYQTMZYPBYWRFQYKQSYSLZDQJMPXYYSSRHZJNYWTQDFZBWWTWWRXCWHGYHXMKMYYYQMSMZHNGCEPMLQQMTCWCTMMPXJPJJHFXYYZSXZHTYBMSTSYJTTQQQYYLHYNPYQZLCYZHZWSMYLKFJXLWGXYPJYTYSYXYMZCKTTWLKSMZSYLMPWLZWXWQZSSAQSYXYRHSSNTSRAPXCPWCMGDXHXZDZYFJHGZTTSBJHGYZSZYSMYCLLLXBTYXHBBZJKSSDMALXHYCFYGMQYPJYCQXJLLLJGSLZGQLYCJCCZOTYXMTMTTLLWTGPXYMZMKLPSZZZXHKQYSXCTYJZYHXSHYXZKXLZWPSQPYHJWPJPWXQQYLXSDHMRSLZZYZWTTCYXYSZZSHBSCCSTPLWSSCJCHNLCGCHSSPHYLHFHHXJSXYLLNYLSZDHZXYLSXLWZYKCLDYAXZCMDDYSPJTQJZLNWQPSSSWCTSTSZLBLNXSMNYYMJQBQHRZWTYYDCHQLXKPZWBGQYBKFCMZWPZLLYYLSZYDWHXPSBCMLJBSCGBHXLQHYRLJXYSWXWXZSLDFHLSLYNJLZYFLYJYCDRJLFSYZFSLLCQYQFGJYHYXZLYLMSTDJCYHBZLLNWLXXYGYYHSMGDHXXHHLZZJZXCZZZCYQZFNGWPYLCPKPYYPMCLQKDGXZGGWQBDXZZKZFBXXLZXJTPJPTTBYTSZZDWSLCHZHSLTYXHQLHYXXXYYZYSWTXZKHLXZXZPYHGCHKCFSYHUTJRLXFJXPTZTWHPLYXFCRHXSHXKYXXYHZQDXQWULHYHMJTBFLKHTXCWHJFWJCFPQRYQXCYYYQYGRPYWSGSUNGWCHKZDXYFLXXHJJBYZWTSXXNCYJJYMSWZJQRMHXZWFQSYLZJZGBHYNSLBGTTCSYBYXXWXYHXYYXNSQYXMQYWRGYQLXBBZLJSYLPSYTJZYHYZAWLRORJMKSCZJXXXYXCHDYXRYXXJDTSQFXLYLTSFFYXLMTYJMJUYYYXLTZCSXQZQHZXLYYXZHDNBRXXXJCTYHLBRLMBRLLAXKYLLLJLYXXLYCRYLCJTGJCMTLZLLCYZZPZPCYAWHJJFYBDYYZSMPCKZDQYQPBPCJPDCYZMDPBCYYDYCNNPLMTMLRMFMMGWYZBSJGYGSMZQQQZTXMKQWGXLLPJGZBQCDJJJFPKJKCXBLJMSWMDTQJXLDLPPBXCWRCQFBFQJCZAHZGMYKPHYYHZYKNDKZMBPJYXPXYHLFPNYYGXJDBKXNXHJMZJXSTRSTLDXSKZYSYBZXJLXYSLBZYSLHXJPFXPQNBYLLJQKYGZMCYZZYMCCSLCLHZFWFWYXZMWSXTYNXJHPYYMCYSPMHYSMYDYSHQYZCHMJJMZCAAGCFJBBHPLYZYLXXSDJGXDHKXXTXXNBHRMLYJSLTXMRHNLXQJXYZLLYSWQGDLBJHDCGJYQYCMHWFMJYBMBYJYJWYMDPWHXQLDYGPDFXXBCGJSPCKRSSYZJMSLBZZJFLJJJLGXZGYXYXLSZQYXBEXYXHGCXBPLDYHWETTWWCJMBTXCHXYQXLLXFLYXLLJLSSFWDPZSMYJCLMWYTCZPCHQEKCQBWLCQYDPLQPPQZQFJQDJHYMMCXTXDRMJWRHXCJZYLQXDYYNHYYHRSLSRSYWWZJYMTLTLLGTQCJZYABTCKZCJYCCQLJZQXALMZYHYWLWDXZXQDLLQSHGPJFJLJHJABCQZDJGTKHSSTCYJLPSWZLXZXRWGLDLZRLZXTGSLLLLZLYXXWGDZYGBDPHZPBRLWSXQBPFDWOFMWHLYPCBJCCLDMBZPBZZLCYQXLDOMZBLZWPDWYYGDSTTHCSQSCCRSSSYSLFYBFNTYJSZDFNDPDHDZZMBBLSLCMYFFGTJJQWFTMTPJWFNLBZCMMJTGBDZLQLPYFHYYMJYLSDCHDZJWJCCTLJCLDTLJJCPDDSQDSSZYBNDBJLGGJZXSXNLYCYBJXQYCBYLZCFZPPGKCXZDZFZTJJFJSJXZBNZYJQTTYJYHTYCZHYMDJXTTMPXSPLZCDWSLSHXYPZGTFMLCJTYCBPMGDKWYCYZCDSZZYHFLYCTYGWHKJYYLSJCXGYWJCBLLCSNDDBTZBSCLYZCZZSSQDLLMQYYHFSLQLLXFTYHABXGWNYWYYPLLSDLDLLBJCYXJZMLHLJDXYYQYTDLLLBUGBFDFBBQJZZMDPJHGCLGMJJPGAEHHBWCQXAXHHHZCHXYPHJAXHLPHJPGPZJQCQZGJJZZUZDMQYYBZZPHYHYBWHAZYJHYKFGDPFQSDLZMLJXKXGALXZDAGLMDGXMWZQYXXDXXPFDMMSSYMPFMDMMKXKSYZYSHDZKXSYSMMZZZMSYDNZZCZXFPLSTMZDNMXCKJMZTYYMZMZZMSXHHDCZJEMXXKLJSTLWLSQLYJZLLZJSSDPPMHNLZJCZYHMXXHGZCJMDHXTKGRMXFWMCGMWKDTKSXQMMMFZZYDKMSCLCMPCGMHSPXQPZDSSLCXKYXTWLWJYAHZJGZQMCSNXYYMMPMLKJXMHLMLQMXCTKZMJQYSZJSYSZHSYJZJCDAJZYBSDQJZGWZQQXFKDMSDJLFWEHKZQKJPEYPZYSZCDWYJFFMZZYLTTDZZEFMZLBNPPLPLPEPSZALLTYLKCKQZKGENQLWAGYXYDPXLHSXQQWQCQXQCLHYXXMLYCCWLYMQYSKGCHLCJNSZKPYZKCQZQLJPDMDZHLASXLBYDWQLWDNBQCRYDDZTJYBKBWSZDXDTNPJDTCTQDFXQQMGNXECLTTBKPWSLCTYQLPWYZZKLPYGZCQQPLLKCCYLPQMZCZQCLJSLQZDJXLDDHPZQDLJJXZQDXYZQKZLJCYQDYJPPYPQYKJYRMPCBYMCXKLLZLLFQPYLLLMBSGLCYSSLRSYSQTMXYXZQZFDZUYSYZTFFMZZSMZQHZSSCCMLYXWTPZGXZJGZGSJSGKDDHTQGGZLLBJDZLCBCHYXYZHZFYWXYZYMSDBZZYJGTSMTFXQYXQSTDGSLNXDLRYZZLRYYLXQHTXSRTZNGZXBNQQZFMYKMZJBZYMKBPNLYZPBLMCNQYZZZSJZHJCTZKHYZZJRDYZHNPXGLFZTLKGJTCTSSYLLGZRZBBQZZKLPKLCZYSSUYXBJFPNJZZXCDWXZYJXZZDJJKGGRSRJKMSMZJLSJYWQSKYHQJSXPJZZZLSNSHRNYPZTWCHKLPSRZLZXYJQXQKYSJYCZTLQZYBBYBWZPQDWWYZCYTJCJXCKCWDKKZXSGKDZXWWYYJQYYTCYTDLLXWKCZKKLCCLZCQQDZLQLCSFQCHQHSFSMQZZLNBJJZBSJHTSZDYSJQJPDLZCDCWJKJZZLPYCGMZWDJJBSJQZSYZYHHXJPBJYDSSXDZNCGLQMBTSFSBPDZDLZNFGFJGFSMPXJQLMBLGQCYYXBQKDJJQYRFKZTJDHCZKLBSDZCFJTPLLJGXHYXZCSSZZXSTJYGKGCKGYOQXJPLZPBPGTGYJZGHZQZZLBJLSQFZGKQQJZGYCZBZQTLDXRJXBSXXPZXHYZYCLWDXJJHXMFDZPFZHQHQMQGKSLYHTYCGFRZGNQXCLPDLBZCSCZQLLJBLHBZCYPZZPPDYMZZSGYHCKCPZJGSLJLNSCDSLDLXBMSTLDDFJMKDJDHZLZXLSZQPQPGJLLYBDSZGQLBZLSLKYYHZTTNTJYQTZZPSZQZTLLJTYYLLQLLQYZQLBDZLSLYYZYMDFSZSNHLXZNCZQZPBWSKRFBSYZMTHBLGJPMCZZLSTLXSHTCSYZLZBLFEQHLXFLCJLYLJQCBZLZJHHSSTBRMHXZHJZCLXFNBGXGTQJCZTMSFZKJMSSNXLJKBHSJXNTNLZDNTLMSJXGZJYJCZXYJYJWRWWQNZTNFJSZPZSHZJFYRDJSFSZJZBJFZQZZHZLXFYSBZQLZSGYFTZDCSZXZJBQMSZKJRHYJZCKMJKHCHGTXKXQGLXPXFXTRTYLXJXHDTSJXHJZJXZWZLCQSBTXWXGXTXXHXFTSDKFJHZYJFJXRZSDLLLTQSQQZQWZXSYQTWGWBZCGZLLYZBCLMQQTZHZXZXLJFRMYZFLXYSQXXJKXRMQDZDMMYYBSQBHGZMWFWXGMXLZPYYTGZYCCDXYZXYWGSYJYZNBHPZJSQSYXSXRTFYZGRHZTXSZZTHCBFCLSYXZLZQMZLMPLMXZJXSFLBYZMYQHXJSXRXSQZZZSSLYFRCZJRCRXHHZXQYDYHXSJJHZCXZBTYNSYSXJBQLPXZQPYMLXZKYXLXCJLCYSXXZZLXDLLLJJYHZXGYJWKJRWYHCPSGNRZLFZWFZZNSXGXFLZSXZZZBFCSYJDBRJKRDHHGXJLJJTGXJXXSTJTJXLYXQFCSGSWMSBCTLQZZWLZZKXJMLTMJYHSDDBXGZHDLBMYJFRZFSGCLYJBPMLYSMSXLSZJQQHJZFXGFQFQBPXZGYYQXGZTCQWYLTLGWSGWHRLFSFGZJMGMGBGTJFSYZZGZYZAFLSSPMLPFLCWBJZCLJJMZLPJJLYMQDMYYYFBGYGYZMLYZDXQYXRQQQHSYYYQXYLJTYXFSFSLLGNQCYHYCWFHCCCFXPYLYPLLZYXXXXXKQHHXSHJZCFZSCZJXCPZWHHHHHAPYLQALPQAFYHXDYLUKMZQGGGDDESRNNZLTZGCHYPPYSQJJHCLLJTOLNJPZLJLHYMHEYDYDSQYCDDHGZUNDZCLZYZLLZNTNYZGSLHSLPJJBDGWXPCDUTJCKLKCLWKLLCASSTKZZDNQNTTLYYZSSYSSZZRYLJQKCQDHHCRXRZYDGRGCWCGZQFFFPPJFZYNAKRGYWYQPQXXFKJTSZZXSWZDDFBBXTBGTZKZNPZZPZXZPJSZBMQHKCYXYLDKLJNYPKYGHGDZJXXEAHPNZKZTZCMXCXMMJXNKSZQNMNLWBWWXJKYHCPSTMCSQTZJYXTPCTPDTNNPGLLLZSJLSPBLPLQHDTNJNLYYRSZFFJFQWDPHZDWMRZCCLODAXNSSNYZRESTYJWJYJDBCFXNMWTTBYLWSTSZGYBLJPXGLBOCLHPCBJLTMXZLJYLZXCLTPNCLCKXTPZJSWCYXSFYSZDKNTLBYJCYJLLSTGQCBXRYZXBXKLYLHZLQZLNZCXWJZLJZJNCJHXMNZZGJZZXTZJXYCYYCXXJYYXJJXSSSJSTSSTTPPGQTCSXWZDCSYFPTFBFHFBBLZJCLZZDBXGCXLQPXKFZFLSYLTUWBMQJHSZBMDDBCYSCCLDXYCDDQLYJJWMQLLCSGLJJSYFPYYCCYLTJANTJJPWYCMMGQYYSXDXQMZHSZXPFTWWZQSWQRFKJLZJQQYFBRXJHHFWJJZYQAZMYFRHCYYBYQWLPEXCCZSTYRLTTDMQLYKMBBGMYYJPRKZNPBSXYXBHYZDJDNGHPMFSGMWFZMFQMMBCMZZCJJLCNUXYQLMLRYGQZCYXZLWJGCJCGGMCJNFYZZJHYCPRRCMTZQZXHFQGTJXCCJEAQCRJYHPLQLSZDJRBCQHQDYRHYLYXJSYMHZYDWLDFRYHBPYDTSSCNWBXGLPZMLZZTQSSCPJMXXYCSJYTYCGHYCJWYRXXLFEMWJNMKLLSWTXHYYYNCMMCWJDQDJZGLLJWJRKHPZGGFLCCSCZMCBLTBHBQJXQDSPDJZZGKGLFQYWBZYZJLTSTDHQHCTCBCHFLQMPWDSHYYTQWCNZZJTLBYMBPDYYYXSQKXWYYFLXXNCWCXYPMAELYKKJMZZZBRXYYQJFLJPFHHHYTZZXSGQQMHSPGDZQWBWPJHZJDYSCQWZKTXXSQLZYYMYSDZGRXCKKUJLWPYSYSCSYZLRMLQSYLJXBCXTLWDQZPCYCYKPPPNSXFYZJJRCEMHSZMSXLXGLRWGCSTLRSXBZGBZGZTCPLUJLSLYLYMTXMTZPALZXPXJTJWTCYYZLBLXBZLQMYLXPGHDSLSSDMXMBDZZSXWHAMLCZCPJMCNHJYSNSYGCHSKQMZZQDLLKABLWJXSFMOCDXJRRLYQZKJMYBYQLYHETFJZFRFKSRYXFJTWDSXXSYSQJYSLYXWJHSNLXYYXHBHAWHHJZXWMYLJCSSLKYDZTXBZSYFDXGXZJKHSXXYBSSXDPYNZWRPTQZCZENYGCXQFJYKJBZMLJCMQQXUOXSLYXXLYLLJDZBTYMHPFSTTQQWLHOKYBLZZALZXQLHZWRRQHLSTMYPYXJJXMQSJFNBXYXYJXXYQYLTHYLQYFMLKLJTMLLHSZWKZHLJMLHLJKLJSTLQXYLMBHHLNLZXQJHXCFXXLHYHJJGBYZZKBXSCQDJQDSUJZYYHZHHMGSXCSYMXFEBCQWWRBPYYJQTYZCYQYQQZYHMWFFHGZFRJFCDPXNTQYZPDYKHJLFRZXPPXZDBBGZQSTLGDGYLCQMLCHHMFYWLZYXKJLYPQHSYWMQQGQZMLZJNSQXJQSYJYCBEHSXFSZPXZWFLLBCYYJDYTDTHWZSFJMQQYJLMQXXLLDTTKHHYBFPWTYYSQQWNQWLGWDEBZWCMYGCULKJXTMXMYJSXHYBRWFYMWFRXYQMXYSZTZZTFYKMLDHQDXWYYNLCRYJBLPSXCXYWLSPRRJWXHQYPHTYDNXHHMMYWYTZCSQMTSSCCDALWZTCPQPYJLLQZYJSWXMZZMMYLMXCLMXCZMXMZSQTZPPQQBLPGXQZHFLJJHYTJSRXWZXSCCDLXTYJDCQJXSLQYCLZXLZZXMXQRJMHRHZJBHMFLJLMLCLQNLDXZLLLPYPSYJYSXCQQDCMQJZZXHNPNXZMEKMXHYKYQLXSXTXJYYHWDCWDZHQYYBGYBCYSCFGPSJNZDYZZJZXRZRQJJYMCANYRJTLDPPYZBSTJKXXZYPFDWFGZZRPYMTNGXZQBYXNBUFNQKRJQZMJEGRZGYCLKXZDSKKNSXKCLJSPJYYZLQQJYBZSSQLLLKJXTBKTYLCCDDBLSPPFYLGYDTZJYQGGKQTTFZXBDKTYYHYBBFYTYYBCLPDYTGDHRYRNJSPTCSNYJQHKLLLZSLYDXXWBCJQSPXBPJZJCJDZFFXXBRMLAZHCSNDLBJDSZBLPRZTSWSBXBCLLXXLZDJZSJPYLYXXYFTFFFBHJJXGBYXJPMMMPSSJZJMTLYZJXSWXTYLEDQPJMYGQZJGDJLQJWJQLLSJGJGYGMSCLJJXDTYGJQJQJCJZCJGDZZSXQGSJGGCXHQXSNQLZZBXHSGZXCXYLJXYXYYDFQQJHJFXDHCTXJYRXYSQTJXYEFYYSSYYJXNCYZXFXMSYSZXYYSCHSHXZZZGZZZGFJDLTYLNPZGYJYZYYQZPBXQBDZTZCZYXXYHHSQXSHDHGQHJHGYWSZTMZMLHYXGEBTYLZKQWYTJZRCLEKYSTDBCYKQQSAYXCJXWWGSBHJYZYDHCSJKQCXSWXFLTYNYZPZCCZJQTZWJQDZZZQZLJJXLSBHPYXXPSXSHHEZTXFPTLQYZZXHYTXNCFZYYHXGNXMYWXTZSJPTHHGYMXMXQZXTSBCZYJYXXTYYZYPCQLMMSZMJZZLLZXGXZAAJZYXJMZXWDXZSXZDZXLEYJJZQBHZWZZZQTZPSXZTDSXJJJZNYAZPHXYYSRNQDTHZHYYKYJHDZXZLSWCLYBZYECWCYCRYLCXNHZYDZYDYJDFRJJHTRSQTXYXJRJHOJYNXELXSFSFJZGHPZSXZSZDZCQZBYYKLSGSJHCZSHDGQGXYZGXCHXZJWYQWGYHKSSEQZZNDZFKWYSSTCLZSTSYMCDHJXXYWEYXCZAYDMPXMDSXYBSQMJMZJMTZQLPJYQZCGQHXJHHLXXHLHDLDJQCLDWBSXFZZYYSCHTYTYYBHECXHYKGJPXHHYZJFXHWHBDZFYZBCAPNPGNYDMSXHMMMMAMYNBYJTMPXYYMCTHJBZYFCGTYHWPHFTWZZEZSBZEGPFMTSKFTYCMHFLLHGPZJXZJGZJYXZSBBQSCZZLZCCSTPGXMJSFTCCZJZDJXCYBZLFCJSYZFGSZLYBCWZZBYZDZYPSWYJZXZBDSYUXLZZBZFYGCZXBZHZFTPBGZGEJBSTGKDMFHYZZJHZLLZZGJQZLSFDJSSCBZGPDLFZFZSZYZYZSYGCXSNXXCHCZXTZZLJFZGQSQYXZJQDCCZTQCDXZJYQJQCHXZTDLGSCXZSYQJQTZWLQDQZTQCHQQJZYEZZZPBWKDJFCJPZTYPQYQTTYNLMBDKTJZPQZQZZFPZSBNJLGYJDXJDZZKZGQKXDLPZJTCJDQBXDJQJSTCKNXBXZMSLYJCQMTJQWWCJQNJNLLLHJCWQTBZQYDZCZPZZDZYDDCYZZZCCJTTJFZDPRRTZTJDCQTQZDTJNPLZBCLLCTZSXKJZQZPZLBZRBTJDCXFCZDBCCJJLTQQPLDCGZDBBZJCQDCJWYNLLZYZCCDWLLXWZLXRXNTQQCZXKQLSGDFQTDDGLRLAJJTKUYMKQLLTZYTDYYCZGJWYXDXFRSKSTQTENQMRKQZHHQKDLDAZFKYPBGGPZREBZZYKZZSPEGJXGYKQZZZSLYSYYYZWFQZYLZZLZHWCHKYPQGNPGBLPLRRJYXCCSYYHSFZFYBZYYTGZXYLXCZWXXZJZBLFFLGSKHYJZEYJHLPLLLLCZGXDRZELRHGKLZZYHZLYQSZZJZQLJZFLNBHGWLCZCFJYSPYXZLZLXGCCPZBLLCYBBBBUBBCBPCRNNZCZYRBFSRLDCGQYYQXYGMQZWTZYTYJXYFWTEHZZJYWLCCNTZYJJZDEDPZDZTSYQJHDYMBJNYJZLXTSSTPHNDJXXBYXQTZQDDTJTDYYTGWSCSZQFLSHLGLBCZPHDLYZJYCKWTYTYLBNYTSDSYCCTYSZYYEBHEXHQDTWNYGYCLXTSZYSTQMYGZAZCCSZZDSLZCLZRQXYYELJSBYMXSXZTEMBBLLYYLLYTDQYSHYMRQWKFKBFXNXSBYCHXBWJYHTQBPBSBWDZYLKGZSKYHXQZJXHXJXGNLJKZLYYCDXLFYFGHLJGJYBXQLYBXQPQGZTZPLNCYPXDJYQYDYMRBESJYYHKXXSTMXRCZZYWXYQYBMCLLYZHQYZWQXDBXBZWZMSLPDMYSKFMZKLZCYQYCZLQXFZZYDQZPZYGYJYZMZXDZFYFYTTQTZHGSPCZMLCCYTZXJCYTJMKSLPZHYSNZLLYTPZCTZZCKTXDHXXTQCYFKSMQCCYYAZHTJPCYLZLYJBJXTPNYLJYYNRXSYLMMNXJSMYBCSYSYLZYLXJJQYLDZLPQBFZZBLFNDXQKCZFYWHGQMRDSXYCYTXNQQJZYYPFZXDYZFPRXEJDGYQBXRCNFYYQPGHYJDYZXGRHTKYLNWDZNTSMPKLBTHBPYSZBZTJZSZZJTYYXZPHSSZZBZCZPTQFZMYFLYPYBBJQXZMXXDJMTSYSKKBJZXHJCKLPSMKYJZCXTMLJYXRZZQSLXXQPYZXMKYXXXJCLJPRMYYGADYSKQLSNDHYZKQXZYZTCGHZTLMLWZYBWSYCTBHJHJFCWZTXWYTKZLXQSHLYJZJXTMPLPYCGLTBZZTLZJCYJGDTCLKLPLLQPJMZPAPXYZLKKTKDZCZZBNZDYDYQZJYJGMCTXLTGXSZLMLHBGLKFWNWZHDXUHLFMKYSLGXDTWWFRJEJZTZHYDXYKSHWFZCQSHKTMQQHTZHYMJDJSKHXZJZBZZXYMPAGQMSTPXLSKLZYNWRTSQLSZBPSPSGZWYHTLKSSSWHZZLYYTNXJGMJSZSUFWNLSOZTXGXLSAMMLBWLDSZYLAKQCQCTMYCFJBSLXCLZZCLXXKSBZQCLHJPSQPLSXXCKSLNHPSFQQYTXYJZLQLDXZQJZDYYDJNZPTUZDSKJFSLJHYLZSQZLBTXYDGTQFDBYAZXDZHZJNHHQBYKNXJJQCZMLLJZKSPLDYCLBBLXKLELXJLBQYCXJXGCNLCQPLZLZYJTZLJGYZDZPLTQCSXFDMNYCXGBTJDCZNBGBQYQJWGKFHTNPYQZQGBKPBBYZMTJDYTBLSQMPSXTBNPDXKLEMYYCJYNZCTLDYKZZXDDXHQSHDGMZSJYCCTAYRZLPYLTLKXSLZCGGEXCLFXLKJRTLQJAQZNCMBYDKKCXGLCZJZXJHPTDJJMZQYKQSECQZDSHHADMLZFMMZBGNTJNNLGBYJBRBTMLBYJDZXLCJLPLDLPCQDHLXZLYCBLCXZZJADJLNZMMSSSMYBHBSQKBHRSXXJMXSDZNZPXLGBRHWGGFCXGMSKLLTSJYYCQLTSKYWYYHYWXBXQYWPYWYKQLSQPTNTKHQCWDQKTWPXXHCPTHTWUMSSYHBWCRWXHJMKMZNGWTMLKFGHKJYLSYYCXWHYECLQHKQHTTQKHFZLDXQWYZYYDESBPKYRZPJFYYZJCEQDZZDLATZBBFJLLCXDLMJSSXEGYGSJQXCWBXSSZPDYZCXDNYXPPZYDLYJCZPLTXLSXYZYRXCYYYDYLWWNZSAHJSYQYHGYWWAXTJZDAXYSRLTDPSSYYFNEJDXYZHLXLLLZQZSJNYQYQQXYJGHZGZCYJCHZLYCDSHWSHJZYJXCLLNXZJJYYXNFXMWFPYLCYLLABWDDHWDXJMCXZTZPMLQZHSFHZYNZTLLDYWLSLXHYMMYLMBWWKYXYADTXYLLDJPYBPWUXJMWMLLSAFDLLYFLBHHHBQQLTZJCQJLDJTFFKMMMBYTHYGDCQRDDWRQJXNBYSNWZDBYYTBJHPYBYTTJXAAHGQDQTMYSTQXKBTZPKJLZRBEQQSSMJJBDJOTGTBXPGBKTLHQXJJJCTHXQDWJLWRFWQGWSHCKRYSWGFTGYGBXSDWDWRFHWYTJJXXXJYZYSLPYYYPAYXHYDQKXSHXYXGSKQHYWFDDDPPLCJLQQEEWXKSYYKDYPLTJTHKJLTCYYHHJTTPLTZZCDLTHQKZXQYSTEEYWYYZYXXYYSTTJKLLPZMCYHQGXYHSRMBXPLLNQYDQHXSXXWGDQBSHYLLPJJJTHYJKYPPTHYYKTYEZYENMDSHLCRPQFDGFXZPSFTLJXXJBSWYYSKSFLXLPPLBBBLBSFXFYZBSJSSYLPBBFFFFSSCJDSTZSXZRYYSYFFSYZYZBJTBCTSBSDHRTJJBYTCXYJEYLXCBNEBJDSYXYKGSJZBXBYTFZWGENYHHTHZHHXFWGCSTBGXKLSXYWMTMBYXJSTZSCDYQRCYTWXZFHMYMCXLZNSDJTTTXRYCFYJSBSDYERXJLJXBBDEYNJGHXGCKGSCYMBLXJMSZNSKGXFBNBPTHFJAAFXYXFPXMYPQDTZCXZZPXRSYWZDLYBBKTYQPQJPZYPZJZNJPZJLZZFYSBTTSLMPTZRTDXQSJEHBZYLZDHLJSQMLHTXTJECXSLZZSPKTLZKQQYFSYGYWPCPQFHQHYTQXZKRSGTTSQCZLPTXCDYYZXSQZSLXLZMYCPCQBZYXHBSXLZDLTCDXTYLZJYYZPZYZLTXJSJXHLPMYTXCQRBLZSSFJZZTNJYTXMYJHLHPPLCYXQJQQKZZSCPZKSWALQSBLCCZJSXGWWWYGYKTJBBZTDKHXHKGTGPBKQYSLPXPJCKBMLLXDZSTBKLGGQKQLSBKKTFXRMDKBFTPZFRTBBRFERQGXYJPZSSTLBZTPSZQZSJDHLJQLZBPMSMMSXLQQNHKNBLRDDNXXDHDDJCYYGYLXGZLXSYGMQQGKHBPMXYXLYTQWLWGCPBMQXCYZYDRJBHTDJYHQSHTMJSBYPLWHLZFFNYPMHXXHPLTBQPFBJWQDBYGPNZTPFZJGSDDTQSHZEAWZZYLLTYYBWJKXXGHLFKXDJTMSZSQYNZGGSWQSPHTLSSKMCLZXYSZQZXNCJDQGZDLFNYKLJCJLLZLMZZNHYDSSHTHZZLZZBBHQZWWYCRZHLYQQJBEYFXXXWHSRXWQHWPSLMSSKZTTYGYQQWRSLALHMJTQJSMXQBJJZJXZYZKXBYQXBJXSHZTSFJLXMXZXFGHKZSZGGYLCLSARJYHSLLLMZXELGLXYDJYTLFBHBPNLYZFBBHPTGJKWETZHKJJXZXXGLLJLSTGSHJJYQLQZFKCGNNDJSSZFDBCTWWSEQFHQJBSAQTGYPQLBXBMMYWXGSLZHGLZGQYFLZBYFZJFRYSFMBYZHQGFWZSYFYJJPHZBYYZFFWODGRLMFTWLBZGYCQXCDJYGZYYYYTYTYDWEGAZYHXJLZYYHLRMGRXXZCLHNELJJTJTPWJYBJJBXJJTJTEEKHWSLJPLPSFYZPQQBDLQJJTYYQLYZKDKSQJYYQZLDQTGJQYZJSUCMRYQTHTEJMFCTYHYPKMHYZWJDQFHYYXWSHCTXRLJHQXHCCYYYJLTKTTYTMXGTCJTZAYYOCZLYLBSZYWJYTSJYHBYSHFJLYGJXXTMZYYLTXXYPZLXYJZYZYYPNHMYMDYYLBLHLSYYQQLLNJJYMSOYQBZGDLYXYLCQYXTSZEGXHZGLHWBLJHEYXTWQMAKBPQCGYSHHEGQCMWYYWLJYJHYYZLLJJYLHZYHMGSLJLJXCJJYCLYCJPCPZJZJMMYLCQLNQLJQJSXYJMLSZLJQLYCMMHCFMMFPQQMFYLQMCFFQMMMMHMZNFHHJGTTHHKHSLNCHHYQDXTMMQDCYZYXYQMYQYLTDCYYYZAZZCYMZYDLZFFFMMYCQZWZZMABTBYZTDMNZZGGDFTYPCGQYTTSSFFWFDTZQSSYSTWXJHXYTSXXYLBYQHWWKXHZXWZNNZZJZJJQJCCCHYYXBZXZCYZTLLCQXYNJYCYYCYNZZQYYYEWYCZDCJYCCHYJLBTZYYCQWMPWPYMLGKDLDLGKQQBGYCHJXY"
            this.full_dict = {"a":"\u554a\u963f\u9515","ai":"\u57c3\u6328\u54ce\u5509\u54c0\u7691\u764c\u853c\u77ee\u827e\u788d\u7231\u9698\u8bf6\u6371\u55f3\u55cc\u5ad2\u7477\u66a7\u7839\u953f\u972d","an":"\u978d\u6c28\u5b89\u4ffa\u6309\u6697\u5cb8\u80fa\u6848\u8c19\u57ef\u63de\u72b4\u5eb5\u6849\u94f5\u9e4c\u9878\u9eef","ang":"\u80ae\u6602\u76ce","ao":"\u51f9\u6556\u71ac\u7ff1\u8884\u50b2\u5965\u61ca\u6fb3\u5773\u62d7\u55f7\u5662\u5c99\u5ed2\u9068\u5aaa\u9a9c\u8071\u87af\u93ca\u9ccc\u93d6","ba":"\u82ad\u634c\u6252\u53ed\u5427\u7b06\u516b\u75a4\u5df4\u62d4\u8dcb\u9776\u628a\u8019\u575d\u9738\u7f62\u7238\u8307\u83dd\u8406\u636d\u5c9c\u705e\u6777\u94af\u7c91\u9c85\u9b43","bai":"\u767d\u67cf\u767e\u6446\u4f70\u8d25\u62dc\u7a17\u859c\u63b0\u97b4","ban":"\u6591\u73ed\u642c\u6273\u822c\u9881\u677f\u7248\u626e\u62cc\u4f34\u74e3\u534a\u529e\u7eca\u962a\u5742\u8c73\u94a3\u7622\u764d\u8228","bang":"\u90a6\u5e2e\u6886\u699c\u8180\u7ed1\u68d2\u78c5\u868c\u9551\u508d\u8c24\u84a1\u8783","bao":"\u82de\u80de\u5305\u8912\u96f9\u4fdd\u5821\u9971\u5b9d\u62b1\u62a5\u66b4\u8c79\u9c8d\u7206\u52f9\u8446\u5b80\u5b62\u7172\u9e28\u8913\u8db5\u9f85","bo":"\u5265\u8584\u73bb\u83e0\u64ad\u62e8\u94b5\u6ce2\u535a\u52c3\u640f\u94c2\u7b94\u4f2f\u5e1b\u8236\u8116\u818a\u6e24\u6cca\u9a73\u4eb3\u8543\u5575\u997d\u6a97\u64d8\u7934\u94b9\u9e41\u7c38\u8ddb","bei":"\u676f\u7891\u60b2\u5351\u5317\u8f88\u80cc\u8d1d\u94a1\u500d\u72c8\u5907\u60eb\u7119\u88ab\u5b5b\u9642\u90b6\u57e4\u84d3\u5457\u602b\u6096\u789a\u9e4e\u8919\u943e","ben":"\u5954\u82ef\u672c\u7b28\u755a\u574c\u951b","beng":"\u5d29\u7ef7\u752d\u6cf5\u8e66\u8ff8\u552a\u5623\u750f","bi":"\u903c\u9f3b\u6bd4\u9119\u7b14\u5f7c\u78a7\u84d6\u853d\u6bd5\u6bd9\u6bd6\u5e01\u5e87\u75f9\u95ed\u655d\u5f0a\u5fc5\u8f9f\u58c1\u81c2\u907f\u965b\u5315\u4ef3\u4ffe\u8298\u835c\u8378\u5421\u54d4\u72f4\u5eb3\u610e\u6ed7\u6fde\u5f3c\u59a3\u5a62\u5b16\u74a7\u8d32\u7540\u94cb\u79d5\u88e8\u7b5a\u7b85\u7be6\u822d\u895e\u8df8\u9ac0","bian":"\u97ad\u8fb9\u7f16\u8d2c\u6241\u4fbf\u53d8\u535e\u8fa8\u8fa9\u8fab\u904d\u533e\u5f01\u82c4\u5fed\u6c74\u7f0f\u7178\u782d\u78a5\u7a39\u7a86\u8759\u7b3e\u9cca","biao":"\u6807\u5f6a\u8198\u8868\u5a4a\u9aa0\u98d1\u98d9\u98da\u706c\u9556\u9573\u762d\u88f1\u9cd4","bie":"\u9cd6\u618b\u522b\u762a\u8e69\u9cd8","bin":"\u5f6c\u658c\u6fd2\u6ee8\u5bbe\u6448\u50a7\u6d5c\u7f24\u73a2\u6ba1\u8191\u9554\u9acc\u9b13","bing":"\u5175\u51b0\u67c4\u4e19\u79c9\u997c\u70b3\u75c5\u5e76\u7980\u90b4\u6452\u7ee0\u678b\u69df\u71f9","bu":"\u6355\u535c\u54fa\u8865\u57e0\u4e0d\u5e03\u6b65\u7c3f\u90e8\u6016\u62ca\u535f\u900b\u74ff\u6661\u949a\u91ad","ca":"\u64e6\u5693\u7924","cai":"\u731c\u88c1\u6750\u624d\u8d22\u776c\u8e29\u91c7\u5f69\u83dc\u8521","can":"\u9910\u53c2\u8695\u6b8b\u60ed\u60e8\u707f\u9a96\u74a8\u7cb2\u9eea","cang":"\u82cd\u8231\u4ed3\u6ca7\u85cf\u4f27","cao":"\u64cd\u7cd9\u69fd\u66f9\u8349\u8279\u5608\u6f15\u87ac\u825a","ce":"\u5395\u7b56\u4fa7\u518c\u6d4b\u5202\u5e3b\u607b","ceng":"\u5c42\u8e6d\u564c","cha":"\u63d2\u53c9\u832c\u8336\u67e5\u78b4\u643d\u5bdf\u5c94\u5dee\u8be7\u7339\u9987\u6c4a\u59f9\u6748\u6942\u69ce\u6aab\u9497\u9538\u9572\u8869","chai":"\u62c6\u67f4\u8c7a\u4faa\u8308\u7625\u867f\u9f87","chan":"\u6400\u63ba\u8749\u998b\u8c17\u7f20\u94f2\u4ea7\u9610\u98a4\u5181\u8c04\u8c36\u8487\u5edb\u5fcf\u6f7a\u6fb6\u5b71\u7fbc\u5a75\u5b17\u9aa3\u89c7\u7985\u9561\u88e3\u87fe\u8e94","chang":"\u660c\u7316\u573a\u5c1d\u5e38\u957f\u507f\u80a0\u5382\u655e\u7545\u5531\u5021\u4f25\u9b2f\u82cc\u83d6\u5f9c\u6005\u60dd\u960a\u5a3c\u5ae6\u6636\u6c05\u9cb3","chao":"\u8d85\u6284\u949e\u671d\u5632\u6f6e\u5de2\u5435\u7092\u600a\u7ec9\u6641\u8016","che":"\u8f66\u626f\u64a4\u63a3\u5f7b\u6f88\u577c\u5c6e\u7817","chen":"\u90f4\u81e3\u8fb0\u5c18\u6668\u5ff1\u6c89\u9648\u8d81\u886c\u79f0\u8c0c\u62bb\u55d4\u5bb8\u741b\u6987\u809c\u80c2\u789c\u9f80","cheng":"\u6491\u57ce\u6a59\u6210\u5448\u4e58\u7a0b\u60e9\u6f84\u8bda\u627f\u901e\u9a8b\u79e4\u57d5\u5d4a\u5fb5\u6d48\u67a8\u67fd\u6a18\u665f\u584d\u77a0\u94d6\u88ce\u86cf\u9172","chi":"\u5403\u75f4\u6301\u5319\u6c60\u8fdf\u5f1b\u9a70\u803b\u9f7f\u4f88\u5c3a\u8d64\u7fc5\u65a5\u70bd\u50ba\u5880\u82aa\u830c\u640b\u53f1\u54e7\u557b\u55e4\u5f73\u996c\u6cb2\u5ab8\u6555\u80dd\u7719\u7735\u9e31\u761b\u892b\u86a9\u87ad\u7b1e\u7bea\u8c49\u8e05\u8e1f\u9b51","chong":"\u5145\u51b2\u866b\u5d07\u5ba0\u833a\u5fe1\u61a7\u94f3\u825f","chou":"\u62bd\u916c\u7574\u8e0c\u7a20\u6101\u7b79\u4ec7\u7ef8\u7785\u4e11\u4fe6\u5733\u5e31\u60c6\u6eb4\u59af\u7633\u96e0\u9c8b","chu":"\u81ed\u521d\u51fa\u6a71\u53a8\u8e87\u9504\u96cf\u6ec1\u9664\u695a\u7840\u50a8\u77d7\u6410\u89e6\u5904\u4e8d\u520d\u61b7\u7ecc\u6775\u696e\u6a17\u870d\u8e70\u9edc","chuan":"\u63e3\u5ddd\u7a7f\u693d\u4f20\u8239\u5598\u4e32\u63be\u821b\u60f4\u9044\u5ddb\u6c1a\u948f\u9569\u8221","chuang":"\u75ae\u7a97\u5e62\u5e8a\u95ef\u521b\u6006","chui":"\u5439\u708a\u6376\u9524\u5782\u9672\u68f0\u69cc","chun":"\u6625\u693f\u9187\u5507\u6df3\u7eaf\u8822\u4fc3\u83bc\u6c8c\u80ab\u6710\u9e51\u877d","chuo":"\u6233\u7ef0\u851f\u8fb6\u8f8d\u955e\u8e14\u9f8a","ci":"\u75b5\u8328\u78c1\u96cc\u8f9e\u6148\u74f7\u8bcd\u6b64\u523a\u8d50\u6b21\u8360\u5472\u5d6f\u9e5a\u8785\u7ccd\u8d91","cong":"\u806a\u8471\u56f1\u5306\u4ece\u4e1b\u506c\u82c1\u6dd9\u9aa2\u742e\u7481\u679e","cu":"\u51d1\u7c97\u918b\u7c07\u731d\u6b82\u8e59","cuan":"\u8e7f\u7be1\u7a9c\u6c46\u64ba\u6615\u7228","cui":"\u6467\u5d14\u50ac\u8106\u7601\u7cb9\u6dec\u7fe0\u8403\u60b4\u7480\u69b1\u96b9","cun":"\u6751\u5b58\u5bf8\u78cb\u5fd6\u76b4","cuo":"\u64ae\u6413\u63aa\u632b\u9519\u539d\u811e\u9509\u77ec\u75e4\u9e7e\u8e49\u8e9c","da":"\u642d\u8fbe\u7b54\u7629\u6253\u5927\u8037\u54d2\u55d2\u601b\u59b2\u75b8\u8921\u7b2a\u977c\u9791","dai":"\u5446\u6b79\u50a3\u6234\u5e26\u6b86\u4ee3\u8d37\u888b\u5f85\u902e\u6020\u57ed\u7519\u5454\u5cb1\u8fe8\u902f\u9a80\u7ed0\u73b3\u9edb","dan":"\u803d\u62c5\u4e39\u5355\u90f8\u63b8\u80c6\u65e6\u6c2e\u4f46\u60ee\u6de1\u8bde\u5f39\u86cb\u4ebb\u510b\u5369\u840f\u5556\u6fb9\u6a90\u6b9a\u8d55\u7708\u7605\u8043\u7baa","dang":"\u5f53\u6321\u515a\u8361\u6863\u8c20\u51fc\u83ea\u5b95\u7800\u94db\u88c6","dao":"\u5200\u6363\u8e48\u5012\u5c9b\u7977\u5bfc\u5230\u7a3b\u60bc\u9053\u76d7\u53e8\u5541\u5fc9\u6d2e\u6c18\u7118\u5fd1\u7e9b","de":"\u5fb7\u5f97\u7684\u951d","deng":"\u8e6c\u706f\u767b\u7b49\u77aa\u51f3\u9093\u5654\u5d9d\u6225\u78f4\u956b\u7c26","di":"\u5824\u4f4e\u6ef4\u8fea\u654c\u7b1b\u72c4\u6da4\u7fdf\u5ae1\u62b5\u5e95\u5730\u8482\u7b2c\u5e1d\u5f1f\u9012\u7f14\u6c10\u7c74\u8bcb\u8c1b\u90b8\u577b\u839c\u837b\u5600\u5a23\u67e2\u68e3\u89cc\u7825\u78b2\u7747\u955d\u7f9d\u9ab6","dian":"\u98a0\u6382\u6ec7\u7898\u70b9\u5178\u975b\u57ab\u7535\u4f43\u7538\u5e97\u60e6\u5960\u6dc0\u6bbf\u4e36\u963d\u576b\u57dd\u5dc5\u73b7\u765c\u766b\u7c1f\u8e2e","diao":"\u7889\u53fc\u96d5\u51cb\u5201\u6389\u540a\u9493\u8c03\u8f7a\u94de\u8729\u7c9c\u8c82","die":"\u8dcc\u7239\u789f\u8776\u8fed\u8c0d\u53e0\u4f5a\u57a4\u581e\u63f2\u558b\u6e2b\u8f76\u7252\u74de\u8936\u800b\u8e40\u9cbd\u9cce","ding":"\u4e01\u76ef\u53ee\u9489\u9876\u9f0e\u952d\u5b9a\u8ba2\u4e22\u4ec3\u5576\u738e\u815a\u7887\u753a\u94e4\u7594\u8035\u914a","dong":"\u4e1c\u51ac\u8463\u61c2\u52a8\u680b\u4f97\u606b\u51bb\u6d1e\u578c\u549a\u5cbd\u5cd2\u5902\u6c21\u80e8\u80f4\u7850\u9e2b","dou":"\u515c\u6296\u6597\u9661\u8c46\u9017\u75d8\u8538\u94ad\u7aa6\u7aac\u86aa\u7bfc\u9161","du":"\u90fd\u7763\u6bd2\u728a\u72ec\u8bfb\u5835\u7779\u8d4c\u675c\u9540\u809a\u5ea6\u6e21\u5992\u828f\u561f\u6e0e\u691f\u6a50\u724d\u8839\u7b03\u9ad1\u9ee9","duan":"\u7aef\u77ed\u953b\u6bb5\u65ad\u7f0e\u5f56\u6934\u7145\u7c16","dui":"\u5806\u5151\u961f\u5bf9\u603c\u619d\u7893","dun":"\u58a9\u5428\u8e72\u6566\u987f\u56e4\u949d\u76fe\u9041\u7096\u7818\u7905\u76f9\u9566\u8db8","duo":"\u6387\u54c6\u591a\u593a\u579b\u8eb2\u6735\u8dfa\u8235\u5241\u60f0\u5815\u5484\u54da\u7f0d\u67c1\u94ce\u88f0\u8e31","e":"\u86fe\u5ce8\u9e45\u4fc4\u989d\u8bb9\u5a25\u6076\u5384\u627c\u904f\u9102\u997f\u5669\u8c14\u57a9\u57ad\u82ca\u83aa\u843c\u5443\u6115\u5c59\u5a40\u8f6d\u66f7\u816d\u786a\u9507\u9537\u9e57\u989a\u9cc4","en":"\u6069\u84bd\u6441\u5514\u55ef","er":"\u800c\u513f\u8033\u5c14\u9975\u6d31\u4e8c\u8d30\u8fe9\u73e5\u94d2\u9e38\u9c95","fa":"\u53d1\u7f5a\u7b4f\u4f10\u4e4f\u9600\u6cd5\u73d0\u57a1\u781d","fan":"\u85e9\u5e06\u756a\u7ffb\u6a0a\u77fe\u9492\u7e41\u51e1\u70e6\u53cd\u8fd4\u8303\u8d29\u72af\u996d\u6cdb\u8629\u5e61\u72ad\u68b5\u6535\u71d4\u7548\u8e6f","fang":"\u574a\u82b3\u65b9\u80aa\u623f\u9632\u59a8\u4eff\u8bbf\u7eba\u653e\u531a\u90a1\u5f77\u94ab\u822b\u9c82","fei":"\u83f2\u975e\u5561\u98de\u80a5\u532a\u8bfd\u5420\u80ba\u5e9f\u6cb8\u8d39\u82be\u72d2\u60b1\u6ddd\u5983\u7ecb\u7eef\u69a7\u8153\u6590\u6249\u7953\u7829\u9544\u75f1\u871a\u7bda\u7fe1\u970f\u9cb1","fen":"\u82ac\u915a\u5429\u6c1b\u5206\u7eb7\u575f\u711a\u6c7e\u7c89\u594b\u4efd\u5fff\u6124\u7caa\u507e\u7035\u68fc\u610d\u9cbc\u9f22","feng":"\u4e30\u5c01\u67ab\u8702\u5cf0\u950b\u98ce\u75af\u70fd\u9022\u51af\u7f1d\u8bbd\u5949\u51e4\u4ff8\u9146\u8451\u6ca3\u781c","fu":"\u4f5b\u5426\u592b\u6577\u80a4\u5b75\u6276\u62c2\u8f90\u5e45\u6c1f\u7b26\u4f0f\u4fd8\u670d\u6d6e\u6daa\u798f\u88b1\u5f17\u752b\u629a\u8f85\u4fef\u91dc\u65a7\u812f\u8151\u5e9c\u8150\u8d74\u526f\u8986\u8d4b\u590d\u5085\u4ed8\u961c\u7236\u8179\u8d1f\u5bcc\u8ba3\u9644\u5987\u7f1a\u5490\u5310\u51eb\u90db\u8299\u82fb\u832f\u83a9\u83d4\u544b\u5e5e\u6ecf\u8274\u5b5a\u9a78\u7ec2\u6874\u8d59\u9efb\u9efc\u7f58\u7a03\u99a5\u864d\u86a8\u8709\u8760\u876e\u9eb8\u8dba\u8dd7\u9cc6","ga":"\u5676\u560e\u86e4\u5c2c\u5477\u5c15\u5c1c\u65ee\u9486","gai":"\u8be5\u6539\u6982\u9499\u76d6\u6e89\u4e10\u9654\u5793\u6224\u8d45\u80f2","gan":"\u5e72\u7518\u6746\u67d1\u7aff\u809d\u8d76\u611f\u79c6\u6562\u8d63\u5769\u82f7\u5c34\u64c0\u6cd4\u6de6\u6f89\u7ec0\u6a44\u65f0\u77f8\u75b3\u9150","gang":"\u5188\u521a\u94a2\u7f38\u809b\u7eb2\u5c97\u6e2f\u6206\u7f61\u9883\u7b7b","gong":"\u6760\u5de5\u653b\u529f\u606d\u9f9a\u4f9b\u8eac\u516c\u5bab\u5f13\u5de9\u6c5e\u62f1\u8d21\u5171\u857b\u5efe\u54a3\u73d9\u80b1\u86a3\u86e9\u89e5","gao":"\u7bd9\u768b\u9ad8\u818f\u7f94\u7cd5\u641e\u9550\u7a3f\u544a\u777e\u8bf0\u90dc\u84bf\u85c1\u7f1f\u69d4\u69c1\u6772\u9506","ge":"\u54e5\u6b4c\u6401\u6208\u9e3d\u80f3\u7599\u5272\u9769\u845b\u683c\u9601\u9694\u94ec\u4e2a\u5404\u9b32\u4ee1\u54ff\u5865\u55dd\u7ea5\u643f\u8188\u784c\u94ea\u9549\u88bc\u988c\u867c\u8238\u9abc\u9ac2","gei":"\u7ed9","gen":"\u6839\u8ddf\u4e98\u831b\u54cf\u826e","geng":"\u8015\u66f4\u5e9a\u7fb9\u57c2\u803f\u6897\u54fd\u8d53\u9ca0","gou":"\u94a9\u52fe\u6c9f\u82df\u72d7\u57a2\u6784\u8d2d\u591f\u4f5d\u8bdf\u5ca3\u9058\u5abe\u7f11\u89cf\u5f40\u9e32\u7b31\u7bdd\u97b2","gu":"\u8f9c\u83c7\u5495\u7b8d\u4f30\u6cbd\u5b64\u59d1\u9f13\u53e4\u86ca\u9aa8\u8c37\u80a1\u6545\u987e\u56fa\u96c7\u560f\u8bc2\u83f0\u54cc\u5d2e\u6c69\u688f\u8f71\u726f\u727f\u80cd\u81cc\u6bc2\u77bd\u7f5f\u94b4\u9522\u74e0\u9e2a\u9e44\u75fc\u86c4\u9164\u89da\u9cb4\u9ab0\u9e58","gua":"\u522e\u74dc\u5250\u5be1\u6302\u8902\u5366\u8bd6\u5471\u681d\u9e39","guai":"\u4e56\u62d0\u602a\u54d9","guan":"\u68fa\u5173\u5b98\u51a0\u89c2\u7ba1\u9986\u7f50\u60ef\u704c\u8d2f\u500c\u839e\u63bc\u6dab\u76e5\u9e73\u9ccf","guang":"\u5149\u5e7f\u901b\u72b7\u6844\u80f1\u7592","gui":"\u7470\u89c4\u572d\u7845\u5f52\u9f9f\u95fa\u8f68\u9b3c\u8be1\u7678\u6842\u67dc\u8dea\u8d35\u523d\u5326\u523f\u5e8b\u5b84\u59ab\u6867\u7085\u6677\u7688\u7c0b\u9c91\u9cdc","gun":"\u8f8a\u6eda\u68cd\u4e28\u886e\u7ef2\u78d9\u9ca7","guo":"\u9505\u90ed\u56fd\u679c\u88f9\u8fc7\u9998\u8803\u57da\u63b4\u5459\u56d7\u5e3c\u5d1e\u7313\u6901\u8662\u951e\u8052\u872e\u873e\u8748","ha":"\u54c8","hai":"\u9ab8\u5b69\u6d77\u6c26\u4ea5\u5bb3\u9a87\u54b4\u55e8\u988f\u91a2","han":"\u9163\u61a8\u90af\u97e9\u542b\u6db5\u5bd2\u51fd\u558a\u7f55\u7ff0\u64bc\u634d\u65f1\u61be\u608d\u710a\u6c57\u6c49\u9097\u83e1\u6496\u961a\u701a\u6657\u7113\u9894\u86b6\u9f3e","hen":"\u592f\u75d5\u5f88\u72e0\u6068","hang":"\u676d\u822a\u6c86\u7ed7\u73e9\u6841","hao":"\u58d5\u568e\u8c6a\u6beb\u90dd\u597d\u8017\u53f7\u6d69\u8585\u55e5\u5686\u6fe0\u704f\u660a\u7693\u98a2\u869d","he":"\u5475\u559d\u8377\u83cf\u6838\u79be\u548c\u4f55\u5408\u76d2\u8c89\u9602\u6cb3\u6db8\u8d6b\u8910\u9e64\u8d3a\u8bc3\u52be\u58d1\u85ff\u55d1\u55ec\u9616\u76cd\u86b5\u7fee","hei":"\u563f\u9ed1","heng":"\u54fc\u4ea8\u6a2a\u8861\u6052\u8a07\u8605","hong":"\u8f70\u54c4\u70d8\u8679\u9e3f\u6d2a\u5b8f\u5f18\u7ea2\u9ec9\u8ba7\u836d\u85a8\u95f3\u6cd3","hou":"\u5589\u4faf\u7334\u543c\u539a\u5019\u540e\u5820\u5f8c\u9005\u760a\u7bcc\u7cc7\u9c8e\u9aba","hu":"\u547c\u4e4e\u5ffd\u745a\u58f6\u846b\u80e1\u8774\u72d0\u7cca\u6e56\u5f27\u864e\u552c\u62a4\u4e92\u6caa\u6237\u51b1\u553f\u56eb\u5cb5\u7322\u6019\u60da\u6d52\u6ef9\u7425\u69f2\u8f77\u89f3\u70c0\u7173\u623d\u6248\u795c\u9e55\u9e71\u7b0f\u9190\u659b","hua":"\u82b1\u54d7\u534e\u733e\u6ed1\u753b\u5212\u5316\u8bdd\u5290\u6d4d\u9a85\u6866\u94e7\u7a1e","huai":"\u69d0\u5f8a\u6000\u6dee\u574f\u8fd8\u8e1d","huan":"\u6b22\u73af\u6853\u7f13\u6362\u60a3\u5524\u75ea\u8c62\u7115\u6da3\u5ba6\u5e7b\u90c7\u5942\u57b8\u64d0\u571c\u6d39\u6d63\u6f36\u5bf0\u902d\u7f33\u953e\u9ca9\u9b1f","huang":"\u8352\u614c\u9ec4\u78fa\u8757\u7c27\u7687\u51f0\u60f6\u714c\u6643\u5e4c\u604d\u8c0e\u968d\u5fa8\u6e5f\u6f62\u9051\u749c\u8093\u7640\u87e5\u7bc1\u9cc7","hui":"\u7070\u6325\u8f89\u5fbd\u6062\u86d4\u56de\u6bc1\u6094\u6167\u5349\u60e0\u6666\u8d3f\u79fd\u4f1a\u70e9\u6c47\u8bb3\u8bf2\u7ed8\u8bd9\u8334\u835f\u8559\u54d5\u5599\u96b3\u6d04\u5f57\u7f0b\u73f2\u6656\u605a\u867a\u87ea\u9ebe","hun":"\u8364\u660f\u5a5a\u9b42\u6d51\u6df7\u8be8\u9984\u960d\u6eb7\u7f17","huo":"\u8c41\u6d3b\u4f19\u706b\u83b7\u6216\u60d1\u970d\u8d27\u7978\u6509\u56af\u5925\u94ac\u952a\u956c\u8020\u8816","ji":"\u51fb\u573e\u57fa\u673a\u7578\u7a3d\u79ef\u7b95\u808c\u9965\u8ff9\u6fc0\u8ba5\u9e21\u59ec\u7ee9\u7f09\u5409\u6781\u68d8\u8f91\u7c4d\u96c6\u53ca\u6025\u75be\u6c72\u5373\u5ac9\u7ea7\u6324\u51e0\u810a\u5df1\u84df\u6280\u5180\u5b63\u4f0e\u796d\u5242\u60b8\u6d4e\u5bc4\u5bc2\u8ba1\u8bb0\u65e2\u5fcc\u9645\u5993\u7ee7\u7eaa\u5c45\u4e0c\u4e69\u525e\u4f76\u4f74\u8114\u58bc\u82a8\u82b0\u8401\u84ba\u857a\u638e\u53fd\u54ad\u54dc\u5527\u5c8c\u5d74\u6d0e\u5f50\u5c50\u9aa5\u757f\u7391\u696b\u6b9b\u621f\u6222\u8d4d\u89ca\u7284\u9f51\u77f6\u7f81\u5d47\u7a37\u7620\u7635\u866e\u7b08\u7b04\u66a8\u8dfb\u8dfd\u9701\u9c9a\u9cab\u9afb\u9e82","jia":"\u5609\u67b7\u5939\u4f73\u5bb6\u52a0\u835a\u988a\u8d3e\u7532\u94be\u5047\u7a3c\u4ef7\u67b6\u9a7e\u5ac1\u4f3d\u90cf\u62ee\u5cac\u6d43\u8fe6\u73c8\u621b\u80db\u605d\u94d7\u9553\u75c2\u86f1\u7b33\u8888\u8dcf","jian":"\u6b7c\u76d1\u575a\u5c16\u7b3a\u95f4\u714e\u517c\u80a9\u8270\u5978\u7f04\u8327\u68c0\u67ec\u78b1\u7877\u62e3\u6361\u7b80\u4fed\u526a\u51cf\u8350\u69db\u9274\u8df5\u8d31\u89c1\u952e\u7bad\u4ef6\u5065\u8230\u5251\u996f\u6e10\u6e85\u6da7\u5efa\u50ed\u8c0f\u8c2b\u83c5\u84b9\u641b\u56dd\u6e54\u8e47\u8b07\u7f23\u67a7\u67d9\u6957\u620b\u622c\u726e\u728d\u6bfd\u8171\u7751\u950f\u9e63\u88e5\u7b15\u7bb4\u7fe6\u8dbc\u8e3a\u9ca3\u97af","jiang":"\u50f5\u59dc\u5c06\u6d46\u6c5f\u7586\u848b\u6868\u5956\u8bb2\u5320\u9171\u964d\u8333\u6d1a\u7edb\u7f30\u729f\u7913\u8029\u7ce8\u8c47","jiao":"\u8549\u6912\u7901\u7126\u80f6\u4ea4\u90ca\u6d47\u9a84\u5a07\u56bc\u6405\u94f0\u77eb\u4fa5\u811a\u72e1\u89d2\u997a\u7f34\u7ede\u527f\u6559\u9175\u8f7f\u8f83\u53eb\u4f7c\u50ec\u832d\u6322\u564d\u5ce4\u5fbc\u59e3\u7e9f\u656b\u768e\u9e6a\u86df\u91ae\u8de4\u9c9b","jie":"\u7a96\u63ed\u63a5\u7686\u79f8\u8857\u9636\u622a\u52ab\u8282\u6854\u6770\u6377\u776b\u7aed\u6d01\u7ed3\u89e3\u59d0\u6212\u85c9\u82a5\u754c\u501f\u4ecb\u75a5\u8beb\u5c4a\u5048\u8ba6\u8bd8\u5588\u55df\u736c\u5a55\u5b51\u6840\u7352\u78a3\u9534\u7596\u88b7\u9889\u86a7\u7faf\u9c92\u9ab1\u9aeb","jin":"\u5dfe\u7b4b\u65a4\u91d1\u4eca\u6d25\u895f\u7d27\u9526\u4ec5\u8c28\u8fdb\u9773\u664b\u7981\u8fd1\u70ec\u6d78\u5c3d\u537a\u8369\u5807\u5664\u9991\u5ed1\u5997\u7f19\u747e\u69ff\u8d46\u89d0\u9485\u9513\u887f\u77dc","jing":"\u52b2\u8346\u5162\u830e\u775b\u6676\u9cb8\u4eac\u60ca\u7cbe\u7cb3\u7ecf\u4e95\u8b66\u666f\u9888\u9759\u5883\u656c\u955c\u5f84\u75c9\u9756\u7adf\u7ade\u51c0\u522d\u5106\u9631\u83c1\u734d\u61ac\u6cfe\u8ff3\u5f2a\u5a67\u80bc\u80eb\u8148\u65cc","jiong":"\u70af\u7a98\u5182\u8fe5\u6243","jiu":"\u63ea\u7a76\u7ea0\u7396\u97ed\u4e45\u7078\u4e5d\u9152\u53a9\u6551\u65e7\u81fc\u8205\u548e\u5c31\u759a\u50e6\u557e\u9604\u67e9\u6855\u9e6b\u8d73\u9b0f","ju":"\u97a0\u62d8\u72d9\u75bd\u9a79\u83ca\u5c40\u5480\u77e9\u4e3e\u6cae\u805a\u62d2\u636e\u5de8\u5177\u8ddd\u8e1e\u952f\u4ff1\u53e5\u60e7\u70ac\u5267\u5028\u8bb5\u82e3\u82f4\u8392\u63ac\u907d\u5c66\u741a\u67b8\u6910\u6998\u6989\u6a58\u728b\u98d3\u949c\u9514\u7aad\u88fe\u8d84\u91b5\u8e3d\u9f83\u96ce\u97ab","juan":"\u6350\u9e43\u5a1f\u5026\u7737\u5377\u7ee2\u9104\u72f7\u6d93\u684a\u8832\u9529\u954c\u96bd","jue":"\u6485\u652b\u6289\u6398\u5014\u7235\u89c9\u51b3\u8bc0\u7edd\u53a5\u5282\u8c32\u77cd\u8568\u5658\u5d1b\u7357\u5b53\u73cf\u6877\u6a5b\u721d\u9562\u8e76\u89d6","jun":"\u5747\u83cc\u94a7\u519b\u541b\u5cfb\u4fca\u7ae3\u6d5a\u90e1\u9a8f\u6343\u72fb\u76b2\u7b60\u9e87","ka":"\u5580\u5496\u5361\u4f67\u5494\u80e9","ke":"\u54af\u5777\u82db\u67ef\u68f5\u78d5\u9897\u79d1\u58f3\u54b3\u53ef\u6e34\u514b\u523b\u5ba2\u8bfe\u5ca2\u606a\u6e98\u9a92\u7f02\u73c2\u8f72\u6c2a\u778c\u94b6\u75b4\u7aa0\u874c\u9ac1","kai":"\u5f00\u63e9\u6977\u51ef\u6168\u5240\u57b2\u8488\u5ffe\u607a\u94e0\u950e","kan":"\u520a\u582a\u52d8\u574e\u780d\u770b\u4f83\u51f5\u83b0\u83b6\u6221\u9f9b\u77b0","kang":"\u5eb7\u6177\u7ce0\u625b\u6297\u4ea2\u7095\u5751\u4f09\u95f6\u94aa","kao":"\u8003\u62f7\u70e4\u9760\u5c3b\u6832\u7292\u94d0","ken":"\u80af\u5543\u57a6\u6073\u57a0\u88c9\u9880","keng":"\u542d\u5fd0\u94ff","kong":"\u7a7a\u6050\u5b54\u63a7\u5025\u5d06\u7b9c","kou":"\u62a0\u53e3\u6263\u5bc7\u82a4\u853b\u53e9\u770d\u7b58","ku":"\u67af\u54ed\u7a9f\u82e6\u9177\u5e93\u88e4\u5233\u5800\u55be\u7ed4\u9ab7","kua":"\u5938\u57ae\u630e\u8de8\u80ef\u4f89","kuai":"\u5757\u7b77\u4fa9\u5feb\u84af\u90d0\u8489\u72ef\u810d","kuan":"\u5bbd\u6b3e\u9acb","kuang":"\u5321\u7b50\u72c2\u6846\u77ff\u7736\u65f7\u51b5\u8bd3\u8bf3\u909d\u5739\u593c\u54d0\u7ea9\u8d36","kui":"\u4e8f\u76d4\u5cbf\u7aa5\u8475\u594e\u9b41\u5080\u9988\u6127\u6e83\u9997\u532e\u5914\u9697\u63c6\u55b9\u559f\u609d\u6126\u9615\u9035\u668c\u777d\u8069\u8770\u7bd1\u81fe\u8dec","kun":"\u5764\u6606\u6346\u56f0\u6083\u9603\u7428\u951f\u918c\u9cb2\u9ae1","kuo":"\u62ec\u6269\u5ed3\u9614\u86de","la":"\u5783\u62c9\u5587\u8721\u814a\u8fa3\u5566\u524c\u647a\u908b\u65ef\u782c\u760c","lai":"\u83b1\u6765\u8d56\u5d03\u5f95\u6d9e\u6fd1\u8d49\u7750\u94fc\u765e\u7c41","lan":"\u84dd\u5a6a\u680f\u62e6\u7bee\u9611\u5170\u6f9c\u8c30\u63fd\u89c8\u61d2\u7f06\u70c2\u6ee5\u5549\u5c9a\u61d4\u6f24\u6984\u6593\u7f71\u9567\u8934","lang":"\u7405\u6994\u72fc\u5eca\u90ce\u6717\u6d6a\u83a8\u8497\u5577\u9606\u9512\u7a02\u8782","lao":"\u635e\u52b3\u7262\u8001\u4f6c\u59e5\u916a\u70d9\u6d9d\u5520\u5d02\u6833\u94d1\u94f9\u75e8\u91aa","le":"\u52d2\u4e50\u808b\u4ec2\u53fb\u561e\u6cd0\u9cd3","lei":"\u96f7\u956d\u857e\u78ca\u7d2f\u5121\u5792\u64c2\u7c7b\u6cea\u7fb8\u8bd4\u837d\u54a7\u6f2f\u5ad8\u7f27\u6a91\u8012\u9179","ling":"\u68f1\u51b7\u62ce\u73b2\u83f1\u96f6\u9f84\u94c3\u4f36\u7f9a\u51cc\u7075\u9675\u5cad\u9886\u53e6\u4ee4\u9143\u5844\u82d3\u5464\u56f9\u6ce0\u7eeb\u67c3\u68c2\u74f4\u8046\u86c9\u7fce\u9cae","leng":"\u695e\u6123","li":"\u5398\u68a8\u7281\u9ece\u7bf1\u72f8\u79bb\u6f13\u7406\u674e\u91cc\u9ca4\u793c\u8389\u8354\u540f\u6817\u4e3d\u5389\u52b1\u783e\u5386\u5229\u5088\u4f8b\u4fd0\u75e2\u7acb\u7c92\u6ca5\u96b6\u529b\u7483\u54e9\u4fea\u4fda\u90e6\u575c\u82c8\u8385\u84e0\u85dc\u6369\u5456\u5533\u55b1\u7301\u6ea7\u6fa7\u9026\u5a0c\u5ae0\u9a8a\u7f21\u73de\u67a5\u680e\u8f79\u623e\u783a\u8a48\u7f79\u9502\u9e42\u75a0\u75ac\u86ce\u870a\u8821\u7b20\u7be5\u7c9d\u91b4\u8dde\u96f3\u9ca1\u9ce2\u9ee7","lian":"\u4fe9\u8054\u83b2\u8fde\u9570\u5ec9\u601c\u6d9f\u5e18\u655b\u8138\u94fe\u604b\u70bc\u7ec3\u631b\u8539\u5941\u6f4b\u6fc2\u5a08\u740f\u695d\u6b93\u81c1\u81a6\u88e2\u880a\u9ca2","liang":"\u7cae\u51c9\u6881\u7cb1\u826f\u4e24\u8f86\u91cf\u667e\u4eae\u8c05\u589a\u690b\u8e09\u9753\u9b49","liao":"\u64a9\u804a\u50da\u7597\u71ce\u5be5\u8fbd\u6f66\u4e86\u6482\u9563\u5ed6\u6599\u84fc\u5c25\u5639\u7360\u5bee\u7f2d\u948c\u9e69\u8022","lie":"\u5217\u88c2\u70c8\u52a3\u730e\u51bd\u57d2\u6d0c\u8d94\u8e90\u9b23","lin":"\u7433\u6797\u78f7\u9716\u4e34\u90bb\u9cde\u6dcb\u51db\u8d41\u541d\u853a\u5d99\u5eea\u9074\u6aa9\u8f9a\u77b5\u7cbc\u8e8f\u9e9f","liu":"\u6e9c\u7409\u69b4\u786b\u998f\u7559\u5218\u7624\u6d41\u67f3\u516d\u62a1\u507b\u848c\u6cd6\u6d4f\u905b\u9a9d\u7efa\u65d2\u7198\u950d\u954f\u9e68\u938f","long":"\u9f99\u804b\u5499\u7b3c\u7abf\u9686\u5784\u62e2\u9647\u5f04\u5785\u830f\u6cf7\u73d1\u680a\u80e7\u783b\u7643","lou":"\u697c\u5a04\u6402\u7bd3\u6f0f\u964b\u55bd\u5d5d\u9542\u7618\u8027\u877c\u9ac5","lu":"\u82a6\u5362\u9885\u5e90\u7089\u63b3\u5364\u864f\u9c81\u9e93\u788c\u9732\u8def\u8d42\u9e7f\u6f5e\u7984\u5f55\u9646\u622e\u5786\u6445\u64b8\u565c\u6cf8\u6e0c\u6f09\u7490\u680c\u6a79\u8f73\u8f82\u8f98\u6c07\u80ea\u9565\u9e2c\u9e6d\u7c0f\u823b\u9c88","lv":"\u9a74\u5415\u94dd\u4fa3\u65c5\u5c65\u5c61\u7f15\u8651\u6c2f\u5f8b\u7387\u6ee4\u7eff\u634b\u95fe\u6988\u8182\u7a06\u891b","luan":"\u5ce6\u5b6a\u6ee6\u5375\u4e71\u683e\u9e3e\u92ae","lue":"\u63a0\u7565\u950a","lun":"\u8f6e\u4f26\u4ed1\u6ca6\u7eb6\u8bba\u56f5","luo":"\u841d\u87ba\u7f57\u903b\u9523\u7ba9\u9aa1\u88f8\u843d\u6d1b\u9a86\u7edc\u502e\u8366\u645e\u7321\u6cfa\u6924\u8136\u9559\u7630\u96d2","ma":"\u5988\u9ebb\u739b\u7801\u8682\u9a6c\u9a82\u561b\u5417\u551b\u72b8\u5b37\u6769\u9ebd","mai":"\u57cb\u4e70\u9ea6\u5356\u8fc8\u8109\u52a2\u836c\u54aa\u973e","man":"\u7792\u9992\u86ee\u6ee1\u8513\u66fc\u6162\u6f2b\u8c29\u5881\u5e54\u7f26\u71b3\u9558\u989f\u87a8\u9cd7\u9794","mang":"\u8292\u832b\u76f2\u5fd9\u83bd\u9099\u6f2d\u6726\u786d\u87d2","meng":"\u6c13\u840c\u8499\u6aac\u76df\u9530\u731b\u68a6\u5b5f\u52d0\u750d\u77a2\u61f5\u791e\u867b\u8722\u8813\u824b\u8268\u9efe","miao":"\u732b\u82d7\u63cf\u7784\u85d0\u79d2\u6e3a\u5e99\u5999\u55b5\u9088\u7f08\u7f2a\u676a\u6dfc\u7707\u9e4b\u8731","mao":"\u8305\u951a\u6bdb\u77db\u94c6\u536f\u8302\u5192\u5e3d\u8c8c\u8d38\u4f94\u88a4\u52d6\u8306\u5cc1\u7441\u6634\u7266\u8004\u65c4\u61cb\u7780\u86d1\u8765\u87ca\u9ae6","me":"\u4e48","mei":"\u73ab\u679a\u6885\u9176\u9709\u7164\u6ca1\u7709\u5a92\u9541\u6bcf\u7f8e\u6627\u5bd0\u59b9\u5a9a\u5776\u8393\u5d4b\u7338\u6d7c\u6e44\u6963\u9545\u9e5b\u8882\u9b45","men":"\u95e8\u95f7\u4eec\u626a\u739f\u7116\u61d1\u9494","mi":"\u772f\u919a\u9761\u7cdc\u8ff7\u8c1c\u5f25\u7c73\u79d8\u89c5\u6ccc\u871c\u5bc6\u5e42\u8288\u5196\u8c27\u863c\u5627\u7315\u736f\u6c68\u5b93\u5f2d\u8112\u6549\u7cf8\u7e3b\u9e8b","mian":"\u68c9\u7720\u7ef5\u5195\u514d\u52c9\u5a29\u7f05\u9762\u6c94\u6e4e\u817c\u7704","mie":"\u8511\u706d\u54a9\u881b\u7bfe","min":"\u6c11\u62bf\u76bf\u654f\u60af\u95fd\u82e0\u5cb7\u95f5\u6cef\u73c9","ming":"\u660e\u879f\u9e23\u94ed\u540d\u547d\u51a5\u8317\u6e9f\u669d\u7791\u9169","miu":"\u8c2c","mo":"\u6478\u6479\u8611\u6a21\u819c\u78e8\u6469\u9b54\u62b9\u672b\u83ab\u58a8\u9ed8\u6cab\u6f20\u5bde\u964c\u8c1f\u8309\u84e6\u998d\u5aeb\u9546\u79e3\u763c\u8031\u87c6\u8c8a\u8c98","mou":"\u8c0b\u725f\u67d0\u53b6\u54de\u5a7a\u7738\u936a","mu":"\u62c7\u7261\u4ea9\u59c6\u6bcd\u5893\u66ae\u5e55\u52df\u6155\u6728\u76ee\u7766\u7267\u7a46\u4eeb\u82dc\u5452\u6c90\u6bea\u94bc","na":"\u62ff\u54ea\u5450\u94a0\u90a3\u5a1c\u7eb3\u5185\u637a\u80ad\u954e\u8872\u7bac","nai":"\u6c16\u4e43\u5976\u8010\u5948\u9f10\u827f\u8418\u67f0","nan":"\u5357\u7537\u96be\u56ca\u5583\u56e1\u6960\u8169\u877b\u8d67","nao":"\u6320\u8111\u607c\u95f9\u5b6c\u57b4\u7331\u7459\u7847\u94d9\u86f2","ne":"\u6dd6\u5462\u8bb7","nei":"\u9981","nen":"\u5ae9\u80fd\u6798\u6041","ni":"\u59ae\u9713\u502a\u6ce5\u5c3c\u62df\u4f60\u533f\u817b\u9006\u6eba\u4f32\u576d\u730a\u6029\u6ee0\u6635\u65ce\u7962\u615d\u7768\u94cc\u9cb5","nian":"\u852b\u62c8\u5e74\u78be\u64b5\u637b\u5ff5\u5eff\u8f87\u9ecf\u9c87\u9cb6","niang":"\u5a18\u917f","niao":"\u9e1f\u5c3f\u8311\u5b32\u8132\u8885","nie":"\u634f\u8042\u5b7d\u556e\u954a\u954d\u6d85\u4e5c\u9667\u8616\u55eb\u8080\u989e\u81ec\u8e51","nin":"\u60a8\u67e0","ning":"\u72de\u51dd\u5b81\u62e7\u6cde\u4f5e\u84e5\u549b\u752f\u804d","niu":"\u725b\u626d\u94ae\u7ebd\u72c3\u5ff8\u599e\u86b4","nong":"\u8113\u6d53\u519c\u4fac","nu":"\u5974\u52aa\u6012\u5476\u5e11\u5f29\u80ec\u5b65\u9a7d","nv":"\u5973\u6067\u9495\u8844","nuan":"\u6696","nuenue":"\u8650","nue":"\u759f\u8c11","nuo":"\u632a\u61e6\u7cef\u8bfa\u50a9\u6426\u558f\u9518","ou":"\u54e6\u6b27\u9e25\u6bb4\u85d5\u5455\u5076\u6ca4\u6004\u74ef\u8026","pa":"\u556a\u8db4\u722c\u5e15\u6015\u7436\u8469\u7b62","pai":"\u62cd\u6392\u724c\u5f98\u6e43\u6d3e\u4ff3\u848e","pan":"\u6500\u6f58\u76d8\u78d0\u76fc\u7554\u5224\u53db\u723f\u6cee\u88a2\u897b\u87e0\u8e52","pang":"\u4e53\u5e9e\u65c1\u802a\u80d6\u6ec2\u9004","pao":"\u629b\u5486\u5228\u70ae\u888d\u8dd1\u6ce1\u530f\u72cd\u5e96\u812c\u75b1","pei":"\u5478\u80da\u57f9\u88f4\u8d54\u966a\u914d\u4f69\u6c9b\u638a\u8f94\u5e14\u6de0\u65c6\u952b\u9185\u9708","pen":"\u55b7\u76c6\u6e53","peng":"\u7830\u62a8\u70f9\u6f8e\u5f6d\u84ec\u68da\u787c\u7bf7\u81a8\u670b\u9e4f\u6367\u78b0\u576f\u580b\u562d\u6026\u87db","pi":"\u7812\u9739\u6279\u62ab\u5288\u7435\u6bd7\u5564\u813e\u75b2\u76ae\u5339\u75de\u50fb\u5c41\u8b6c\u4e15\u9674\u90b3\u90eb\u572e\u9f19\u64d7\u567c\u5e80\u5ab2\u7eb0\u6787\u7513\u7765\u7f74\u94cd\u75e6\u7656\u758b\u868d\u8c94","pian":"\u7bc7\u504f\u7247\u9a97\u8c1d\u9a88\u728f\u80fc\u890a\u7fe9\u8e41","piao":"\u98d8\u6f02\u74e2\u7968\u527d\u560c\u5ad6\u7f25\u6b8d\u779f\u87b5","pie":"\u6487\u77a5\u4e3f\u82e4\u6c15","pin":"\u62fc\u9891\u8d2b\u54c1\u8058\u62da\u59d8\u5ad4\u6980\u725d\u98a6","ping":"\u4e52\u576a\u82f9\u840d\u5e73\u51ed\u74f6\u8bc4\u5c4f\u4fdc\u5a09\u67b0\u9c86","po":"\u5761\u6cfc\u9887\u5a46\u7834\u9b44\u8feb\u7c95\u53f5\u9131\u6ea5\u73c0\u948b\u94b7\u76a4\u7b38","pou":"\u5256\u88d2\u8e23","pu":"\u6251\u94fa\u4ec6\u8386\u8461\u83e9\u84b2\u57d4\u6734\u5703\u666e\u6d66\u8c31\u66dd\u7011\u530d\u5657\u6fee\u749e\u6c06\u9564\u9568\u8e7c","qi":"\u671f\u6b3a\u6816\u621a\u59bb\u4e03\u51c4\u6f06\u67d2\u6c8f\u5176\u68cb\u5947\u6b67\u7566\u5d0e\u8110\u9f50\u65d7\u7948\u7941\u9a91\u8d77\u5c82\u4e5e\u4f01\u542f\u5951\u780c\u5668\u6c14\u8fc4\u5f03\u6c7d\u6ce3\u8bab\u4e9f\u4e93\u573b\u8291\u840b\u847a\u5601\u5c7a\u5c90\u6c54\u6dc7\u9a90\u7eee\u742a\u7426\u675e\u6864\u69ed\u6b39\u797a\u61a9\u789b\u86f4\u871e\u7da6\u7dae\u8dbf\u8e4a\u9ccd\u9e92","qia":"\u6390\u6070\u6d3d\u845c","qian":"\u7275\u6266\u948e\u94c5\u5343\u8fc1\u7b7e\u4edf\u8c26\u4e7e\u9ed4\u94b1\u94b3\u524d\u6f5c\u9063\u6d45\u8c34\u5811\u5d4c\u6b20\u6b49\u4f65\u9621\u828a\u82a1\u8368\u63ae\u5c8d\u60ad\u614a\u9a9e\u6434\u8930\u7f31\u6920\u80b7\u6106\u94a4\u8654\u7b9d","qiang":"\u67aa\u545b\u8154\u7f8c\u5899\u8537\u5f3a\u62a2\u5af1\u6a2f\u6217\u709d\u9516\u9535\u956a\u8941\u8723\u7f9f\u8deb\u8dc4","qiao":"\u6a47\u9539\u6572\u6084\u6865\u77a7\u4e54\u4fa8\u5de7\u9798\u64ac\u7fd8\u5ced\u4fcf\u7a8d\u5281\u8bee\u8c2f\u835e\u6100\u6194\u7f32\u6a35\u6bf3\u7857\u8df7\u9792","qie":"\u5207\u8304\u4e14\u602f\u7a83\u90c4\u553c\u60ec\u59be\u6308\u9532\u7ba7","qin":"\u94a6\u4fb5\u4eb2\u79e6\u7434\u52e4\u82b9\u64d2\u79bd\u5bdd\u6c81\u82a9\u84c1\u8572\u63ff\u5423\u55ea\u5659\u6eb1\u6a8e\u8793\u887e","qing":"\u9752\u8f7b\u6c22\u503e\u537f\u6e05\u64ce\u6674\u6c30\u60c5\u9877\u8bf7\u5e86\u5029\u82d8\u570a\u6aa0\u78ec\u873b\u7f44\u7b90\u8b26\u9cad\u9ee5","qiong":"\u743c\u7a77\u909b\u8315\u7a79\u7b47\u928e","qiu":"\u79cb\u4e18\u90b1\u7403\u6c42\u56da\u914b\u6cc5\u4fc5\u6c3d\u5def\u827d\u72b0\u6e6b\u9011\u9052\u6978\u8d47\u9e20\u866c\u86af\u8764\u88d8\u7cd7\u9cc5\u9f3d","qu":"\u8d8b\u533a\u86c6\u66f2\u8eaf\u5c48\u9a71\u6e20\u53d6\u5a36\u9f8b\u8da3\u53bb\u8bce\u52ac\u8556\u8627\u5c96\u8862\u9612\u74a9\u89d1\u6c0d\u795b\u78f2\u766f\u86d0\u883c\u9eb4\u77bf\u9ee2","quan":"\u5708\u98a7\u6743\u919b\u6cc9\u5168\u75ca\u62f3\u72ac\u5238\u529d\u8be0\u8343\u737e\u609b\u7efb\u8f81\u754e\u94e8\u8737\u7b4c\u9b08","que":"\u7f3a\u7094\u7638\u5374\u9e4a\u69b7\u786e\u96c0\u9619\u60ab","qun":"\u88d9\u7fa4\u9021","ran":"\u7136\u71c3\u5189\u67d3\u82d2\u9aef","rang":"\u74e4\u58e4\u6518\u56b7\u8ba9\u79b3\u7a70","rao":"\u9976\u6270\u7ed5\u835b\u5a06\u6861","ruo":"\u60f9\u82e5\u5f31","re":"\u70ed\u504c","ren":"\u58ec\u4ec1\u4eba\u5fcd\u97e7\u4efb\u8ba4\u5203\u598a\u7eab\u4ede\u834f\u845a\u996a\u8f6b\u7a14\u887d","reng":"\u6254\u4ecd","ri":"\u65e5","rong":"\u620e\u8338\u84c9\u8363\u878d\u7194\u6eb6\u5bb9\u7ed2\u5197\u5d58\u72e8\u7f1b\u6995\u877e","rou":"\u63c9\u67d4\u8089\u7cc5\u8e42\u97a3","ru":"\u8339\u8815\u5112\u5b7a\u5982\u8fb1\u4e73\u6c5d\u5165\u8925\u84d0\u85b7\u5685\u6d33\u6ebd\u6fe1\u94f7\u8966\u98a5","ruan":"\u8f6f\u962e\u670a","rui":"\u854a\u745e\u9510\u82ae\u8564\u777f\u868b","run":"\u95f0\u6da6","sa":"\u6492\u6d12\u8428\u5345\u4ee8\u6332\u98d2","sai":"\u816e\u9cc3\u585e\u8d5b\u567b","san":"\u4e09\u53c1\u4f1e\u6563\u5f61\u9993\u6c35\u6bf5\u7cc1\u9730","sang":"\u6851\u55d3\u4e27\u6421\u78c9\u98a1","sao":"\u6414\u9a9a\u626b\u5ac2\u57fd\u81ca\u7619\u9ccb","se":"\u745f\u8272\u6da9\u556c\u94e9\u94ef\u7a51","sen":"\u68ee","seng":"\u50e7","sha":"\u838e\u7802\u6740\u5239\u6c99\u7eb1\u50bb\u5565\u715e\u810e\u6b43\u75e7\u88df\u970e\u9ca8","shai":"\u7b5b\u6652\u917e","shan":"\u73ca\u82eb\u6749\u5c71\u5220\u717d\u886b\u95ea\u9655\u64c5\u8d61\u81b3\u5584\u6c55\u6247\u7f2e\u5261\u8baa\u912f\u57cf\u829f\u6f78\u59d7\u9a9f\u81bb\u9490\u759d\u87ee\u8222\u8dda\u9cdd","shang":"\u5892\u4f24\u5546\u8d4f\u664c\u4e0a\u5c1a\u88f3\u57a7\u7ef1\u6b87\u71b5\u89de","shao":"\u68a2\u634e\u7a0d\u70e7\u828d\u52fa\u97f6\u5c11\u54e8\u90b5\u7ecd\u52ad\u82d5\u6f72\u86f8\u7b24\u7b72\u8244","she":"\u5962\u8d4a\u86c7\u820c\u820d\u8d66\u6444\u5c04\u6151\u6d89\u793e\u8bbe\u538d\u4f58\u731e\u7572\u9e9d","shen":"\u7837\u7533\u547b\u4f38\u8eab\u6df1\u5a20\u7ec5\u795e\u6c88\u5ba1\u5a76\u751a\u80be\u614e\u6e17\u8bdc\u8c02\u5432\u54c2\u6e16\u6939\u77e7\u8703","sheng":"\u58f0\u751f\u7525\u7272\u5347\u7ef3\u7701\u76db\u5269\u80dc\u5723\u4e1e\u6e11\u5ab5\u771a\u7b19","shi":"\u5e08\u5931\u72ee\u65bd\u6e7f\u8bd7\u5c38\u8671\u5341\u77f3\u62fe\u65f6\u4ec0\u98df\u8680\u5b9e\u8bc6\u53f2\u77e2\u4f7f\u5c4e\u9a76\u59cb\u5f0f\u793a\u58eb\u4e16\u67ff\u4e8b\u62ed\u8a93\u901d\u52bf\u662f\u55dc\u566c\u9002\u4ed5\u4f8d\u91ca\u9970\u6c0f\u5e02\u6043\u5ba4\u89c6\u8bd5\u8c25\u57d8\u83b3\u84cd\u5f11\u5511\u9963\u8f7c\u8006\u8d33\u70bb\u793b\u94c8\u94ca\u87ab\u8210\u7b6e\u8c55\u9ca5\u9cba","shou":"\u6536\u624b\u9996\u5b88\u5bff\u6388\u552e\u53d7\u7626\u517d\u624c\u72e9\u7ef6\u824f","shu":"\u852c\u67a2\u68b3\u6b8a\u6292\u8f93\u53d4\u8212\u6dd1\u758f\u4e66\u8d4e\u5b70\u719f\u85af\u6691\u66d9\u7f72\u8700\u9ecd\u9f20\u5c5e\u672f\u8ff0\u6811\u675f\u620d\u7ad6\u5885\u5eb6\u6570\u6f31\u6055\u500f\u587e\u83fd\u5fc4\u6cad\u6d91\u6f8d\u59dd\u7ebe\u6bf9\u8167\u6bb3\u956f\u79eb\u9e6c","shua":"\u5237\u800d\u5530\u6dae","shuai":"\u6454\u8870\u7529\u5e05\u87c0","shuan":"\u6813\u62f4\u95e9","shuang":"\u971c\u53cc\u723d\u5b40","shui":"\u8c01\u6c34\u7761\u7a0e","shun":"\u542e\u77ac\u987a\u821c\u6042","shuo":"\u8bf4\u7855\u6714\u70c1\u84b4\u6420\u55cd\u6fef\u5981\u69ca\u94c4","si":"\u65af\u6495\u5636\u601d\u79c1\u53f8\u4e1d\u6b7b\u8086\u5bfa\u55e3\u56db\u4f3a\u4f3c\u9972\u5df3\u53ae\u4fdf\u5155\u83e5\u549d\u6c5c\u6cd7\u6f8c\u59d2\u9a77\u7f0c\u7940\u7960\u9536\u9e36\u801c\u86f3\u7b25","song":"\u677e\u8038\u6002\u9882\u9001\u5b8b\u8bbc\u8bf5\u51c7\u83d8\u5d27\u5d69\u5fea\u609a\u6dde\u7ae6","sou":"\u641c\u8258\u64de\u55fd\u53df\u55d6\u55fe\u998a\u6eb2\u98d5\u778d\u953c\u878b","su":"\u82cf\u9165\u4fd7\u7d20\u901f\u7c9f\u50f3\u5851\u6eaf\u5bbf\u8bc9\u8083\u5919\u8c21\u850c\u55c9\u612b\u7c0c\u89eb\u7a23","suan":"\u9178\u849c\u7b97","sui":"\u867d\u968b\u968f\u7ee5\u9ad3\u788e\u5c81\u7a57\u9042\u96a7\u795f\u84d1\u51ab\u8c07\u6fc9\u9083\u71e7\u772d\u7762","sun":"\u5b59\u635f\u7b0b\u836a\u72f2\u98e7\u69ab\u8de3\u96bc","suo":"\u68ad\u5506\u7f29\u7410\u7d22\u9501\u6240\u5522\u55e6\u5a11\u686b\u7743\u7fa7","ta":"\u584c\u4ed6\u5b83\u5979\u5854\u736d\u631e\u8e4b\u8e0f\u95fc\u6ebb\u9062\u69bb\u6c93","tai":"\u80ce\u82d4\u62ac\u53f0\u6cf0\u915e\u592a\u6001\u6c70\u90b0\u85b9\u80bd\u70b1\u949b\u8dc6\u9c90","tan":"\u574d\u644a\u8d2a\u762b\u6ee9\u575b\u6a80\u75f0\u6f6d\u8c2d\u8c08\u5766\u6bef\u8892\u78b3\u63a2\u53f9\u70ad\u90ef\u8548\u6619\u94bd\u952c\u8983","tang":"\u6c64\u5858\u642a\u5802\u68e0\u819b\u5510\u7cd6\u50a5\u9967\u6e8f\u746d\u94f4\u9557\u8025\u8797\u87b3\u7fb0\u91a3","thang":"\u5018\u8eba\u6dcc","theng":"\u8d9f\u70eb","tao":"\u638f\u6d9b\u6ed4\u7ee6\u8404\u6843\u9003\u6dd8\u9676\u8ba8\u5957\u6311\u9f17\u5555\u97ec\u9955","te":"\u7279","teng":"\u85e4\u817e\u75bc\u8a8a\u6ed5","ti":"\u68af\u5254\u8e22\u9511\u63d0\u9898\u8e44\u557c\u4f53\u66ff\u568f\u60d5\u6d95\u5243\u5c49\u8351\u608c\u9016\u7ee8\u7f07\u9e48\u88fc\u918d","tian":"\u5929\u6dfb\u586b\u7530\u751c\u606c\u8214\u8146\u63ad\u5fdd\u9617\u6b84\u754b\u94bf\u86ba","tiao":"\u6761\u8fe2\u773a\u8df3\u4f7b\u7967\u94eb\u7a95\u9f86\u9ca6","tie":"\u8d34\u94c1\u5e16\u841c\u992e","ting":"\u5385\u542c\u70c3\u6c40\u5ef7\u505c\u4ead\u5ead\u633a\u8247\u839b\u8476\u5a77\u6883\u8713\u9706","tong":"\u901a\u6850\u916e\u77b3\u540c\u94dc\u5f64\u7ae5\u6876\u6345\u7b52\u7edf\u75db\u4f5f\u50ee\u4edd\u833c\u55f5\u6078\u6f7c\u783c","tou":"\u5077\u6295\u5934\u900f\u4ea0","tu":"\u51f8\u79c3\u7a81\u56fe\u5f92\u9014\u6d82\u5c60\u571f\u5410\u5154\u580d\u837c\u83df\u948d\u9174","tuan":"\u6e4d\u56e2\u7583","tui":"\u63a8\u9893\u817f\u8715\u892a\u9000\u5fd2\u717a","tun":"\u541e\u5c6f\u81c0\u9968\u66be\u8c5a\u7a80","tuo":"\u62d6\u6258\u8131\u9e35\u9640\u9a6e\u9a7c\u692d\u59a5\u62d3\u553e\u4e47\u4f57\u5768\u5eb9\u6cb1\u67dd\u7823\u7ba8\u8204\u8dce\u9f0d","wa":"\u6316\u54c7\u86d9\u6d3c\u5a03\u74e6\u889c\u4f64\u5a32\u817d","wai":"\u6b6a\u5916","wan":"\u8c4c\u5f2f\u6e7e\u73a9\u987d\u4e38\u70f7\u5b8c\u7897\u633d\u665a\u7696\u60cb\u5b9b\u5a49\u4e07\u8155\u525c\u8284\u82cb\u83c0\u7ea8\u7efe\u742c\u8118\u7579\u873f\u7ba2","wang":"\u6c6a\u738b\u4ea1\u6789\u7f51\u5f80\u65fa\u671b\u5fd8\u5984\u7f54\u5c22\u60d8\u8f8b\u9b4d","wei":"\u5a01\u5dcd\u5fae\u5371\u97e6\u8fdd\u6845\u56f4\u552f\u60df\u4e3a\u6f4d\u7ef4\u82c7\u840e\u59d4\u4f1f\u4f2a\u5c3e\u7eac\u672a\u851a\u5473\u754f\u80c3\u5582\u9b4f\u4f4d\u6e2d\u8c13\u5c09\u6170\u536b\u502d\u504e\u8bff\u9688\u8473\u8587\u5e0f\u5e37\u5d34\u5d6c\u7325\u732c\u95f1\u6ca9\u6d27\u6da0\u9036\u5a13\u73ae\u97ea\u8ece\u709c\u7168\u71a8\u75ff\u8249\u9c94","wen":"\u761f\u6e29\u868a\u6587\u95fb\u7eb9\u543b\u7a33\u7d0a\u95ee\u520e\u6120\u960c\u6c76\u74ba\u97eb\u6b81\u96ef","weng":"\u55e1\u7fc1\u74ee\u84ca\u8579","wo":"\u631d\u8717\u6da1\u7a9d\u6211\u65a1\u5367\u63e1\u6c83\u83b4\u5e44\u6e25\u674c\u809f\u9f8c","wu":"\u5deb\u545c\u94a8\u4e4c\u6c61\u8bec\u5c4b\u65e0\u829c\u68a7\u543e\u5434\u6bcb\u6b66\u4e94\u6342\u5348\u821e\u4f0d\u4fae\u575e\u620a\u96fe\u6664\u7269\u52ff\u52a1\u609f\u8bef\u5140\u4ef5\u9622\u90ac\u572c\u82b4\u5e91\u6003\u5fe4\u6d6f\u5be4\u8fd5\u59a9\u9a9b\u727e\u7110\u9e49\u9e5c\u8708\u92c8\u9f2f","xi":"\u6614\u7199\u6790\u897f\u7852\u77fd\u6670\u563b\u5438\u9521\u727a\u7a00\u606f\u5e0c\u6089\u819d\u5915\u60dc\u7184\u70ef\u6eaa\u6c50\u7280\u6a84\u88ad\u5e2d\u4e60\u5ab3\u559c\u94e3\u6d17\u7cfb\u9699\u620f\u7ec6\u50d6\u516e\u96b0\u90d7\u831c\u8478\u84f0\u595a\u550f\u5f99\u9969\u960b\u6d60\u6dc5\u5c63\u5b09\u73ba\u6a28\u66e6\u89cb\u6b37\u71b9\u798a\u79a7\u94b8\u7699\u7a78\u8725\u87cb\u823e\u7fb2\u7c9e\u7fd5\u91af\u9f37","xia":"\u778e\u867e\u5323\u971e\u8f96\u6687\u5ce1\u4fa0\u72ed\u4e0b\u53a6\u590f\u5413\u6380\u846d\u55c4\u72ce\u9050\u7455\u7856\u7615\u7f45\u9ee0","xian":"\u9528\u5148\u4ed9\u9c9c\u7ea4\u54b8\u8d24\u8854\u8237\u95f2\u6d8e\u5f26\u5acc\u663e\u9669\u73b0\u732e\u53bf\u817a\u9985\u7fa1\u5baa\u9677\u9650\u7ebf\u51bc\u85d3\u5c98\u7303\u66b9\u5a34\u6c19\u7946\u9e47\u75eb\u86ac\u7b45\u7c7c\u9170\u8df9","xiang":"\u76f8\u53a2\u9576\u9999\u7bb1\u8944\u6e58\u4e61\u7fd4\u7965\u8be6\u60f3\u54cd\u4eab\u9879\u5df7\u6a61\u50cf\u5411\u8c61\u8297\u8459\u9977\u5ea0\u9aa7\u7f03\u87d3\u9c9e\u98e8","xiao":"\u8427\u785d\u9704\u524a\u54ee\u56a3\u9500\u6d88\u5bb5\u6dc6\u6653\u5c0f\u5b5d\u6821\u8096\u5578\u7b11\u6548\u54d3\u54bb\u5d24\u6f47\u900d\u9a81\u7ee1\u67ad\u67b5\u7b71\u7bab\u9b48","xie":"\u6954\u4e9b\u6b47\u874e\u978b\u534f\u631f\u643a\u90aa\u659c\u80c1\u8c10\u5199\u68b0\u5378\u87f9\u61c8\u6cc4\u6cfb\u8c22\u5c51\u5055\u4eb5\u52f0\u71ee\u85a4\u64b7\u5ee8\u7023\u9082\u7ec1\u7f2c\u69ad\u698d\u6b59\u8e9e","xin":"\u85aa\u82af\u950c\u6b23\u8f9b\u65b0\u5ffb\u5fc3\u4fe1\u8845\u56df\u99a8\u8398\u6b46\u94fd\u946b","xing":"\u661f\u8165\u7329\u60fa\u5174\u5211\u578b\u5f62\u90a2\u884c\u9192\u5e78\u674f\u6027\u59d3\u9649\u8347\u8365\u64e4\u60bb\u784e","xiong":"\u5144\u51f6\u80f8\u5308\u6c79\u96c4\u718a\u828e","xiu":"\u4f11\u4fee\u7f9e\u673d\u55c5\u9508\u79c0\u8896\u7ee3\u83a0\u5cab\u9990\u5ea5\u9e3a\u8c85\u9af9","xu":"\u589f\u620c\u9700\u865a\u5618\u987b\u5f90\u8bb8\u84c4\u9157\u53d9\u65ed\u5e8f\u755c\u6064\u7d6e\u5a7f\u7eea\u7eed\u8bb4\u8be9\u5729\u84ff\u6035\u6d2b\u6e86\u987c\u6829\u7166\u7809\u76f1\u80e5\u7cc8\u9191","xuan":"\u8f69\u55a7\u5ba3\u60ac\u65cb\u7384\u9009\u7663\u7729\u7eda\u5107\u8c16\u8431\u63ce\u9994\u6ceb\u6d35\u6e32\u6f29\u7487\u6966\u6684\u70ab\u714a\u78b9\u94c9\u955f\u75c3","xue":"\u9774\u859b\u5b66\u7a74\u96ea\u8840\u5671\u6cf6\u9cd5","xun":"\u52cb\u718f\u5faa\u65ec\u8be2\u5bfb\u9a6f\u5de1\u6b89\u6c5b\u8bad\u8baf\u900a\u8fc5\u5dfd\u57d9\u8340\u85b0\u5ccb\u5f87\u6d54\u66db\u7aa8\u91ba\u9c9f","ya":"\u538b\u62bc\u9e26\u9e2d\u5440\u4e2b\u82bd\u7259\u869c\u5d16\u8859\u6daf\u96c5\u54d1\u4e9a\u8bb6\u4f22\u63e0\u5416\u5c88\u8fd3\u5a05\u740a\u6860\u6c29\u7811\u775a\u75d6","yan":"\u7109\u54bd\u9609\u70df\u6df9\u76d0\u4e25\u7814\u8712\u5ca9\u5ef6\u8a00\u989c\u960e\u708e\u6cbf\u5944\u63a9\u773c\u884d\u6f14\u8273\u5830\u71d5\u538c\u781a\u96c1\u5501\u5f66\u7130\u5bb4\u8c1a\u9a8c\u53a3\u9765\u8d5d\u4fe8\u5043\u5156\u8ba0\u8c33\u90fe\u9122\u82ab\u83f8\u5d26\u6079\u95eb\u960f\u6d07\u6e6e\u6edf\u598d\u5ae3\u7430\u664f\u80ed\u814c\u7131\u7f68\u7b75\u917d\u9b47\u990d\u9f39","yang":"\u6b83\u592e\u9e2f\u79e7\u6768\u626c\u4f6f\u75a1\u7f8a\u6d0b\u9633\u6c27\u4ef0\u75d2\u517b\u6837\u6f3e\u5f89\u600f\u6cf1\u7080\u70ca\u6059\u86d8\u9785","yao":"\u9080\u8170\u5996\u7476\u6447\u5c27\u9065\u7a91\u8c23\u59da\u54ac\u8200\u836f\u8981\u8000\u592d\u723b\u5406\u5d3e\u5fad\u7039\u5e7a\u73e7\u6773\u66dc\u80b4\u9e5e\u7a88\u7e47\u9cd0","ye":"\u6930\u564e\u8036\u7237\u91ce\u51b6\u4e5f\u9875\u6396\u4e1a\u53f6\u66f3\u814b\u591c\u6db2\u8c12\u90ba\u63f6\u9980\u6654\u70e8\u94d8","yi":"\u4e00\u58f9\u533b\u63d6\u94f1\u4f9d\u4f0a\u8863\u9890\u5937\u9057\u79fb\u4eea\u80f0\u7591\u6c82\u5b9c\u59e8\u5f5d\u6905\u8681\u501a\u5df2\u4e59\u77e3\u4ee5\u827a\u6291\u6613\u9091\u5c79\u4ebf\u5f79\u81c6\u9038\u8084\u75ab\u4ea6\u88d4\u610f\u6bc5\u5fc6\u4e49\u76ca\u6ea2\u8be3\u8bae\u8c0a\u8bd1\u5f02\u7ffc\u7fcc\u7ece\u5208\u5293\u4f7e\u8bd2\u572a\u572f\u57f8\u61ff\u82e1\u858f\u5f08\u5955\u6339\u5f0b\u5453\u54a6\u54bf\u566b\u5cc4\u5db7\u7317\u9974\u603f\u6021\u6092\u6f2a\u8fe4\u9a7f\u7f22\u6baa\u8d3b\u65d6\u71a0\u9487\u9552\u9571\u75cd\u7617\u7654\u7fca\u8864\u8734\u8223\u7fbf\u7ff3\u914f\u9edf","yin":"\u8335\u836b\u56e0\u6bb7\u97f3\u9634\u59fb\u541f\u94f6\u6deb\u5bc5\u996e\u5c39\u5f15\u9690\u5370\u80e4\u911e\u5819\u831a\u5591\u72fa\u5924\u6c24\u94df\u763e\u8693\u972a\u9f88","ying":"\u82f1\u6a31\u5a74\u9e70\u5e94\u7f28\u83b9\u8424\u8425\u8367\u8747\u8fce\u8d62\u76c8\u5f71\u9896\u786c\u6620\u5b34\u90e2\u8314\u83ba\u8426\u6484\u5624\u81ba\u6ee2\u6f46\u701b\u745b\u748e\u6979\u9e66\u763f\u988d\u7f42","yo":"\u54df\u5537","yong":"\u62e5\u4f63\u81c3\u75c8\u5eb8\u96cd\u8e0a\u86f9\u548f\u6cf3\u6d8c\u6c38\u607f\u52c7\u7528\u4fd1\u58c5\u5889\u6175\u9095\u955b\u752c\u9cd9\u9954","you":"\u5e7d\u4f18\u60a0\u5fe7\u5c24\u7531\u90ae\u94c0\u72b9\u6cb9\u6e38\u9149\u6709\u53cb\u53f3\u4f51\u91c9\u8bf1\u53c8\u5e7c\u5363\u6538\u4f91\u83b8\u5466\u56ff\u5ba5\u67da\u7337\u7256\u94d5\u75a3\u8763\u9c7f\u9edd\u9f2c","yu":"\u8fc2\u6de4\u4e8e\u76c2\u6986\u865e\u611a\u8206\u4f59\u4fde\u903e\u9c7c\u6109\u6e1d\u6e14\u9685\u4e88\u5a31\u96e8\u4e0e\u5c7f\u79b9\u5b87\u8bed\u7fbd\u7389\u57df\u828b\u90c1\u5401\u9047\u55bb\u5cea\u5fa1\u6108\u6b32\u72f1\u80b2\u8a89\u6d74\u5bd3\u88d5\u9884\u8c6b\u9a6d\u79ba\u6bd3\u4f1b\u4fe3\u8c00\u8c15\u8438\u84e3\u63c4\u5581\u5704\u5709\u5d5b\u72f3\u996b\u5ebe\u9608\u59aa\u59a4\u7ea1\u745c\u6631\u89ce\u8174\u6b24\u65bc\u715c\u71e0\u807f\u94b0\u9e46\u7610\u7600\u7ab3\u8753\u7afd\u8201\u96e9\u9f89","yuan":"\u9e33\u6e0a\u51a4\u5143\u57a3\u8881\u539f\u63f4\u8f95\u56ed\u5458\u5706\u733f\u6e90\u7f18\u8fdc\u82d1\u613f\u6028\u9662\u586c\u6c85\u5a9b\u7457\u6a7c\u7230\u7722\u9e22\u8788\u9f0b","yue":"\u66f0\u7ea6\u8d8a\u8dc3\u94a5\u5cb3\u7ca4\u6708\u60a6\u9605\u9fa0\u6a3e\u5216\u94ba","yun":"\u8018\u4e91\u90e7\u5300\u9668\u5141\u8fd0\u8574\u915d\u6655\u97f5\u5b55\u90d3\u82b8\u72c1\u607d\u7ead\u6b92\u6600\u6c32","za":"\u531d\u7838\u6742\u62f6\u5482","zai":"\u683d\u54c9\u707e\u5bb0\u8f7d\u518d\u5728\u54b1\u5d3d\u753e","zan":"\u6512\u6682\u8d5e\u74d2\u661d\u7c2a\u7ccc\u8db1\u933e","zang":"\u8d43\u810f\u846c\u5958\u6215\u81e7","zao":"\u906d\u7cdf\u51ff\u85fb\u67a3\u65e9\u6fa1\u86a4\u8e81\u566a\u9020\u7682\u7076\u71e5\u5523\u7f2b","ze":"\u8d23\u62e9\u5219\u6cfd\u4ec4\u8d5c\u5567\u8fee\u6603\u7b2e\u7ba6\u8234","zei":"\u8d3c","zen":"\u600e\u8c2e","zeng":"\u589e\u618e\u66fe\u8d60\u7f2f\u7511\u7f7e\u9503","zha":"\u624e\u55b3\u6e23\u672d\u8f67\u94e1\u95f8\u7728\u6805\u69a8\u548b\u4e4d\u70b8\u8bc8\u63f8\u5412\u54a4\u54f3\u600d\u781f\u75c4\u86b1\u9f44","zhai":"\u6458\u658b\u5b85\u7a84\u503a\u5be8\u7826","zhan":"\u77bb\u6be1\u8a79\u7c98\u6cbe\u76cf\u65a9\u8f97\u5d2d\u5c55\u8638\u6808\u5360\u6218\u7ad9\u6e5b\u7efd\u8c35\u640c\u65c3","zhang":"\u6a1f\u7ae0\u5f70\u6f33\u5f20\u638c\u6da8\u6756\u4e08\u5e10\u8d26\u4ed7\u80c0\u7634\u969c\u4ec9\u9123\u5e5b\u5d82\u7350\u5adc\u748b\u87d1","zhao":"\u62db\u662d\u627e\u6cbc\u8d75\u7167\u7f69\u5146\u8087\u53ec\u722a\u8bcf\u68f9\u948a\u7b0a","zhe":"\u906e\u6298\u54f2\u86f0\u8f99\u8005\u9517\u8517\u8fd9\u6d59\u8c2a\u966c\u67d8\u8f84\u78d4\u9e67\u891a\u8707\u8d6d","zhen":"\u73cd\u659f\u771f\u7504\u7827\u81fb\u8d1e\u9488\u4fa6\u6795\u75b9\u8bca\u9707\u632f\u9547\u9635\u7f1c\u6862\u699b\u8f78\u8d48\u80d7\u6715\u796f\u755b\u9e29","zheng":"\u84b8\u6323\u7741\u5f81\u72f0\u4e89\u6014\u6574\u62ef\u6b63\u653f\u5e27\u75c7\u90d1\u8bc1\u8be4\u5ce5\u94b2\u94ee\u7b5d","zhi":"\u829d\u679d\u652f\u5431\u8718\u77e5\u80a2\u8102\u6c41\u4e4b\u7ec7\u804c\u76f4\u690d\u6b96\u6267\u503c\u4f84\u5740\u6307\u6b62\u8dbe\u53ea\u65e8\u7eb8\u5fd7\u631a\u63b7\u81f3\u81f4\u7f6e\u5e1c\u5cd9\u5236\u667a\u79e9\u7a1a\u8d28\u7099\u75d4\u6ede\u6cbb\u7a92\u536e\u965f\u90c5\u57f4\u82b7\u646d\u5e19\u5fee\u5f58\u54ab\u9a98\u6809\u67b3\u6800\u684e\u8f75\u8f7e\u6534\u8d3d\u81a3\u7949\u7957\u9ef9\u96c9\u9e37\u75e3\u86ed\u7d77\u916f\u8dd6\u8e2c\u8e2f\u8c78\u89ef","zhong":"\u4e2d\u76c5\u5fe0\u949f\u8877\u7ec8\u79cd\u80bf\u91cd\u4ef2\u4f17\u51a2\u953a\u87bd\u8202\u822f\u8e35","zhou":"\u821f\u5468\u5dde\u6d32\u8bcc\u7ca5\u8f74\u8098\u5e1a\u5492\u76b1\u5b99\u663c\u9aa4\u5544\u7740\u501c\u8bf9\u836e\u9b3b\u7ea3\u80c4\u78a1\u7c40\u8233\u914e\u9cb7","zhu":"\u73e0\u682a\u86db\u6731\u732a\u8bf8\u8bdb\u9010\u7af9\u70db\u716e\u62c4\u77a9\u5631\u4e3b\u8457\u67f1\u52a9\u86c0\u8d2e\u94f8\u7b51\u4f4f\u6ce8\u795d\u9a7b\u4f2b\u4f8f\u90be\u82ce\u8331\u6d19\u6e1a\u6f74\u9a7a\u677c\u69e0\u6a65\u70b7\u94e2\u75b0\u7603\u86b0\u7afa\u7bb8\u7fe5\u8e85\u9e88","zhua":"\u6293","zhuai":"\u62fd","zhuan":"\u4e13\u7816\u8f6c\u64b0\u8d5a\u7bc6\u629f\u556d\u989b","zhuang":"\u6869\u5e84\u88c5\u5986\u649e\u58ee\u72b6\u4e2c","zhui":"\u690e\u9525\u8ffd\u8d58\u5760\u7f00\u8411\u9a93\u7f12","zhun":"\u8c06\u51c6","zhuo":"\u6349\u62d9\u5353\u684c\u7422\u8301\u914c\u707c\u6d4a\u502c\u8bfc\u5ef4\u855e\u64e2\u555c\u6d5e\u6dbf\u6753\u712f\u799a\u65ab","zi":"\u5179\u54a8\u8d44\u59ff\u6ecb\u6dc4\u5b5c\u7d2b\u4ed4\u7c7d\u6ed3\u5b50\u81ea\u6e0d\u5b57\u8c18\u5d6b\u59ca\u5b73\u7f01\u6893\u8f8e\u8d40\u6063\u7726\u9531\u79ed\u8014\u7b2b\u7ca2\u89dc\u8a3e\u9cbb\u9aed","zong":"\u9b03\u68d5\u8e2a\u5b97\u7efc\u603b\u7eb5\u8159\u7cbd","zou":"\u90b9\u8d70\u594f\u63cd\u9139\u9cb0","zu":"\u79df\u8db3\u5352\u65cf\u7956\u8bc5\u963b\u7ec4\u4fce\u83f9\u5550\u5f82\u9a75\u8e74","zuan":"\u94bb\u7e82\u6525\u7f35","zui":"\u5634\u9189\u6700\u7f6a","zun":"\u5c0a\u9075\u6499\u6a3d\u9cdf","zuo":"\u6628\u5de6\u4f50\u67de\u505a\u4f5c\u5750\u5ea7\u961d\u963c\u80d9\u795a\u9162","cou":"\u85ae\u6971\u8f8f\u8160","nang":"\u652e\u54dd\u56d4\u9995\u66e9","o":"\u5594","dia":"\u55f2","chuai":"\u562c\u81aa\u8e39","cen":"\u5c91\u6d94","diu":"\u94e5","nou":"\u8028","fou":"\u7f36","bia":"\u9adf"};
            this.polyphone = {"19969":"DZ","19975":"WM","19988":"QJ","20048":"YL","20056":"SC","20060":"NM","20094":"QG","20127":"QJ","20167":"QC","20193":"YG","20250":"KH","20256":"ZC","20282":"SC","20285":"QJG","20291":"TD","20314":"YD","20340":"NE","20375":"TD","20389":"YJ","20391":"CZ","20415":"PB","20446":"YS","20447":"SQ","20504":"TC","20608":"KG","20854":"QJ","20857":"ZC","20911":"PF","20504":"TC","20608":"KG","20854":"QJ","20857":"ZC","20911":"PF","20985":"AW","21032":"PB","21048":"XQ","21049":"SC","21089":"YS","21119":"JC","21242":"SB","21273":"SC","21305":"YP","21306":"QO","21330":"ZC","21333":"SDC","21345":"QK","21378":"CA","21397":"SC","21414":"XS","21442":"SC","21477":"JG","21480":"TD","21484":"ZS","21494":"YX","21505":"YX","21512":"HG","21523":"XH","21537":"PB","21542":"PF","21549":"KH","21571":"E","21574":"DA","21588":"TD","21589":"O","21618":"ZC","21621":"KHA","21632":"ZJ","21654":"KG","21679":"LKG","21683":"KH","21710":"A","21719":"YH","21734":"WOE","21769":"A","21780":"WN","21804":"XH","21834":"A","21899":"ZD","21903":"RN","21908":"WO","21939":"ZC","21956":"SA","21964":"YA","21970":"TD","22003":"A","22031":"JG","22040":"XS","22060":"ZC","22066":"ZC","22079":"MH","22129":"XJ","22179":"XA","22237":"NJ","22244":"TD","22280":"JQ","22300":"YH","22313":"XW","22331":"YQ","22343":"YJ","22351":"PH","22395":"DC","22412":"TD","22484":"PB","22500":"PB","22534":"ZD","22549":"DH","22561":"PB","22612":"TD","22771":"KQ","22831":"HB","22841":"JG","22855":"QJ","22865":"XQ","23013":"ML","23081":"WM","23487":"SX","23558":"QJ","23561":"YW","23586":"YW","23614":"YW","23615":"SN","23631":"PB","23646":"ZS","23663":"ZT","23673":"YG","23762":"TD","23769":"ZS","23780":"QJ","23884":"QK","24055":"XH","24113":"DC","24162":"ZC","24191":"GA","24273":"QJ","24324":"NL","24377":"TD","24378":"QJ","24439":"PF","24554":"ZS","24683":"TD","24694":"WE","24733":"LK","24925":"TN","25094":"ZG","25100":"XQ","25103":"XH","25153":"PB","25170":"PB","25179":"KG","25203":"PB","25240":"ZS","25282":"FB","25303":"NA","25324":"KG","25341":"ZY","25373":"WZ","25375":"XJ","25384":"A","25457":"A","25528":"SD","25530":"SC","25552":"TD","25774":"ZC","25874":"ZC","26044":"YW","26080":"WM","26292":"PB","26333":"PB","26355":"ZY","26366":"CZ","26397":"ZC","26399":"QJ","26415":"ZS","26451":"SB","26526":"ZC","26552":"JG","26561":"TD","26588":"JG","26597":"CZ","26629":"ZS","26638":"YL","26646":"XQ","26653":"KG","26657":"XJ","26727":"HG","26894":"ZC","26937":"ZS","26946":"ZC","26999":"KJ","27099":"KJ","27449":"YQ","27481":"XS","27542":"ZS","27663":"ZS","27748":"TS","27784":"SC","27788":"ZD","27795":"TD","27812":"O","27850":"PB","27852":"MB","27895":"SL","27898":"PL","27973":"QJ","27981":"KH","27986":"HX","27994":"XJ","28044":"YC","28065":"WG","28177":"SM","28267":"QJ","28291":"KH","28337":"ZQ","28463":"TL","28548":"DC","28601":"TD","28689":"PB","28805":"JG","28820":"QG","28846":"PB","28952":"TD","28975":"ZC","29100":"A","29325":"QJ","29575":"SL","29602":"FB","30010":"TD","30044":"CX","30058":"PF","30091":"YSP","30111":"YN","30229":"XJ","30427":"SC","30465":"SX","30631":"YQ","30655":"QJ","30684":"QJG","30707":"SD","30729":"XH","30796":"LG","30917":"PB","31074":"NM","31085":"JZ","31109":"SC","31181":"ZC","31192":"MLB","31293":"JQ","31400":"YX","31584":"YJ","31896":"ZN","31909":"ZY","31995":"XJ","32321":"PF","32327":"ZY","32418":"HG","32420":"XQ","32421":"HG","32438":"LG","32473":"GJ","32488":"TD","32521":"QJ","32527":"PB","32562":"ZSQ","32564":"JZ","32735":"ZD","32793":"PB","33071":"PF","33098":"XL","33100":"YA","33152":"PB","33261":"CX","33324":"BP","33333":"TD","33406":"YA","33426":"WM","33432":"PB","33445":"JG","33486":"ZN","33493":"TS","33507":"QJ","33540":"QJ","33544":"ZC","33564":"XQ","33617":"YT","33632":"QJ","33636":"XH","33637":"YX","33694":"WG","33705":"PF","33728":"YW","33882":"SR","34067":"WM","34074":"YW","34121":"QJ","34255":"ZC","34259":"XL","34425":"JH","34430":"XH","34485":"KH","34503":"YS","34532":"HG","34552":"XS","34558":"YE","34593":"ZL","34660":"YQ","34892":"XH","34928":"SC","34999":"QJ","35048":"PB","35059":"SC","35098":"ZC","35203":"TQ","35265":"JX","35299":"JX","35782":"SZ","35828":"YS","35830":"E","35843":"TD","35895":"YG","35977":"MH","36158":"JG","36228":"QJ","36426":"XQ","36466":"DC","36710":"JC","36711":"ZYG","36767":"PB","36866":"SK","36951":"YW","37034":"YX","37063":"XH","37218":"ZC","37325":"ZC","38063":"PB","38079":"TD","38085":"QY","38107":"DC","38116":"TD","38123":"YD","38224":"HG","38241":"XTC","38271":"ZC","38415":"YE","38426":"KH","38461":"YD","38463":"AE","38466":"PB","38477":"XJ","38518":"YT","38551":"WK","38585":"ZC","38704":"XS","38739":"LJ","38761":"GJ","38808":"SQ","39048":"JG","39049":"XJ","39052":"HG","39076":"CZ","39271":"XT","39534":"TD","39552":"TD","39584":"PB","39647":"SB","39730":"LG","39748":"TPB","40109":"ZQ","40479":"ND","40516":"HG","40536":"HG","40583":"QJ","40765":"YQ","40784":"QJ","40840":"YK","40863":"QJG"};
        },

        // 提取拼音, 返回首字母大写形式
        getFullChars: function(str){
            var result = '', name;
            var reg = new RegExp('[a-zA-Z0-9\- ]');
            for (var i=0, len = str.length; i < len; i++){
                var ch = str.substr(i,1), unicode = ch.charCodeAt(0);
                if(unicode > 40869 || unicode < 19968){
                    result += ch;
                }else{
                    name = this._getFullChar(ch);
                    if(name !== false){
                        result += name;
                    }
                }
            }
            return result;
        },

        // 提取首字母，返回大写形式     
        getCamelChars: function(str){
            if(typeof(str) !== 'string')
                throw new Error(-1, "函数getFisrt需要字符串类型参数!");
            var chars = []; //保存中间结果的数组
            for(var i=0,len=str.length; i < len; i++){
                //获得unicode码
                var ch = str.charAt(i);
                //检查该unicode码是否在处理范围之内,在则返回该码对映汉字的拼音首字母,不在则调用其它函数处理
                chars.push(this._getChar(ch));
            }
            //处理arrResult,返回所有可能的拼音首字母串数组
            return this._getResult(chars);
        },


        // 提取拼音
        _getFullChar: function(str){
            for (var key in this.full_dict){
                if(-1 !== this.full_dict[key].indexOf(str)){
                    return this._capitalize(key); break;
                }
            }
            return false;
        },

        // 首字母大写
        _capitalize: function(str){
            if(str.length>0){
                var first = str.substr(0,1).toUpperCase();
                var spare = str.substr(1,str.length);
                return first + spare;
            }
        },

        _getChar: function(ch){
            var unicode = ch.charCodeAt(0);
            //如果不在汉字处理范围之内,返回原字符,也可以调用自己的处理函数
            if(unicode > 40869 || unicode < 19968)
                return ch; //dealWithOthers(ch);
            //检查是否是多音字,是按多音字处理,不是就直接在strChineseFirstPY字符串中找对应的首字母
            if(!this.options.checkPolyphone)
                return this.char_dict.charAt(unicode-19968);
            return this.polyphone[unicode] ? this.polyphone[unicode] : this.char_dict.charAt(unicode-19968);
        },

        _getResult: function(chars){
            if(!this.options.checkPolyphone)
                return chars.join('');
            var result = [''];
            for(var i=0,len=chars.length;i<len;i++){
                var str = chars[i], strlen = str.length;
                if(strlen == 1){
                    for(var j=0; j < result.length; j++){
                        result[k] += str;
                    }
                }else{
                    var swap1 = result.slice(0);
                    result = [];
                    for(var j=0; j < strlen; j++){
                        //复制一个相同的arrRslt
                        var swap2 = swap1.slice(0);
                        //把当前字符str[k]添加到每个元素末尾
                        for(var k=0; k < swap2.length; k++){
                            swap2[k] += str.charAt(j);
                        }
                        //把复制并修改后的数组连接到arrRslt上
                        result = result.concat(swap2);
                    }
                }
            }
            return result;
        }

    };

    var extend = function(dst, src){
        for(var property in src){
            dst[property] = src[property];
        }
        return dst;
    };

    return new Pinyin(arguments);
})();

/**
 * 主要业务逻辑相关
 */

var remote =  require('electron').remote;

var userUID = localStorage.getItem("uid");
var userObject={};
userObject=localStorage.getItem("user");
console.log("user");
console.log(userObject);
var timeout = 0;
var freHeight=0;
var myApplicationList=[];
var unionList=[];
var disk={};
var diskId="";
var tenantDisk={};
var tenantId="";
var yunXin = null;
     yunXin = {
        init: function () {
            this.initNode();
            this.initEmoji();

            this.cache = new Cache();
            this.mysdk = new SDKBridge(this,this.cache);
            myTeam.init(this.cache,this.mysdk);
            notification.init(this.cache,this.mysdk);
            this.firstLoadSysMsg = true;
            this.totalUnread =0;
            this.addEvent();
        },
        initUI:function(){
            this.buildConversations();
            this.showSysMsgCount();

        },
        initNode: function () {
            this.$logout = $('#j-logout');
            this.$userPic = $('#j-userPic');
            this.$userName = $('#j-userName');
            this.$contacts = $('#j-contacts');
            this.$contactsFriends = $('#j-right-friends-ul');
            this.$conversations = $('#j-conversations');
            this.$loadConversations = $('#j-loadConversations');
            this.$loadContacts = $('#j-loadContacts');
            this.$loadTeams = $('#j-loadTeams');

            this.$switchPanel = $('#j-switchPanel');
            this.$rightPanel = $('#j-rightPanel');
            this.$chatVernier = $('#j-chatVernier span');
            this.$chatTitle = $('#j-chatTitle');
            this.$chatEditor = $('#j-chatEditor');
            this.$chatContent = $('#j-chatContent');
            this.$sendBtn = $('#j-sendBtn');
            this.$messageText = $('#j-messageText');
            this.$nickName = $('#j-nickName');
            this.$logoutDialog = $('#j-logoutDialog');
            this.$closeDialog = $('#j-closeDialog');
            this.$cancelBtn = $('#j-cancelBtn');
            this.$okBtn = $('#j-okBtn');
            this.$quitBtn = $('#j-quitBtn');
            this.$miniBtn = $('#j-miniBtn');
            this.$maxBtn = $('#j-maxBtn');
            this.$quitBtnDarwin = $('#j-quitBtn-darwin');
            this.$miniBtnDarwin = $('#j-miniBtn-darwin');
            this.$maxBtnDarwin = $('#j-maxBtn-darwin');

            this.$mask = $('#j-mask');
            this.$friendList = $('.friends');
            //添加好友
            this.$addFriend = $('#addFriend');
            this.$addFriendBox = $('#addFriendBox');
            //个人信息
            this.$myInfo = $("#myInfo");
            //修改头像
            this.$modifyAvatar = $("#modifyAvatar");
            //用户信息
            this.$personCard = $('#personCard');

            //消息中心
            this.$notice = $('#notice');

            //黑名单
            this.$blacklist = $('#blacklist');

            this.$teamInfo = $('#j-teamInfo');
            this.$chooseFileBtn = $('#j-msgType');
            this.$fileInput = $('#j-uploadFile');
            this.$showEmoji = $('#j-showEmoji');
            this.$cloudMsg = $('#j-cloudMsg');
            this.$cloudMsgContainer = $('#j-cloudMsgContainer');
            this.$devices = $("#j-devices");
            this.$searchData=$(".search-name-div");
            this.$searchResult=$(".name-list-ul");
            this.$applocationDiv=$("#application-div");

            this.$union=$(".xn-talk-logo");

        },
        initEmoji:function(){
            var that = this,
                emojiConfig = {
                    'emojiList':emojiList,  //普通表情
                    'pinupList':pinupList,  //贴图
                    'width': 500,
                    'height':300,
                    'imgpath':'./images/',
                    'callback':function(result){
                        that.cbShowEmoji(result);
                    }
                }
            this.$emNode = new CEmojiEngine($('#emojiTag')[0],emojiConfig);
        },
         //承租人
         initUnion:function(deferred){
             var tenantGetRequest = new TenantGetAllListByUnionIdRequest();
             tenantGetRequest.setUnionId(userUID);
             xn_http_post(tenantGetRequest, function(data){
                 if (data.errors == null || data.errors.length > 0){
                     alert(data.errors[0].message);
                 }else{
                     unionList=data.result;
                     console.log("承租人");
                     console.log(unionList);
                     var tenantLength=unionList.length;
                     var tenantTxt="";
                     if(require('electron').remote.getGlobal('isDev') == true)
                     {
                         var avatarUrl = "http://img-dev.xiniunet.com/#id#/logo.jpg@100w_100h_100q.jpg";
                     }
                     else
                     {
                         var avatarUrl = "https://img-xiniunet-com.alikunlun.com/#id#/logo.jpg@100w_100h_100q.jpg";
                     }

                     var img = "<img class='panel_image' src='#url#' alt='#name#' onerror=\"this.src='images/advanced.png'\" />";
                     
                     for(var k=0;k<tenantLength;k++){
                         var name = unionList[k].name;
                         if(unionList[k].nameAlt && unionList[k].nameAlt.length > 0)
                         {
                             name = unionList[k].nameAlt;
                         }

                         var textTemp ='<div class="panel_item" data-id="'+unionList[k].id+'">'+
                         '<div class="panel_avatar">#avatar#</div>'+
                         '  <div class="panel_text">'+
                         '  	<p class="panel_single-row">'+name+'</p>'+
                         '  </div>'+
                         '</div>';
                         textTemp = textTemp.replace("#avatar#", img.replace("#url#", avatarUrl.replace('#id#', unionList[k].id)).replace("#name#", unionList[k].name));
                         tenantTxt = tenantTxt + textTemp;
                     }
                     $("#addressListDiv").html(tenantTxt);
                     var unionTxt="";
                     var unionName="";
                     var unionNameOn="";
                     var unionLen=unionList.length;
                     if(unionLen>1){
                         $(".xn-talk-logo").find(".triangle-down").removeClass("xn-hidden");
                         for(var i= 0,len=unionLen;i<len;i++){
                             if(unionList[i].nameAlt){
                                 unionName= unionList[i].nameAlt;
                             }else{
                                 unionName= unionList[i].name;
                             }
                             unionTxt=unionTxt+'<li>'+
                             '<img src="images/default-logo.png" class="logo-img f-left">'+
                             '<span class="logo-name f-left ml_10" data-id="'+ unionList[i].id+'">'+unionName +'</span>'+
                             '</li>';
                         }
                         $(".union-ul").html(unionTxt);

                     }else{
                         $(".xn-talk-logo").find(".triangle-down").addClass("xn-hidden");
                     }
                     if(unionList[0].nameAlt){
                         if(unionList[0].nameAlt.length>6){
                             unionList[0].nameAlt=unionList[0].nameAlt.substr(0,5)+"...";
                         }
                         unionNameOn= unionList[0].nameAlt;

                     }else{
                         if(unionList[0].name.length>6){
                             unionList[0].name=unionList[0].name.substr(0,5)+"...";
                         }
                         unionNameOn= unionList[0].name;
                     }
                     $("#unionName").html(unionNameOn);
                     $("#unionName").attr("data-id",unionList[0].id);
                     tenantId=$("#unionName").attr("data-id");

                     deferred.resolve(tenantId);
                     //网盘
                     var diskByObjectIdRequest = new DiskByObjectIdRequest();
                     diskByObjectIdRequest.setUnionId(userUID);
                     diskByObjectIdRequest.setTenantId(tenantId);
                     xn_http_post(diskByObjectIdRequest, function(data){
                         if (data.errors == null || data.errors.length > 0){
                             alert(data.errors[0].message);
                         }else{
                             console.log("网盘id");
                             disk=data.disk;
                             diskId=disk.id;
                             console.log(diskId);
                         }
                     });
                 }
             });
        },

         addEvent: function () {
            this.myApplicationGet();
            this.$chatContent.delegate('.j-img','click',this.showInfoInChat);
            this.$logout.on('click', this.showDialog.bind(this));
            this.$closeDialog.on('click', this.hideDialog.bind(this));
            this.$cancelBtn.on('click', this.hideDialog.bind(this));
            this.$okBtn.on('click', this.logout.bind(this));
            this.$quitBtn.on('click', this.logout.bind(this));
            this.$miniBtn.on('click', this.miniApp.bind(this));
            this.$maxBtn.on('click', this.maxApp.bind(this));
            this.$quitBtnDarwin.on('click', this.logout.bind(this));
            this.$miniBtnDarwin.on('click', this.miniApp.bind(this));
            this.$maxBtnDarwin.on('click', this.maxApp.bind(this));
            this.$switchPanel.on('click', 'a', this.switchPanel);
            this.$sendBtn.on('click', this.sendTextMessage.bind(this));
            this.$messageText.on('keydown', this.inputMessage);
            this.$chooseFileBtn.on('click', 'a', this.chooseFile.bind(this));
            this.$showEmoji.on('click', this.showEmoji.bind(this));
            this.$fileInput.on('change', this.uploadFile.bind(this));
            $('.friends .list').on('scroll', this.setVernierPosition);
            //云记录
            this.$cloudMsg.on('click', this.showCloudMsg.bind(this, this.$cloudMsg));
            $("#j-cloudMsgContainer").delegate('.j-backBtn', 'click', this.closeCloudMsgContainer.bind(this));
            $("#j-cloudMsgContainer").delegate('.j-loadMore', 'click', this.loadMoreCloudMsg.bind(this));
            // 踢人 0：移动端 1：pc端
            $("#j-devices .j-kickMoblie").on('click',this.mysdk.kick.bind(this.mysdk,0));
            $("#j-devices .j-kickPc").on('click',this.mysdk.kick.bind(this.mysdk,1));
            $("#j-backBtn2").on('click',this.hideDevices.bind(this));
            $(".m-devices").on('click',this.showDevices.bind(this));

            this.$addFriend.on('click',this.showAddFriend.bind(this));
            this.$addFriendBox.delegate('.j-close', 'click', this.hideAddFriend.bind(this));
           // this.$addFriendBox.delegate('.j-search','click',this.searchFriend.bind(this));
            this.$addFriendBox.delegate('.j-back','click',this.resetSearchFriend.bind(this));
            this.$addFriendBox.delegate('.j-add','click',this.applyFriend.bind(this));
            this.$addFriendBox.delegate('.j-blacklist','click',this.rmBlacklist.bind(this));
            this.$addFriendBox.delegate('.j-chat','click',this.beginChat.bind(this));
            this.$addFriendBox.delegate('.j-account','keydown',this.inputAddFriend.bind(this));

            this.$personCard.delegate('.j-close', 'click', this.hideInfoBox.bind(this));
            this.$personCard.delegate('.j-saveAlias', 'click', this.addFriendAlias.bind(this));
            this.$personCard.delegate('.j-add', 'click', this.addFriendInBox.bind(this));
            this.$personCard.delegate('.j-del', 'click', this.removeFriend.bind(this));
            this.$personCard.delegate('.j-chat', 'click', this.doChat.bind(this));
            this.$personCard.delegate('.mutelist>.u-switch', 'click', this.doMutelist.bind(this));
            this.$personCard.delegate('.blacklist>.u-switch', 'click', this.doBlacklist.bind(this));
            $("#headImg").on('click',this.showInfo2.bind(this));

            $("#showBlacklist").on('click',this.showBlacklist.bind(this));
            this.$blacklist.delegate('.j-close', 'click', this.hideBlacklist.bind(this));
            this.$blacklist.delegate('.items .j-rm', 'click', this.removeFromBlacklist);

            //我的手机
            $("#myPhone").on('click',this.sendToMyPhone.bind(this));
            $("#myApplication").on('click',this.toMyApplication.bind(this));


            //我的应用
            $("#myApplication").on("click",this.myApplicationShow.bind(this));
            this.$applocationDiv.delegate('.panel_item', 'click', this.toNewApplication);

            //企业通讯录
            $("#addressList").on('click',this.toAddressList.bind(this));



            $("#j-cloudMsgContainer").delegate('.j-mbox','click',this.playAudio);
            $("#j-chatContent").delegate('.j-mbox','click',this.playAudio);

            //我的好友
            $("#myFriends").on("click",this.myFriendsShow.bind(this));
            $("#j-loadContacts .panel_item").on("click",function(){
                $("#j-loadContacts .panel_item").removeClass("active");

                $(this).addClass("active");
            });

             $("#addressListDiv ").on("click",".panel_item",function(){
                 $("#addressListDiv").find(".panel_item").removeClass("active");
                 $("#addressList").removeClass("active");
                 $(this).addClass("active");
             });

            //消息中心
            $("#showNotice").on('click',this.clickNotice.bind(this));
            this.$notice.delegate('.j-close', 'click', this.hideNotice.bind(this));
            this.$notice.delegate('.j-reject', 'click', this.rejectNotice);
            this.$notice.delegate('.j-apply', 'click', this.acceptNotice);
            this.$notice.delegate('.f-apply', 'click', this.passFriendApply);
            this.$notice.delegate('.f-reject', 'click', this.rejectFriendApply);
            this.$notice.delegate('.j-rmAllSysNotice', 'click', this.rmAllSysNotice.bind(this));
            this.$notice.delegate('.tab li', 'click', this.changeNotice);

            //搜索联系人
            // $("#searchName-input").on('keyup',this.clickSearchBox.bind(this));
            // $(".search-btn").on('click',this.clickSearchBox.bind(this));
            //
            // this.$searchResult.delegate('.arrow-right','click',function(){
            //     var thisAccount=$(this).attr("data-account");
            //     var thisScene=$(this).attr("data-scene");
            //     var thisType=$(this).attr("data-type");
            //     if(thisScene){
            //         yunXin.openChatBox(thisAccount,thisScene);
            //     }else{
            //         yunXin.openChatBox(thisAccount,thisType);
            //     }
            //
            //     $(".name-list-div").addClass("hide");
            //     $("#searchName-input").val("");
            // });

            //我的信息

        //    $("#j-userName").on('click',this.showMyInfo.bind(this));
        //    $("#j-userPic").on('click',this.showMyInfo.bind(this));
            this.$myInfo.delegate('.j-close', 'click', this.hideMyInfoBox.bind(this));
            this.$myInfo.delegate('.operate .j-edit', 'click', this.showEditMyInfo.bind(this));
            this.$myInfo.delegate('.operate .j-cancel', 'click', this.hideEditMyInfo.bind(this));
            this.$myInfo.delegate('.operate .j-save', 'click', this.saveEditMyInfo.bind(this));
            this.$myInfo.delegate('.j-modifyAvatar', 'click', this.showModifyAvatar.bind(this));
            //修改头像
            this.$modifyAvatar.delegate('.j-close', 'click', this.hideModifyAvatar.bind(this));
            this.$modifyAvatar.delegate('.j-choseFile, .j-reupload', 'click', this.doClickModifyAvatar.bind(this));
            this.$modifyAvatar.delegate('.j-save', 'click', this.doSaveAvatar.bind(this));
            this.$modifyAvatar.delegate('.j-upload','change', this.viewAvatar.bind(this));
            $("#datepicker").datepicker({yearRange:"1900:2015"});
        },

        //获取用户信息
        initInfo:function(obj,team){
            this.lockPerson = true;
            this.lockTeam = true;
            var array = Object.keys(obj),
                teamArray=[];
            for (var i = team.length - 1; i >= 0; i--) {
                if(!this.cache.hasTeam(team[i])){
                    teamArray.push(team[i]);
                }
            };
            if(teamArray.length>0){
                this.mysdk.getLocalTeams(teamArray,this.cbInitLocakTeamInfo.bind(this));
            }else{
                this.lockTeam = false;
            }
            this.mysdk.getUsers(array,this.cbInitInfo.bind(this));
        },

        cbInitInfo:function(error,data){
            if(!error){
                this.cache.setPersonlist(data);
                this.lockPerson = false;
                if(this.lockTeam===false){
                    this.initUI();
                }
            }else{
                alert("获取用户信息失败")
            }

        },
        cbInitLocakTeamInfo:function(err,data){
            if(!err){
                this.cache.addTeamMap(data.teams);
                this.lockTeam = false;
                if(this.lockPerson===false){
                    this.initUI();
                }
            }else{
                alert("获取本地群组失败")
            }
        },
        //左栏上方自己的信息
        showMe:function(){
            var user = this.cache.getUserById(userUID);
            this.$userName.text(user.nick);

            this.$userPic.attr('src', getAvatar(user.avatar));
            localStorage.setItem('nickName',user.nick);
            localStorage.setItem('avatar',user.avatar);
        },
        showMyInfo:function(){
            var user = this.cache.getUserById(userUID);
            console.log(user);


            var electron = require('electron'); // 控制应用生命周期的模块。
            var BrowserWindow = electron.remote.BrowserWindow;  // 创建原生浏览器窗口的模块

            mainWindow = new BrowserWindow({ frame: false, resizable: false,center:true,modal:true, useContentSize:true, class:'Main',width:400, height: 560, webPreferences:
            {webSecurity: false,allowDisplayingInsecureContent:true, allowRunningInsecureContent:true}});

            mainWindow.setMenuBarVisibility(false);

            if(require('electron').remote.getGlobal('isDebug') == true)
            {
                mainWindow.openDevTools();
            }
            mainWindow.class = 'PersonCard';
            console.log(__dirname);
            mainWindow.setSize(400, 560);

            if(require('electron').remote.getGlobal('isDebug')  == true)
            {
                mainWindow.loadURL(("http://127.0.0.1:#port#/xntalk/personCard.html?unionId=#unionId#&avatar=#avatar#")
                    .replace("#port#", require('electron').remote.getGlobal('port'))
                    .replace('#unionId#',userUID))
                    .replace('#avatar#',getAvatar(user.avatar));
            }
            else
            {

                mainWindow.loadURL(("http://127.0.0.1:#port#/xntalk/personCard.html?unionId=#unionId#&avatar=#avatar#")
                    .replace("#port#", require('electron').remote.getGlobal('port'))
                    .replace('#unionId#',userUID)
                    .replace('#avatar#',getAvatar(user.avatar))
                );
            }
     
            alert(getAvatar(user.avatar));

            //if(freHeight<600){
            //    window.resizeTo(1015,660);//改变大小
            //}



            var $node = this.$myInfo.data({info:user});
            $node.find(".u-icon").attr('src', getAvatar(user.avatar));
            $node.find(".j-nick").text(user.nick);
            $node.find(".j-nickname").text(user.nick);
            var avatarSrc="";
            if(user.gender&&user.gender!=="unknown"){
                avatarSrc = 'images/'+user.gender+'.png';
                $node.find(".j-gender").removeClass("hide");
            }else{
                $node.find(".j-gender").addClass("hide");
            }
            $node.find(".j-gender").attr('src',avatarSrc);
            $node.find(".j-username").text("帐号："+user.account);
            $node.find(".j-birth").text(user.birth ===undefined?"--":user.birth||"--")
            $node.find(".j-tel").text(user.tel ===undefined?"--":user.tel||"--")
            $node.find(".j-email").text(user.email ===undefined?"--":user.email||"--")
            $node.find(".j-sign").text(user.sign ===undefined?"--":user.sign||"--")
            $node.removeClass('hide');
            this.$mask.removeClass('hide');
        },
        hideMyInfoBox:function(){
            this.$myInfo.addClass('hide');
            this.$myInfo.removeClass('edit');
            this.$mask.addClass('hide');
        },
        showEditMyInfo:function(){
            //if(freHeight<600) {
            //    window.resizeTo(1015, 660);//改变大小
            //}
            var $node = this.$myInfo,
                user = $node.data("info");
            $node.find(".e-nick").val(user.nick);
            $node.find(".e-gender").val(user.gender);
            if(user.birth !==undefined){
                $node.find(".e-birth").val(user.birth)
            }
            if(user.tel !==undefined){
                $node.find(".e-tel").val(user.tel)
            }
            if(user.email !==undefined){
                $node.find(".e-email").val(user.email)
            }
            if(user.sign !==undefined){
                $node.find(".e-sign").val(user.sign)
            }
            this.$myInfo.addClass('edit');
        },
        hideEditMyInfo:function(){
            this.$myInfo.removeClass('edit');
        },
        saveEditMyInfo:function(){
            var $node = this.$myInfo;
            var nick = $node.find(".e-nick").val().trim();
            if(!nick){
                alert("昵称不能为空");
                return;
            }
            var gender = $node.find(".e-gender").val();
            var birth = $node.find(".e-birth").val().trim();
            var tel = $node.find(".e-tel").val().trim();
            var email = $node.find(".e-email").val().trim();
            if(email&&!/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/.test(email)){
                alert("email格式不正确");
                return;
            }
            var sign  = $node.find(".e-sign").val().trim();
            this.mysdk.updateMyInfo(nick,gender,birth,tel,email,sign,this.cbSaveMyInfo.bind(this));
        },
        cbSaveMyInfo:function(err,data){
            if(err){
                alert(err);
            }else{
                data.account = userUID;
                this.cache.updatePersonlist(data);
                this.showMe();
                this.$myInfo.removeClass("edit");
                this.showMyInfo();

            }
        },
        //修改头像相关
        showModifyAvatar:function(){
            this.$myInfo.addClass("hide");
            this.$modifyAvatar.removeClass("hide");
        },
        hideModifyAvatar:function(){
            this.resetCorpAvatar();
            this.$modifyAvatar.addClass("hide");
            this.$myInfo.removeClass("hide");
        },
        resetCorpAvatar:function(){
            this.corpParameters = null;
            this.avatarUrl = null;
            if(!!this.modifyAvatar){
                this.modifyAvatar.disable();
            }
            this.$modifyAvatar.find(".big img").attr("src","").addClass("hide");
            this.$modifyAvatar.find(".small img").attr("src","").addClass("hide");
            $('#cropImg img').attr("src","").addClass("hide");
            this.$modifyAvatar.find(".choseFileCtn").removeClass("hide");
        },
        viewAvatar:function(){
            var fileInput = this.$modifyAvatar.find(".j-upload").get(0);
            if(fileInput.files.length === 0){
                return;
            }
            this.mysdk.previewImage({fileInput:fileInput,callback:this.cbUploadAvatar.bind(this)})
        },
        cbUploadAvatar:function(err,data){
            if(err){
                alert(err);
                return;
            }else{
                if(data.w<300||data.h<300){
                    alert("图片长宽不能小于300")
                    return;
                }
                this.showPreAvatar(data.url);
            }
        },
        showPreAvatar:function(url){
            var that = this,
                preUrl,
                $choseFileCtn = this.$modifyAvatar.find(".choseFileCtn"),
                $preBig = this.$modifyAvatar.find(".big img"),
                $preSmall = this.$modifyAvatar.find(".small img"),
                $cropImgContainer = $('#cropImg'),
                $cropImg = $cropImgContainer.find("img");
            $choseFileCtn.addClass("hide");
            this.avatarUrl =url;
            preUrl = url+"?imageView&thumbnail=300y300";
            $preBig.attr("src",preUrl).removeClass("hide");
            $preSmall.attr("src",preUrl).removeClass("hide");
            $cropImg.attr("src",preUrl).removeClass("hide");
            $preBig.css({
                width:160,
                height:160
            });
            $preSmall.css({
                width:40,
                height:40
            });
        },
        doClickModifyAvatar:function(){
            //置空节点避免2次上传无响应
            this.$modifyAvatar.find(".j-uploadForm").get(0).reset();
            this.$modifyAvatar.find(".j-choseFile").val(null);
            this.$modifyAvatar.find(".j-upload").click();

        },
        doSaveAvatar:function(){
            var url;
            if(!!this.avatarUrl){
                this.mysdk.updateMyAvatar(this.avatarUrl,this.cbSaveMyAvatar.bind(this))
            }else{
                alert("请上传一张头像");
            }
        },
        cbSaveMyAvatar:function(err,data){
            if(err){
                alert("修改头像失败");
                console.log(err);
            }else{
                this.cache.updateAvatar(data.avatar);
                this.hideModifyAvatar();
                this.showMyInfo();
                this.showMe();
            }
        },
        /**
         * 多端登录管理
         * @param  {object} devices 设备
         * @return {void}
         */
        loginPorts:function(devices){
            var pc,mobile;
            for (var i = devices.length - 1; i >= 0; i--) {
                if(/iOS|Android|WindowsPhone/i.test(devices[i].type)){
                    mobile=devices[i];
                }else if(/PC/i.test(devices[i].type)){
                    pc = devices[i];
                }
            };
            if((pc&&pc.online)||(mobile&&mobile.online)){
                if((pc&&pc.online)&&(mobile&&mobile.online)){
                    $(".m-devices").html("正在使用犀牛手机版，电脑版")
                    $("#j-devices .pc").removeClass("hide");
                    $("#j-devices .mobile").removeClass("hide");
                    this.mysdk.mobileDeviceId = mobile.deviceId;
                    this.mysdk.pcDeviceId = pc.deviceId;
                }else if(pc&&pc.online){
                    $(".m-devices").html("正在使用犀牛电脑版")
                    $("#j-devices .pc").removeClass("hide");
                    $("#j-devices .mobile").addClass("hide");
                    this.mysdk.mobileDeviceId = false;
                    this.mysdk.pcDeviceId = pc.deviceId;
                }else{
                    $(".m-devices").html("正在使用犀牛手机版")
                    $("#j-devices .mobile").removeClass("hide");
                    $("#j-devices .pc").addClass("hide");
                    this.mysdk.mobileDeviceId = mobile.deviceId;
                    this.mysdk.pcDeviceId = false;
                }
                $(".m-devices").removeClass("hide");
                $(".friends").height(463);
                $("#j-chatVernier").css({marginTop:'41px'});
            }else{
                $(".m-devices").addClass("hide");
                $("#j-devices").addClass("hide");
                $("#j-devices .pc").addClass("hide");
                $("#j-devices .mobile").addClass("hide");
                this.mysdk.mobileDeviceId = false;
                this.mysdk.pcDeviceId = false;
                $(".friends").height(504);
                $("#j-chatVernier").css({marginTop:'0'});
            }
        },
        /**
         * 多端登录面板UI
         */
        showDevices:function(){
            this.$devices.removeClass("hide");
        },
        hideDevices:function(){
            this.$devices.addClass("hide");
        },

        /**
         * 添加好友窗口
         */
        showAddFriend:function(){
            //if(freHeight<600) {
            //    window.resizeTo(1015, 660);//改变大小
            //}
            this.friendData = null;
            this.$addFriendBox.removeClass("hide");
            this.$mask.removeClass('hide');
            this.$addFriendBox.find(".j-account").focus();
        },
        hideAddFriend:function(){
            this.resetSearchFriend();
            this.$addFriendBox.addClass("hide");
            this.$mask.addClass('hide');
        },
        searchFriend:function(){
            var $this=this;
            //var account =  $.trim(this.$addFriendBox.find(".j-account").val().toLowerCase());
            var controllerScope = $('div[ng-controller="addFriendController"]').scope();
            yunXin.mysdk.getUser(controllerScope.lookup.unionId, yunXin.cbGetUserInfo.bind(yunXin));
            // if(account!==""){
            //     var unionGetByAccountRequest = new UnionGetByAccountRequest();
            //     unionGetByAccountRequest.setAccount(account);
            //     xn_http_post(unionGetByAccountRequest, function(data){
            //         if(data.result=="0"){
            //             $this.$addFriendBox.find(".tip").html("该帐号不存在，请检查你输入的帐号是否正确");
            //             $this.$addFriendBox.attr('class',"m-dialog done");
            //         }
            //         if(data != "error" && data.union != null &&  data.union.id != null){
            //             yunXin.mysdk.getUser(data.union.id,yunXin.cbGetUserInfo.bind(yunXin));
            //         }else if(data.errors != null){
            //             if(data.errors.length!=0){
            //                 $this.$addFriendBox.find(".tip").html(data.errors[0].message);
            //                 $this.$addFriendBox.attr('class',"m-dialog done");
            //             }
            //         }else {
            //             $this.$addFriendBox.find(".tip").html("登录错误");
            //             $this.$addFriendBox.attr('class',"m-dialog done");
            //         }
            //     });
            //
            // }
        },
        beginChat:function(){
            //if(freHeight<600) {
            //    window.resizeTo(1015, 660);//改变大小
            //}
            var account = $.trim(this.$addFriendBox.find(".j-account").val().toLowerCase());
            this.hideAddFriend();
            this.openChatBox(account,"p2p");
        },
        resetSearchFriend:function(){
            this.$addFriendBox.attr('class',"m-dialog");
            this.$addFriendBox.find(".j-account").val("");
        },
        addFriend:function(){
            var id  = $.trim(this.$addFriendBox.find(".j-account").val().toLowerCase());
            this.mysdk.addFriend(id,this.cbAddFriend.bind(this));
        },
        applyFriend:function(){
            var id  = $.trim(this.$addFriendBox.find(".j-username").attr("data-id").toLowerCase());
            this.mysdk.applyFriend(id,this.cbAddFriend.bind(this));
        },
        rmBlacklist:function(){
            var id  = $.trim(this.$addFriendBox.find(".j-account").val().toLowerCase());
            this.mysdk.markInBlacklist(id,false,this.cbRmBlacklist.bind(this))
        },
        cbRmBlacklist:function(err,data){
            if(!err){
                var account = data.account;
                this.cache.removeFromBlacklist(account);
                this.buildContacts();
                var isFriend = this.cache.isFriend(account);
                if(!isFriend){
                    this.friendData = data;
                }
                this.$addFriendBox.removeClass('blacklist');
                this.$addFriendBox.addClass(isFriend?"friend":"noFriend");
            }
        },
        inputAddFriend:function(evt){
            if(evt.keyCode==13){
                $("#addFriendBox .j-account").blur();
                this.searchFriend();
            }
        },
        cbAddFriend:function(error, params) {
            console.log("加好友信息………………………………………………………………………………………………");
            console.log(error);
            if(!error){
                this.$addFriendBox.find(".tip").html("消息发送成功！");
                this.$addFriendBox.attr('class',"m-dialog done");
                this.cache.updatePersonlist(this.friendData);
                this.buildContacts();
            }else{
                this.$addFriendBox.find(".tip").html("该帐号不存在，请检查你输入的帐号是否正确");
                this.$addFriendBox.attr('class',"m-dialog done");
            }

        },
        cbGetUserInfo:function(err,data){
            if(err){
                alert(err);
            }
            if(!!data){
                var $info = this.$addFriendBox.find(".info"),
                    user = data,
                    account = data.account;
                $info.find("img").attr("src",getAvatar(user.avatar));
                $info.find(".j-nickname").html(user.nick);
                {
                    var unionGetRequest =  new UnionGetRequest();
                    unionGetRequest.setId(account);
                    xn_http_post(unionGetRequest, function (data) {
                        $info.find(".j-username").html("帐号："+ data.union.account);
                    });

                }

                $info.find(".j-username").html("帐号："+ account);
                $info.find(".j-username").attr("data-id",account);
                if(account == userUID){
                    this.$addFriendBox.find(".tip").html("别看了就是你自己");
                    this.$addFriendBox.attr('class',"m-dialog done");
                }else{
                    var isFriend = this.cache.isFriend(account),
                        inBlacklist = this.cache.inBlacklist(account);
                    if(!isFriend){
                        this.friendData = data;
                    }
                    if(inBlacklist){
                        this.$addFriendBox.addClass("blacklist");
                    }else{
                        this.$addFriendBox.addClass(isFriend?"friend":"noFriend");
                    }
                }

            }else{
                this.$addFriendBox.find(".tip").html("该帐号不存在，请检查你输入的帐号是否正确");
                this.$addFriendBox.attr('class',"m-dialog done");
            }
        },
        /**
         * 用户名片
         */
        showInfo:function(account,type){
            if(type=="p2p"){
                var user = yunXin.cache.getUserById(account);
                this.showInfoBox(user);
            }

        },
        //从聊天面板点进去
        showInfo2:function(){
            if($('#j-chatEditor').data('type') =="p2p"){
                var account = $('#j-chatEditor').data('to');
                var user = yunXin.cache.getUserById(account);
                this.showInfoBox(user);
            }
        },
        showInfoBox:function(user){

            if(user.account === userUID){
                this.showMyInfo();
                return;
            }
            var isFriend = this.cache.isFriend(user.account);
            var inMutelist = this.cache.inMutelist(user.account);
            var inBlacklist = this.cache.inBlacklist(user.account);
            var $node = this.$personCard.data({account:user.account,inMutelist:inMutelist?true:false,inBlacklist:inBlacklist?true:false});
            $node.find(".u-icon").attr('src', getAvatar(user.avatar));
            $node.find(".j-nickname").text("昵称："+user.nick);
            $node.find(".j-nick").text(getNick(user.account));
            var avatarSrc ="";
            if(user.gender&&user.gender!=="unknown"){
                avatarSrc = 'images/'+user.gender+'.png'
            }else{
                $node.find(".j-gender").addClass("hide");
            }
            $node.find(".j-gender").attr('src',avatarSrc);
            $node.find(".j-username").text("帐号："+user.account);
            $node.find(".j-username").attr("data-id",user.account);
            $node.find(".j-birth").text(user.birth ===undefined?"--":user.birth)
            $node.find(".j-tel").text(user.tel ===undefined?"--":user.tel)
            $node.find(".j-email").text(user.email ===undefined?"--":user.email)
            $node.find(".j-sign").text(user.sign ===undefined?"--":user.sign)
            if(inMutelist){
                $node.find(".mutelist>.u-switch").addClass('off');
            }
            if(!inBlacklist){
                $node.find(".blacklist>.u-switch").addClass('off');
            }else{
                $node.addClass('blacklist');
            }
            if(!isFriend){
                $node.addClass("notFriend");
            }else{
                var alias = this.cache.getFriendAlias(user.account);
                $node.find(".e-alias").val(alias);
            }

            var controllerScope = $('div[ng-controller="personCardController"]').scope();  // Get controller's scope

            console.log(user);
           // alert(isFriend);
            controllerScope.isBuddy = isFriend;
            controllerScope.showPersonCard(user, isFriend);

           




           // $node.removeClass('hide');
           // this.$mask.removeClass('hide');
        },
        showInfoInChat:function(account,type){
            var account = $(this).attr('data-account'),
                user = yunXin.cache.getUserById(account);
            if(account==userUID){
                return;
            }
            yunXin.showInfoBox(user);
        },
        hideInfoBox:function(){
            this.$personCard.addClass('hide');
            this.$mask.addClass('hide');
            this.$personCard.removeClass('notFriend');
            this.$personCard.removeClass('blacklist');
            this.$personCard.find(".mutelist .u-switch").removeClass('off');
            this.$personCard.find(".blacklist .u-switch").removeClass('off');

        },
        // 好友备注
        addFriendAlias:function(){
            var account = this.$personCard.data("account");
            var alias = this.$personCard.find(".e-alias").val().trim();
            this.mysdk.updateFriend(account,alias,this.cbAddFriendAlias.bind(this));
        },
        cbAddFriendAlias:function(err,data){
            if(!err){
                alert("修改备注成功");
                this.$personCard.find(".e-alias").val(data.alias);
                this.cache.updateFriendAlias(data.account,data.alias);
                this.$personCard.find(".j-nick").text(getNick(data.account));
                if ($('#j-chatEditor').data('to') === data.account) {
                    this.$nickName.text(getNick(data.account));
                }
                this.buildConversations();
                this.buildContacts();
            }else{
                alert("修改备注失败");
            }
        },
        addFriendInBox:function(){
            // if(this.$personCard.is(".blacklist")){
            //     return;
            // }
            var account=this.$personCard.find(".j-username").attr("data-id");
            //this.mysdk.addFriend(account,this.cbAddFriendInBox.bind(this));
            this.mysdk.applyFriend(account,this.cbAddFriendInBox.bind(this));
        },
        cbAddFriendInBox:function(error, params){
            // if(!error){
            //    this.hideInfoBox();
            //    this.cache.addFriend(params.friend);
            //    this.buildContacts();
            //}else{
            //     alert("添加好友失败")
            //}
            if(!error){
                alert("消息发送成功！");
                this.cache.updatePersonlist(this.friendData);
                this.buildContacts();
            }else{
                this.$addFriendBox.find(".tip").html("该帐号不存在，请检查你输入的帐号是否正确");
                this.$addFriendBox.attr('class',"m-dialog done");
            }
        },
        removeFriend:function(){
            if(window.confirm("确定要删除")){
                var account = this.$personCard.data("account");
                this.mysdk.deleteFriend(account,this.cbRemoveFriend.bind(this));
            }

        },
        cbRemoveFriend:function(error, params){
            if(!error){
                this.hideInfoBox();
                this.cache.removeFriend(params.account);
                if ($('#j-chatEditor').data('to') === params.account) {
                    this.$nickName.text(getNick(params.account));
                }
                this.buildContacts();
            }else{
                alert("删除好友失败")
            }
        },
        doChat:function(){
            var account = this.$personCard.data("account");
            this.hideInfoBox();
            var $container;
            if(!this.$loadConversations.is('.hide')){
                $container = this.$loadConversations;
            }else if(!this.$loadContacts.is('.hide')){
                $container = this.$loadContacts;
            }else{
                this.openChatBox(account,"p2p");
                return;
            }
            var $li = $container.find('.m-panel li[data-account="'+account+'"]');
            if($li.length>0){
                $li.find(".count").addClass("hide");
                $li.find(".count").text(0);
            }

            this.openChatBox(account,"p2p");
        },
        doMutelist:function(){
            if(this.$personCard.is(".blacklist")){
                return;
            }
            var account = this.$personCard.data("account"),
                status = !this.$personCard.data("inMutelist");
            this.mysdk.markInMutelist(account,status,this.cbDoMutelist.bind(this))

        },
        cbDoMutelist:function(err,data){
            if(!err){
                if(data.isAdd){
                    this.cache.addToMutelist(data.record);
                    this.$personCard.data("inMutelist",true);
                }else{
                    this.cache.removeFromMutelist(data.account);
                    this.$personCard.data("inMutelist",false);
                }
                this.$personCard.find(".mutelist .u-switch").toggleClass("off");
            }else{
                alert("操作失败");
            }
        },
        doBlacklist:function(){

            var account = this.$personCard.data("account"),
                status = !this.$personCard.data("inBlacklist");
            this.mysdk.markInBlacklist(account,status,this.cbDoBlacklist.bind(this))
        },
        cbDoBlacklist:function(err,data){
            if(!err){
                if(data.isAdd){
                    this.cache.addToBlacklist(data.record);
                    this.$personCard.data("inBlacklist",true);
                    this.$personCard.addClass("blacklist");
                }else{
                    this.cache.removeFromBlacklist(data.account);
                    this.$personCard.data("inBlacklist",false);
                    this.$personCard.removeClass("blacklist");
                }
                this.$personCard.find(".blacklist .u-switch").toggleClass("off");
                this.buildConversations();
                this.buildContacts();
            }else{
                alert("操作失败");
            }
        },
        /**
         * 我的手机
         */
        sendToMyPhone:function(){
            //if(freHeight<600) {
            //    window.resizeTo(1015, 660);//改变大小
            //}
            this.openChatBox(userUID,"p2p");
        },
        /**
         * 我的应用
         */
        toMyApplication:function(){
            //嵌入代码
        },

        /**
         * 搜索
         * ***/
        searchList:function(){
            var count1=0;
            var count2=0;
            var count3=0;
            var count4=0;
            var count5=0;
            var count6=0;
            var keyword=$("#searchName-input").val();

            var thisFrList=[];
            var thisFrTxt="";
            thisFrList=this.cache.getFriendslist();
            for(var j= 0,len=thisFrList.length;j<len;j++){
                if(thisFrList[j].nick.indexOf(keyword)!=-1){
                    count5=count5+1;
                    thisFrTxt=thisFrTxt+'<li>'+
                        '<div class="panel_avatar">'+cutwords(thisFrList[j].nick,2) +'</div>'+
                        '<div class="panel_text">'+thisFrList[j].nick +'</div>'+
                        '<div class="arrow-right" data-scene="p2p" data-account="'+thisFrList[j].account+'"></div>' +
                        '</li>';
                }
            }
            $("#friendList").html(thisFrTxt);
            if(thisFrTxt!=""){
                $(".friendFlag").removeClass("hide");
            }else{
                $(".friendFlag").addClass("hide");
                $("#friendList").html("");
                count5=0;
            }
            //console.log(thisFrList);

            var thisTeamList=[];
            var thisTeamTxt="";
            thisTeamList=this.cache.getTeamlist();
            console.log(thisTeamList);
            for(var j= 0,len=thisTeamList.length;j<len;j++){
                if(thisTeamList[j].name.indexOf(keyword)!=-1){
                    count6=count6+1;
                    thisTeamTxt=thisTeamTxt+'<li>'+
                        '<div class="panel_avatar">'+cutwords(thisTeamList[j].name,2) +'</div>'+
                        '<div class="panel_text">'+thisTeamList[j].name +'</div>'+
                        '<div class="arrow-right" data-gtype="normal" data-type="team" data-account="'+thisTeamList[j].teamId+'"></div>' +
                        '</li>';
                }
            }
            $("#teamList").html(thisTeamTxt);
            if(thisTeamTxt!=""){
                $(".teamFlag").removeClass("hide");
            }else{
                $(".teamFlag").addClass("hide");
                $("#teamList").html("");
                count6=0;
            }
            var globalSearchRequest = new GlobalSearchRequest();
            globalSearchRequest.setKeyword(keyword);
            xn_http_post(globalSearchRequest, function(data){
                if (data.errors == null || data.errors.length > 0){
                    alert(data.errors[0].message);
                }else{
                    console.log(data);
                    var employeeTxt="";
                    var userTxt="";
                    var tenantTxt="";
                    var branchTxt="";
                    if(data.employeeList){
                        $(".employeeFlag").removeClass("hide");
                        count1=data.employeeList.length;
                        for(var i= 0;i<count1;i++){
                            var unionTxt="";
                            if(data.employeeList[i].unionId){
                                unionTxt='<div class="arrow-right" data-scene="p2p" data-account="'+data.employeeList[i].unionId+'"></div>';
                            }
                            employeeTxt=employeeTxt+'<li data-union="'+data.employeeList[i].unionId+'">'+
                                '<div class="panel_avatar">'+cutwords(data.employeeList[i].name,2) +'</div>'+
                                '<div class="panel_text">'+data.employeeList[i].name +'</div>'+unionTxt+
                                '</li>';
                        }
                        $("#empoyeeList").html(employeeTxt);
                    }else{
                        $("#empoyeeList").html("");
                        $(".employeeFlag").addClass("hide");
                        count1=0;
                    }
                    if(data.userList){
                        count2=data.userList.length;
                        for(var i= 0;i<count2;i++){
                            var unionTxt="";
                            if(data.userList[i].unionId){
                                unionTxt='<div class="arrow-right " data-scene="p2p" data-account="'+data.employeeList[i].unionId+'"></div>';
                            }
                            userTxt=userTxt+'<li data-union="'+data.userList[i].unionId+'">'+
                                '<div class="panel_avatar">'+cutwords(data.userList[i].name,2) +'</div>'+
                                '<div class="panel_text">'+data.userList[i].name +'</div>'+unionTxt+
                                '</li>';
                        }
                        $("#userList").html(userTxt);
                    }else{
                        $("#userList").html("");
                        count2=0;
                    }


                }
                $("#data-count").html(Number(count1)+Number(count2)+Number(count3)+Number(count4)+Number(count5)+Number(count6));
            });
        },
        clickSearchBox:function(){
            $(".name-list-div").removeClass('hide');
            var that=this;
            clearTimeout(timeout);
            timeout = setTimeout(function(){
                that.searchList();
            },200);
        },
         myApplicationGet:function(){
             var tenantGetAllListByUnionIdRequest = new TenantGetAllListByUnionIdRequest();
             tenantGetAllListByUnionIdRequest.setUnionId(userUID);
             xn_http_post(tenantGetAllListByUnionIdRequest, function(data){
                 if (data.errors == null || data.errors.length > 0){
                     alert(data.errors[0].message);
                 }else {
                     console.log(data);
                     myApplicationList=data.result;
                     var applicationTxt="";
                     var nameAlt="";
                     if(myApplicationList.length>0){
                         for(var j= 0,len=myApplicationList.length;j<len;j++){
                             if(myApplicationList[j].nameAlt){
                                 nameAlt=myApplicationList[j].nameAlt;
                             }else{
                                 nameAlt=myApplicationList[j].name;
                             }
                             applicationTxt=applicationTxt+('<div  class="panel_item" data-json="'+encodeURI(JSON.stringify(myApplicationList[j]))+'">'+
                             '		<div class="panel_avatar">'+
                             '			<img class="panel_image" src="images/advanced.png" alt="'+myApplicationList[j].name+'"/>'+
                             '		</div>'+
                             '		<div class="panel_text">'+
                             '			<p class="panel_single-row">'+nameAlt+'</p>'+
                             '		</div>'+
                             '	</div>');

                         }
                         $("#application-div").html(applicationTxt);

                     }

                 }
             });
        },
         myApplicationShow:function(){
             if($("#application-div").hasClass("hide")){
                 $("#application-div").removeClass("hide");
             }else{
                 $("#application-div").addClass("hide");
             }
        },
         toAddressList:function(){
             if($("#addressListDiv").hasClass("hide")){
                 $("#addressListDiv").removeClass("hide");
             }else{
                 $("#addressListDiv").addClass("hide");
             }
         },
         toAddressShow:function(){
            var tenantId=$(this).attr("data-id");

         },

         myFriendsShow:function(){
             $(".right-panel").addClass("hide");
             $("#j-right-friends").removeClass("hide");
         },
         toNewApplication:function(){
             var thisData=$(this).attr("data-json");
             console.log(decodeURI(thisData));
             var tenant = JSON.parse(decodeURI(thisData));
             var passportIdGetByUnionIdAndTenantIdRequest = new PassportIdGetByUnionIdAndTenantIdRequest();
             passportIdGetByUnionIdAndTenantIdRequest.setTenantId(tenant.id);
             passportIdGetByUnionIdAndTenantIdRequest.setUnionId(localStorage.getItem('uid'));
             console.log(passportIdGetByUnionIdAndTenantIdRequest);
             xn_http_post(passportIdGetByUnionIdAndTenantIdRequest, function(data){
                 console.log(data);
                 var electron = require('electron'); // 控制应用生命周期的模块。
                 var BrowserWindow = electron.remote.BrowserWindow;  // 创建原生浏览器窗口的模块
                 //
                 mainWindow = new BrowserWindow({ useContentSize:true,center:true, webPreferences :{allowDisplayingInsecureContent:true, allowRunningInsecureContent:true, webSecurity:false}});
                 mainWindow.setProgressBar(1.0);
               //  mainWindow.setMenuBarVisibility(false);
                 if(require('electron').remote.getGlobal('isDebug') == true)
                 {
                  //   mainWindow.openDevTools();
                 }

                 var url = ('https://auth-plat.xiniunet.com/sso/autoLogin.do?token=#passportId#&returnUrl=' + encodeURI('https://employee-plat.xiniunet.com/application.htm')).replace('#passportId#',data.passportId);
                 if(require('electron').remote.getGlobal('isDev') != true)
                 {
                     url = ('https://auth.xiniunet.com/sso/autoLogin.do?token=#passportId#&returnUrl=' + encodeURI('https://employee.xiniunet.com/application.htm')).replace('#passportId#',data.passportId);
                 }

                 //注意 生产passportId不行
                    console.log(url);
                 mainWindow.loadURL(url);

             });

         },

        /**
         * 消息中心
         */
        showSysMsgCount:function(){
            var $node = $("#showNotice .count");
            var count = this.cache.getSysMsgCount();
            if(this.$notice.hasClass("hide")){
                if(count>0){
                    //$(".nav-message").removeClass("xn-hidden");
                    $node.removeClass("hide").text(count);
                }else{
                    $node.addClass("hide").text(count);
                    //$(".nav-message").addClass("xn-hidden");
                }
            }else{
                this.cache.setSysMsgCount(0);
            }
        },
        clickNotice:function(){
            //if(freHeight<600) {
            //    window.resizeTo(1015, 660);
            //}
            var that = this;
            this.cache.setSysMsgCount(0);
            this.showSysMsgCount();
            if(this.firstLoadSysMsg){
                this.mysdk.getLocalSysMsgs(function(error, obj){
                    if(!error){
                        if(obj.sysMsgs.length>0){
                            that.cache.setSysMsgs(obj.sysMsgs);
                        }
                        that.firstLoadSysMsg = false;
                        that.showNotice();
                    }else{
                        alert("获取系统消息失败");
                    }
                });
            }else{
                this.showNotice();
            }

        },
        showNotice:function(){
            this.buildSysNotice();
            this.buildCustomSysNotice();
            this.$notice.removeClass('hide');
            this.$mask.removeClass("hide");
            document.documentElement.style.overflow='hidden';
        },
        buildSysNotice: function(){
            var data = this.cache.getSysMsgs(),
                array = [],
                that = this;
            console.log("信息内容&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&");
            console.log(data);
            //确保用户信息存在缓存中
            for(var i=0;i<data.length;i++){
                if(!this.cache.getUserById(data[i].from)){
                    array.push(data[i].from);
                }
            }
            if(array.length>0){
                this.mysdk.getUsers(array,function(err,data){
                    for (var i = data.length - 1; i >= 0; i--) {
                        that.cache.setPersonlist(data[i]);
                    };
                })
            }
            var html = appUI.buildSysMsgs(data,this.cache);

            this.$notice.find('.j-sysMsg').html(html);
        },
        buildCustomSysNotice:function(){
            var data = this.cache.getCustomSysMsgs(),
                array = [],
                that = this;
            //确保用户信息存在缓存中
            for(var i=0;i<data.length;i++){
                if(!this.cache.getUserById(data[i].from)){
                    array.push(data[i].from);
                }
            }
            if(array.length>0){
                this.mysdk.getUsers(array,function(err,data){
                    for (var i = data.length - 1; i >= 0; i--) {
                        that.cache.setPersonlist(data[i]);
                    };
                })
            }
            console.log("自定义通知缓存内容*******************************");
            console.log(data);
            var html = appUI.buildCustomSysMsgs(data,this.cache);
            this.$notice.find('.j-customSysMsg').html(html);
        },
        hideNotice:function() {
            this.$notice.addClass('hide');
            this.$mask.addClass("hide");
            document.documentElement.style.overflow='';
        },
        changeNotice:function(){
            var $node = yunXin.$notice;
            $node.find(".tab li").removeClass("crt");
            $(this).addClass("crt");
            if($(this).attr("data-value")==="sys"){
                $node.find(".j-sysMsg").removeClass("hide");
                $node.find(".j-customSysMsg").addClass("hide");
            }else{
                $node.find(".j-sysMsg").addClass("hide");
                $node.find(".j-customSysMsg").removeClass("hide");
            }
        },
        acceptNotice:function() {
            var $this = $(this),
                $node = $this.parent(),
                teamId = $node.attr("data-id"),
                from = $node.attr("data-from"),
                type = $node.attr("data-type"),
                idServer = $node.attr("data-idServer");
            if(type ==="teamInvite"){
                yunXin.mysdk.acceptTeamInvite(teamId,from,idServer);
            }else{
                yunXin.mysdk.passTeamApply(teamId,from,idServer);
            }

        },
        passFriendApply:function() {
            var $this = $(this),
                $node = $this.parent(),
                account = $node.attr("data-from"),
                idServer = $node.attr("data-idServer");
            var data={
                account:account,
                idServer:idServer
            };
            yunXin.mysdk.passFriendApply(idServer,account);
            yunXin.mysdk.updateLocalSysMsg(idServer);
            yunXin.cache.addFriend(data);
            yunXin.cache.updatePersonlist(data);
            yunXin.buildContacts();

            //nim.getFriends({
            //    done: getFriendsDone
            //});
            //function getFriendsDone(error, friends) {
            //    console.log('获取好友列表' + (!error?'成功':'失败'), error, friends);
            //}
        },

        rejectFriendApply:function() {
            var $this = $(this),
                $node = $this.parent(),
                account = $node.attr("data-from"),
                idServer = $node.attr("data-idServer");
            yunXin.mysdk.rejectFriendApply(idServer,account);
            yunXin.mysdk.updateLocalSysMsg(idServer);

        },
        rejectNotice:function() {
            var $this = $(this),
                $node = $this.parent(),
                teamId = $node.attr("data-id"),
                from = $node.attr("data-from"),
                type = $node.attr("data-type"),
                idServer = $node.attr("data-idServer");
            if(type ==="teamInvite"){
                yunXin.mysdk.rejectTeamInvite(teamId,from,idServer);
            }else{
                yunXin.mysdk.rejectTeamApply(teamId,from,idServer);
            }
        },
        rmAllSysNotice:function(){
            var that = this;
            var type = this.$notice.find(".tab .crt").attr("data-value");
            if(type ==="sys"){
                this.mysdk.deleteAllLocalSysMsgs(function(err,obj){
                    if(err){
                        alert("删除失败");
                    }else{
                        that.cache.setSysMsgs([]);
                        that.buildSysNotice();
                    }
                })
            }else{
                this.cache.deleteCustomSysMsgs();
                this.buildCustomSysNotice();
            }
        },
        /**
         * 显示黑名单列表
         */
        showBlacklist:function() {
            //if(freHeight<600) {
            //    window.resizeTo(1015, 660);//改变大小
            //}
            var data = this.cache.getBlacklist();
            var html = appUI.buildBlacklist(data,this.cache);
            this.$blacklist.find('.list').html(html);
            this.$blacklist.removeClass('hide');
            this.$mask.removeClass("hide");
            document.documentElement.style.overflow='hidden';
        },
        hideBlacklist:function() {
            $("#blacklist").addClass('hide');
            this.$mask.addClass("hide");
            document.documentElement.style.overflow='';
        },
        removeFromBlacklist:function(){
            var id = $(this).attr("data-id");
            yunXin.mysdk.markInBlacklist(id,false, yunXin.cbRemoveFromBlacklist.bind(yunXin))
        },
        cbRemoveFromBlacklist:function(err,data){
            if(!err){
                this.cache.removeFromBlacklist(data.account);
                var html = appUI.buildBlacklist(this.cache.getBlacklist(),this.cache);
                this.$blacklist.find('.list').html(html);
                this.buildContacts();
            }else{
                alert("操作失败");
            }
        },
        /**
         * 查看云记录
         */
        showCloudMsg: function() {
            var that = this;
            if(this.$chatEditor.data("type")==="team"){
                var teamId = this.$teamInfo.data("team-id");
                var teamInfo = that.cache.getTeamById(teamId);
                if(!teamInfo){
                    return;
                }
            }
            this.$cloudMsgContainer.load('/xntalk/cloud-msg.html', function() {
                that.$cloudMsgContainer.removeClass('hide');
                var id = that.$chatEditor.data('to'),
                    scene = that.$chatEditor.data('type'),
                    param ={
                        scene:scene,
                        to:id,
                        lastMsgId:0,
                        limit:20,
                        reverse:false,
                        done:that.cbCloudMsg.bind(that)
                    }
                that.mysdk.getHistoryMsgs(param);
            });
        },
        /**
         * 云记录面板显示
         * @return {[type]} [description]
         */
        closeCloudMsgContainer:function(){
            $('#j-cloudMsgContainer').addClass('hide');
        },

        /**
         * 加载更多云记录
         */
        loadMoreCloudMsg:function(){
            var id = this.$chatEditor.data('to'),
                scene = this.$chatEditor.data('type'),
                lastItem = $("#j-cloudMsgList .item").first(),
                param ={
                    scene:scene,
                    to:id,
                    beginTime:0,
                    endTime:parseInt(lastItem.attr('data-time')),
                    lastMsgId:parseInt(lastItem.attr('data-idServer')),//idServer 服务器用于区分消息用的ID，主要用于获取历史消息
                    limit:20,
                    reverse:false,
                    done:this.cbCloudMsg.bind(this)
                }
            this.mysdk.getHistoryMsgs(param);
        },

        /**
         * 云记录获取回调
         * @param  {boolean} error
         * @param  {object} obj 云记录对象
         */
        cbCloudMsg:function(error,obj){
            var node = $("#j-cloudMsgList"),
                tip = $("#j-cloudMsgContainer .u-status span");
            if (!error) {
                if (obj.msgs.length === 0) {
                    tip.html('没有更早的聊天记录');
                } else {
                    if(obj.msgs.length<20){
                        tip.html('没有更早的聊天记录');
                    }else{
                        tip.html('<a class="j-loadMore">加载更多记录</a>')
                    }
                    var msgHtml = appUI.buildCloudMsgUI(obj.msgs,this.cache);
                    $(msgHtml).prependTo(node);
                }
            } else {
                console && console.error('获取历史消息失败');
                tip.html('获取历史消息失败');
            }
        },
        //滚动监听圆点
        setVernierPosition: function () {
            var $active = $(this).find('.active'),
                type = $active.parents('.friends').data('type'),
                $container = '',
                that = yunXin;
            if (type == 'contacts') {
                $container = that.$loadContacts;
            } else if (type == 'teams') {
                $container = that.$loadTeams;
            } else {
                $container = that.$loadConversations;
            }
            if ($active.length) {
                var top = $active.offset().top - $container.offset().top + 60;
                that.$chatVernier.css('top', top);
            }
        },

        uploadFile: function () {
            var that = this,
                scene = that.$chatEditor.data('type'),
                to = that.$chatEditor.data('to'),
                fileInput = this.$fileInput.get(0);
            if(fileInput.files[0].size==0){
                alert("不能传空文件");
                return;
            }
            this.mysdk.sendFileMessage(scene, to, fileInput,this.sendMsgDone.bind(this));
        },

        chooseFile: function () {
            this.$fileInput.click();
        },

         /**
         * 通讯录列表显示
         * @param  {object} 数据对象
         * @return {void}
         */
        buildContacts: function () {
            var data = {
                friends:this.cache.getFriendslistOnShow(),
                account:userUID
            };
            //console.log("原来的数组"+data.friends);
            //console.log(data.friends);
            data.friends.sort(compare("nick"));
            //console.log("排序的数组"+data.friends);
            //console.log(data.friends);
            if(!this.friend){
                var options = {
                    data:data,
                    onclickavatar:this.showInfo.bind(this),
                    onclickitem:this.openChatBox.bind(this),
                    infoprovider:this.infoProvider.bind(this)

                };
                this.friends = new NIMUIKit.FriendList(options);
                this.friends.inject(this.$contactsFriends.get(0));
            }else{
                this.friends.update(data);
            }
            this.doPoint();
        },

        //获取好友备注名或者昵称
        getNick:function(account){
            // 使用util中的工具方法
            return getNick(account,this.cache);
        },
        /**
         * 列表想内容提供方法（用于ui组件）
         * @param  {Object} data 数据
         * @param  {String} type 类型
         * @return {Object} info 需要呈现的数据
         */
        infoProvider:function(data,type){
            var info = {};
            switch(type){
                case "session":
                    var msg = data.lastMsg,
                        scene = msg.scene;
                    info.scene = msg.scene;
                    info.account = msg.target;
                    info.target = msg.scene+"-"+msg.target;
                    info.time =  transTime2(msg.time);
                    info.crtSession = this.crtSession;
                    info.unread = data.unread>99?"99+":data.unread;
                    info.text = buildSessionMsg(msg);
                    if(scene==="p2p"){
                        //点对点
                        if(msg.target === userUID){
                            info.nick = "我的手机";
                            info.avatar = "images/myPhone.png";
                        }else{
                            var userInfo = this.cache.getUserById(msg.target);
                            info.nick = this.getNick(msg.target);
                            info.avatar = getAvatar(userInfo.avatar);
                        }

                    }else{
                        //群组
                        var teamInfo = this.cache.getTeamById(msg.target);
                        if(teamInfo){
                            if(teamInfo.avatar){
                                info.avatar = teamInfo.avatar;
                            }else{
                                info.avatar = "images/advanced.png";
                            }

                            info.nick = teamInfo.name;

                        }else{
                            info.nick = msg.target;
                            info.avatar = "images/advanced.png";
                        }
                    }
                    break;
                case "friend":
                    info.target = "p2p-"+data.account;
                    info.account = data.account;
                    info.nick = this.getNick(info.account);
                    info.avatar = getAvatar(data.avatar);
                    info.crtSession = this.crtSession;
                    break;
                case "team":
                    info.type = data.type;
                    info.nick = data.name;
                    info.target = "team-"+data.teamId;
                    info.teamId = data.teamId;
                    if (data.avatar != null && data.avatar != undefined) {
                        info.avatar = data.avatar;
                    } else {
                        info.avatar = "images/advanced.png";
                    }
                    info.crtSession = this.crtSession;
                    break;
            }
            return info;
        },
        /**
         * 最近联系人显示
         * @return {void}
         */
        buildConversations: function(id) {
            var data = {
                sessions:this.cache.getSessions()
            }
            if(!this.sessions){
                var options = {
                    data:data,
                    onclickavatar:this.showInfo.bind(this),
                    onclickitem:this.openChatBox.bind(this),
                    infoprovider:this.infoProvider.bind(this)
                }
                this.sessions = new NIMUIKit.SessionList(options);
                this.sessions.inject(this.$conversations.get(0));
            }else{
                this.sessions.update(data);
            }
            //导航上加未读示例
            this.showUnread();
            this.doPoint();
            //已读回执处理
            this.markMsgRead(id);
        },
        /**
         * 我的群组显示
         * @return {void}
         */
        buildTeams: function() {
            var data = {
                teams:this.cache.getTeamlist()
            }
            if(!this.teams){
                var options = {
                    data:data,
                    infoprovider:this.infoProvider.bind(this),
                    onclickavatar:this.clickTeamAvatar.bind(this),
                    onclickitem:this.openChatBox.bind(this)

                }
                this.teams = new NIMUIKit.TeamList(options);
                this.teams.inject($('#j-teams').get(0));
            }else{
                this.teams.update(data);
            }
            this.doPoint();
        },
        /**
         * 点击群组列表头像
         * demo里跟点击列表处理一致了
         */
        clickTeamAvatar:function(account,type) {
            $("#j-teams").find("li.active").removeClass("active");
            this.openChatBox(account, type)
        },
        /**
         * 导航圆点显示
         */
        doPoint:function(){
            var $container;
            if(!this.$loadConversations.is('.hide')){
                $container = this.$loadConversations;
            }else if(!this.$loadContacts.is('.hide')){
                $container = this.$loadContacts;
            }else{
                $container = this.$loadTeams;
            }
            var $li = $container.find(".m-panel li");
            var $active = $li.map(function(){
                $(this).removeClass("active");
                if($(this).attr('data-account')==$('#j-chatEditor').data('to')){
                    $(this).addClass("active");
                    return this;
                }});
            if ($active.length) {
                var top = $active.offset().top - $container.offset().top + 105;
                this.$chatVernier.css('top', top).removeClass("hide");
            }else{
                this.$chatVernier.addClass("hide");
            }
        },
        // 导航上加未读数
        showUnread:function(){
            var counts = $("#j-conversations .panel_count");
            this.totalUnread = 0;
            if(counts.length!==0){
                console.log($("#nav-message"));
                if(this.totalUnread !=="99+"){
                    for (var i = counts.length - 1; i >= 0; i--) {
                        if($(counts[i]).text()==="99+"){
                            this.totalUnread = "99+";
                            break;
                        }
                        this.totalUnread +=parseInt($(counts[i]).text(),10);
                    }
                }
            }
            var $node = $(".m-unread .u-unread");
            var $showNum=$(".nav-message");
            $node.text(this.totalUnread);
            this.totalUnread?$node.removeClass("hide"):$node.addClass("hide");
            this.totalUnread?$showNum.removeClass("xn-hidden"):$showNum.addClass("xn-hidden");
        },
        sendTextMessage: function () {
            var scene = this.$chatEditor.data('type'),
                to = this.$chatEditor.data('to'),
                text = this.$messageText.val().trim();
            if ( !! to && !! text) {
                if (text.length > 500) {
                    alert('消息长度最大为500字符');
                }else if(text.length===0){
                    return;
                } else {
                    this.mysdk.sendTextMessage(scene, to, text, this.sendMsgDone.bind(this));
                }
            }
        },
        /**
         * 发送消息完毕后的回调
         * @param error：消息发送失败时，error != null
         * @param msg：消息主体，类型分为文本、文件、图片、地理位置、语音、视频、自定义消息，通知等
         */
        sendMsgDone: function (error, msg) {
            this.cache.addMsgs(msg);
            this.$messageText.val('');
            this.$chatContent.find('.no-msg').remove();
            var msgHtml = appUI.updateChatContentUI(msg,this.cache);
            this.$chatContent.append(msgHtml).scrollTop(99999);
            $('#j-uploadForm').get(0).reset();
        },

        inputMessage: function (e) {
            var ev = e || window.event,
                $this = $(this);
            if ( ev.shiftKey && ev.keyCode == 50) {
//@功能开发中


                // var scene = yunXin.$chatEditor.data('type'),
                //     to = yunXin.$chatEditor.data('to'),
                //     text = yunXin.$messageText.val().trim();
                // if(scene == 'team')
                // {
                //     var memberList = yunXin.cache.getTeamMembers(to);
                //     var controllerScope = $('div[ng-controller="atGroupMemberController"]').scope();
                //     controllerScope.$apply(function () {
                //         var position =   $('#j-messageText').caret('offset');
                //         controllerScope.searchContact('', memberList);
                //         controllerScope.setPosition(position);
                //
                //     });
                //
                // }

            }

            if ($.trim($this.val()).length > 0)
            {
                if (ev.keyCode === 13 && ev.ctrlKey)
                {
                    $this.val($this.val() + '\r\n');
                }
                else if (ev.keyCode === 13 && !ev.ctrlKey)
                {
                    yunXin.sendTextMessage();
                }

            }
        },

        /**
         * 点击左边面板，打开聊天框
         */
        openChatBox: function (account,scene) {
            //if(freHeight<600) {
            //    window.resizeTo(1015, 660);//改变大小
            //}
            var info;
            this.mysdk.setCurrSession(scene,account);
            this.crtSession = scene+"-"+account;
            //根据帐号跟消息类型获取消息数据
            if(scene=="p2p"){
                info = this.cache.getUserById(account);
            }else{
                info = this.cache.getTeamById(account);
            }
            //隐藏其他窗口
            $('#j-teamInfoContainer').addClass('hide');
            this.$devices.addClass('hide');
            this.$cloudMsgContainer.addClass('hide');
            //退群的特殊UI
            this.$rightPanel.find(".u-chat-notice").addClass("hide");
            this.$rightPanel.find(".chat-mask").addClass("hide");

            //设置聊天面板
            if (scene === 'p2p') {
                if(info.account == userUID){
                    this.$nickName.text("我的手机");
                    this.$chatTitle.find('img').attr('src', "images/myPhone.png");
                }else{
                    this.$nickName.text(this.getNick(account));
                    this.$chatTitle.find('img').attr('src', getAvatar(info.avatar));
                }
            }else{
                if(info){
                    if(info.avatar)
                    {
                        this.$chatTitle.find('img').attr('src', info.avatar);
                    }else{
                        this.$chatTitle.find('img').attr('src', "images/advanced.png");
                    }

                    this.$nickName.text(info.name);

                }else{
                    this.$rightPanel.find(".u-chat-notice").removeClass("hide");
                    this.$rightPanel.find(".chat-mask").removeClass("hide");
                    this.$chatTitle.find('img').attr('src', "images/advanced.png");
                    this.$nickName.text(account);
                }
                this.$chatTitle.find('img').attr('onerror',  'this.src=\'images/advanced.png\'');

            }
            //显示面板
            this.$rightPanel.removeClass('hide');
            this.$messageText.val('');

            //群信息
            if (scene === 'p2p') {
                this.$teamInfo.addClass('hide').data({
                    teamId: '',
                    gtype: ''
                });
            } else {
                this.$teamInfo.removeClass('hide').data({
                    teamId: account,
                    gtype: info?info.type:"normal"
                });
            }
            //会话信息
            this.$chatEditor.data({
                to: account,
                type: scene
            });
            this.doPoint();
            // 根据或取聊天记录
            this.getHistoryMsgs(scene,account);
        },

        /**
         * 获取当前会话消息
         * @return {void}
         */
        getHistoryMsgs: function (scene,account) {
            var id = scene+"-"+account;
            var sessions = this.cache.findSession(id);
            var msgs = this.cache.getMsgs(id);
            //标记已读回执
            this.sendMsgRead(account,scene);
            if(!!sessions){
                if(sessions.unread>=msgs.length){
                    var msgid = (msgs.length>0)?msgs[0].idClient:false;
                    this.mysdk.getLocalMsgs(scene,account,msgid,this.getLocalMsgsDone.bind(this));
                    return;
                }
            }
            var temp = appUI.buildChatContentUI(id,this.cache);
            this.$chatContent.html(temp);
            this.$chatContent.scrollTop(9999);
            //已读回执UI处理
            this.markMsgRead(id);
        },

        getLocalMsgsDone:function(err,data){
            if(!err){
                this.cache.addMsgsByReverse(data.msgs);
                var id = data.scene +"-"+data.to;
                var temp = appUI.buildChatContentUI(id,this.cache);
                this.$chatContent.html(temp);
                this.$chatContent.scrollTop(9999);
                this.markMsgRead(id);
            }else{
                alert("获取历史消息失败");
            }
        },
        //发送已读回执
        sendMsgRead:function(account,scene){
            if(scene==="p2p"){
                var id = scene+"-"+account;
                var sessions = this.cache.findSession(id);
                this.mysdk.sendMsgReceipt(sessions.lastMsg,function(err,data){
                    console.log(err);
                    if(err){
                        console.log(err);
                    }
                });
            }
        },
        //UI上标记消息已读
        markMsgRead:function(id){

            if(!id||this.crtSession!==id){
                return;
            }
            var msgs = this.cache.getMsgs(id);
            for (var i = msgs.length-1;i>=0; i--) {
                var message = msgs[i];
                // 目前不支持群已读回执
                if(message.scene==="team"){
                    return;
                }
                if(nim.isMsgRemoteRead(message)){
                    //$(".item.item-me.read").removeClass("read");
                    $("#"+message.idClient).addClass("read");
                   // break;
                }
            }
        },
        /**
         * 处理收到的消息
         * @param  {Object} msg
         * @return
         */
        doMsg:function(msg){
            var that = this,
                who = msg.to === userUID ? msg.from : msg.to,
                updateContentUI = function(){
                    //如果当前消息对象的会话面板打开
                    if ($('#j-chatEditor').data('to') === who) {
                        that.sendMsgRead(who,msg.scene);
                        var msgHtml = appUI.updateChatContentUI(msg,that.cache);
                        that.$chatContent.find('.no-msg').remove();
                        that.$chatContent.append(msgHtml).scrollTop(99999);
                    }
                };
            //非群通知消息处理
            if (/text|image|file|audio|video|geo|custom|tip/i.test(msg.type)) {
                this.cache.addMsgs(msg);
                var account = (msg.scene==="p2p"?who:msg.from);
                //用户信息本地没有缓存，需存储
                if(!this.cache.getUserById(account)){
                    this.mysdk.getUser(account,function(err,data){
                        if(!err){
                            that.cache.updatePersonlist(data);
                            updateContentUI();
                        }
                    })
                }else{
                    this.buildConversations();
                    updateContentUI();
                }
            }else{
                // 群消息处理
                notification.messageHandler(msg,updateContentUI);
            }
        },

        /**
         * 切换左边面板上方tab
         */
        switchPanel: function () {
            var $this = $(this),
                $thisIcon = $this.find('.icon'),
                type = $this.data('type'),
                panels = $('.friends');
            yunXin.$chatVernier.addClass('hide');
            $thisIcon.addClass('cur');
            $this.siblings().find('.icon').removeClass('cur');
            $('.friends[data-type="' + type + '"]').removeClass('hide').siblings('.friends').addClass('hide');
            if (type === 'conversations') {
                yunXin.buildConversations();
            } else if (type === 'contacts') {
                yunXin.buildContacts();
            } else {
                yunXin.buildTeams();
            }
        },

        logout: function () {

            localStorage.clear();
            // window.location.href = '/index.html';

            const dialog = require('electron').remote.dialog;
            var dialogOption = {
                type:'question',
                title:'退出',
                buttons:['确定', '取消'],
                defaultId:0,
                message:'确定要退出XNTALK吗？',
                detail:'',
                cancelId:1
            };

            dialog.showMessageBox(dialogOption,function(e){

                // e 是选择的目录
                if(e == 0)
                {
                    require('electron').remote.app.quit();
                }
                console.log(e);
            });
        },
         miniApp: function () {
            require('electron').remote.BrowserWindow.getFocusedWindow().minimize();
        },

        maxApp: function () {
            // require('electron').remote.BrowserWindow.getFocusedWindow().maximize();
            // require('electron').remote.BrowserWindow.getFocusedWindow().unmaximize();
            if (require('electron').remote.getCurrentWindow().isMaximized()) {
                require('electron').remote.getCurrentWindow().restore();
            } else {
                require('electron').remote.getCurrentWindow().maximize();
            }
        },

        showDialog: function () {
            this.$logoutDialog.removeClass('hide');
            this.$mask.removeClass('hide');
        },

        hideDialog: function () {
            this.$logoutDialog.addClass('hide');
            this.$mask.addClass('hide');
        },
        showEmoji:function(){
            this.$emNode._$show();
        },
        // 语音播放
        playAudio:function(){
            if(!!window.Audio){
                var node = $(this),
                    btn = $(this).children(".j-play");
                node.addClass("play");
                setTimeout(function(){node.removeClass("play");},parseInt(btn.attr("data-dur")))
                new window.Audio(btn.attr("data-src")+"?audioTrans&type=mp3").play();
            }
        },
        /**
         * 选择表情回调
         * @param  {objcet} result 点击表情/贴图返回的数据
         */
        cbShowEmoji:function(result){
            if(!!result){
                var scene = this.$chatEditor.data('type'),
                    to = this.$chatEditor.data('to');
                // 贴图，发送自定义消息体
                if(result.type ==="pinup"){
                    var index =Number(result.emoji)+1;
                    content = {
                        type: 3,
                        data: {
                            catalog: result.category,
                            chartlet:result.category+'0'+ (index>=10?index:'0'+index)
                        }
                    };
                    this.mysdk.sendCustomMessage(scene, to, content,this.sendMsgDone.bind(this));
                }else{
                    // 表情，内容直接加到输入框
                    this.$messageText[0].value=this.$messageText[0].value+result.emoji;
                }
            }
        },
        /**
         * 多端同步好友信息处理
         * @param  {Object} data
         * @return {Void}
         */
        doSyncFriendAction : function(data){
            var that =  this,
                type = data.type;
            switch (type) {
                case 'deleteFriend':
                    this.cache.removeFriend(data.account);
                    this.buildContacts();
                    break;
                case 'addFriend':
                    this.cache.addFriend(data.friend);
                    if(!this.cache.getUserById(data.account)){
                        this.mysdk.getUser(account,function(err,data){
                            if(!err){
                                that.cache.updatePersonlist(data);
                                that.buildContacts();
                            }
                        })
                    }else{
                        this.buildContacts();
                    }
                    break;
                case 'applyFriend':
                    this.cache.applyFriend(data.friend);
                    if(!this.cache.getUserById(data.account)){
                        this.mysdk.getUser(account,function(err,data){
                            if(!err){
                                that.cache.updatePersonlist(data);
                                that.buildContacts();
                            }
                        })
                    }else{
                        this.buildContacts();
                    }
                    break;
                default:
                    console.log(data);
                    break;
            }
        },
        cloudDisk:function(){
             $("#con-left").addClass("xn-hidden");
             $("#j-rightPanel").addClass("xn-hidden");
             $("#j-devices").addClass("xn-hidden");
             $("#j-file").removeClass("xn-hidden");
            $("#j-tenantHome").addClass("xn-hidden");
            var controllerScope = $('div[ng-controller="PanIndexController"]').scope();
            controllerScope.doMenu(0);

        },
         tenantHome:function () {
             $("#con-left").addClass("xn-hidden");
             $("#j-rightPanel").addClass("xn-hidden");
             $("#j-devices").addClass("xn-hidden");
             $("#j-file").addClass("xn-hidden");
             $("#j-tenantHome").removeClass("xn-hidden");


             {

         


                 var passportIdGetByUnionIdAndTenantIdRequest = new PassportIdGetByUnionIdAndTenantIdRequest();
                 passportIdGetByUnionIdAndTenantIdRequest.setTenantId($('#unionName').attr('data-id'));
                 passportIdGetByUnionIdAndTenantIdRequest.setUnionId(localStorage.getItem('uid'));
                 console.log(passportIdGetByUnionIdAndTenantIdRequest);
                 xn_http_post(passportIdGetByUnionIdAndTenantIdRequest, function(data){
                     var url = ('https://auth-plat.xiniunet.com/sso/autoLogin.do?token=#passportId#&returnUrl=' + encodeURI('http://site-plat.xiniunet.com/route.do?method=goto.employee.portal')).replace('#passportId#',data.passportId);
                     if(require('electron').remote.getGlobal('isDev') != true)
                     {
                         url = ('https://auth.xiniunet.com/sso/autoLogin.do?token=#passportId#&returnUrl=' + encodeURI('https://site.xiniunet.com/route.do?method=goto.employee.portal')).replace('#passportId#',data.passportId);
                     }
                     $('#j-tenantHome2').attr('src', url);

                     var oFrm = document.getElementById('j-tenantHome2');
                     oFrm.onload = oFrm.onreadystatechange = function() {
                         if (this.readyState && this.readyState != 'complete') return;
                         else {

                             var shell = require('electron').shell;
                             // //open links externally by default
                             $($('#j-tenantHome2').prop('contentWindow').document).on('click', 'a', function(event) {

                                 var openUrl = this.href;
                                 if(this.href.indexOf("xiniunet.com/employee/detail") >= 0)
                                 {
                                     var url = ('https://auth-plat.xiniunet.com/sso/autoLogin.do?token=#passportId#&returnUrl=' + encodeURI(this.href)).replace('#passportId#',data.passportId);
                                     if(require('electron').remote.getGlobal('isDev') != true)
                                     {
                                         url = ('https://auth.xiniunet.com/sso/autoLogin.do?token=#passportId#&returnUrl=' + encodeURI(this.href) ).replace('#passportId#',data.passportId);
                                     }

                                     event.preventDefault();
                                     shell.openExternal(url);

                                 }

                             });
                         }
                     }


                 });



             }

         }

    };
    yunXin.init();


    //非当前区域点击隐藏
    var count=0;
    var getPar = function(tar) {
        if(tar.className=="search-name-div"){
            count++;
        }
        // if(tar.id=="personQrcode" ||　tar.id == "personQrcode2"){
        //     count++;
        // }
        if(tar.parentNode){
            getPar(tar.parentNode);
        }
    };

    // $("body").on("click", function(e) {
    //     count=0;
    //     getPar(e.target);
    //     if(count == 0) {
    //         $(".name-list-div").addClass('hide');
    //         $("#searchName-input").val("");
    //
    //     }
    // });


$(document).on('click', 'a', function(event) {
    if(this.href.indexOf("http://") >= 0 || this.href.indexOf("https://") >= 0)
    {
        var shell = require('electron').shell;
        event.preventDefault();
        var url = this.href;
        if(this.href.indexOf("xiniunet.com/mobileContent/articleDetail?id=") >= 0)
        {
            var articleId = this.href.substr(this.href.indexOf('articleDetail?id=') +('articleDetail?id=').length );
            var passportIdGetByUnionIdAndTenantIdRequest = new PassportIdGetByUnionIdAndTenantIdRequest();
            passportIdGetByUnionIdAndTenantIdRequest.setTenantId(this.getAttribute('data-tenantId'));
            passportIdGetByUnionIdAndTenantIdRequest.setUnionId(localStorage.getItem('uid'));
            xn_http_post(passportIdGetByUnionIdAndTenantIdRequest, function(data){
                console.log(data);
                var articleUrl = ('https://site-plat.xiniunet.com/content/index/article.htm?id=#articleId#').replace('#articleId#', articleId);
                var url = ('https://auth-plat.xiniunet.com/sso/autoLogin.do?token=#passportId#&returnUrl=' + encodeURI(articleUrl)).replace('#passportId#',data.passportId);
                if(require('electron').remote.getGlobal('isDev') != true)
                {
                    articleUrl = ('https://site.xiniunet.com/content/index/article.htm?id=#articleId#').replace('#articleId#', articleId);
                    url = ('https://auth.xiniunet.com/sso/autoLogin.do?token=#passportId#&returnUrl=' + encodeURI(articleUrl)).replace('#passportId#',data.passportId);
                }
                shell.openExternal(url);
            });

        }
        else
        {
            shell.openExternal(url);
        }


    }

});

        //非当前区域点击隐藏承租人选项
        var count1=0;
        var getPar1 = function(tar) {
            if(tar.className=="logo-div"){
                count1++;
            }
            if(tar.parentNode){
                getPar1(tar.parentNode);
            }
        };

        $("body").on("click", function(e) {
            count1=0;
            getPar1(e.target);
            if(count1 == 0) {
                $(".more-content").addClass('xn-hidden');
            }
        });



    var cutwords=function(input,num) {
        var cutNum = num || 2;
        if(input.length>cutNum) {
            return input.substr(input.length-cutNum,cutNum);
        } else {
            return input;
        }
    };

window.onload = function(){
    window.onresize();
}

window.onresize=function(){
        var winHeight=0;
       // 获取窗口高度
        if (window.innerHeight){
            winHeight = window.innerHeight-60;
        } else if ((document.body) && (document.body.clientHeight)){
            winHeight = document.body.clientHeight-60;
        }

        freHeight=winHeight*480/600;
        $("#content").css("height",winHeight+"px");
        $(".friends").css("height",freHeight+"px");
    };

     //logo切换承租人
    $(".xn-talk-logo").on("click",function(){
        if(unionList.length>1){
            var id=$("#unionName").attr("data-id");
            $(".more-content").removeClass("xn-hidden");
            $(".union-ul li").each(function(){
                if($(this).find(".logo-name").attr("data-id")==id){
                    $(this).addClass("li-on").siblings().removeClass("li-on");
                }
            })

        }else{
            $(".more-content").addClass("xn-hidden");
        }

    });

        //tab
        $(".xn-app-nav .app-nav").on("click",function(){


            $('#j-teamInfoContainer').addClass('hide');
            $(this).addClass("app-nav-active").siblings().removeClass("app-nav-active");
            var index=$(this).attr("data-index");
            if(index==6){
                window.location.href =remote.getGlobal('dirname')+"/xnLayout/page/main.html";
            }
            if(index==5){
                yunXin.cloudDisk();
            }
            else if(index == 2)
            {
                yunXin.tenantHome();
            }else if(index==1){
                $("#con-left").removeClass("xn-hidden");
                $("#j-rightPanel").removeClass("xn-hidden");
                $("#j-devices").removeClass("xn-hidden");
                $("#j-file").addClass("xn-hidden");
                $("#no-message-con").addClass("xn-hidden");
                $("#j-tenantHome").addClass("xn-hidden");
            }else{
                $("#con-left").addClass("xn-hidden");
                $("#j-rightPanel").addClass("xn-hidden");
                $("#j-devices").addClass("xn-hidden");
                $("#j-file").addClass("xn-hidden");
                $("#no-message-con").removeClass("xn-hidden");
                $("#j-tenantHome").addClass("xn-hidden");
                //var ifm= $("#iframepage");
                //ifm.src="www.baidu.com";
            }
        });
//拼音首字母比较
function compare(propertyName) {
    return function (object1, object2) {
        var value1 = object1[propertyName];
        var value2 = object2[propertyName];
        var val1 = Pinyin.getFullChars(value1).toLowerCase();
        var val2 = Pinyin.getFullChars(value2).toLowerCase();
        val1=Pinyin.getCamelChars(val1).toLowerCase();
        val2=Pinyin.getCamelChars(val2).toLowerCase();
        if (val1 < val2) {
            return -1;
        }
        else if (val1 > val2) {
            return 1;
        }
        else {
            return 0;
        }

    }
}


var initApp = function(){
    var remote=require('electron').remote;
    var electron = require('electron'); // 控制应用生命周期的模块。
    "use strict";

    var ref = [
        // "createTenantGroupModule",
        "xn.directive.common",
        "xn.filter.common",
        "xn.service.common",
        "xn.directive.navigation",
        "xn.my.filter",
        "xn.my.pan",
        "xn.my.list",
        "ui.bootstrap",
        "xn.directive.form",
        "xn.personCard",
        "xn.cloudFileSelect",
        "xn.directive.location",
        "xn.addFriend",
        "xn.groupMemberAdd",
        "xn.directive.select",
        "xn.sendFile",
        "xn.createTenantGroup",
        "xn.contactSelect",
        "xn.atGroupMember"

    ];


    // var module = angular.module("xn", ref);
    var myApp = angular.module('xn', ref);

    myApp.controller("BodyController",["$scope",function($scope){
        $("#j-messageText").on('paste', contentHandler);
        function contentHandler(e){
            var clipboard = require('electron').clipboard;
            var fs = require("fs");
            if(clipboard.readImage() && !clipboard.readImage().isEmpty())
            {
                var controllerScope = $('div[ng-controller="sendFileController"]').scope();
                controllerScope.nativeImage = clipboard.readImage();
                var buffer =  controllerScope.nativeImage.toJPEG(80);


                controllerScope.$apply(function () {
                    controllerScope.dataBase64 = controllerScope.nativeImage.toDataURL();
                    controllerScope.eleSendFileIsShow = true;
                    controllerScope.setFile("粘贴图片.jpg", buffer.length);
                });


                // var that = yunXin,
                //     scene = that.$chatEditor.data('type'),
                //     to = that.$chatEditor.data('to');
                // var blob = new Blob(buffer, {type:"application/octet-stream"});
                // {
                //     yunXin.mysdk.nim.sendFile({
                //         scene: scene,
                //         to: to,
                //         type: 'image',
                //         dataURL:clipboard.readImage().toDataURL(),
                //         uploadprogress: function (data) {
                //             console && console.log(data.percentageText);
                //         },
                //         uploaderror: function () {
                //             console && console.log('上传失败');
                //         },
                //         uploaddone: function (file) {
                //             console && console.log('上传完成，服务器处理中...');
                //         },
                //         beforesend: function (msgId) {
                //             console && console.log('正在发送消息, id=' + msgId);
                //         },
                //         done: yunXin.sendMsgDone.bind(yunXin)
                //     });
                // }

            }
            // var textArea = $(this);
            // setTimeout(function(){
            //     console.log(textArea.val());
            // }, 200);
        };

       $scope.global={
           platform:require('electron').remote.getGlobal('platform') //系统环境
       }
        $scope.screenShot= function () {
            var electron = require("electron");
            var Application = electron.remote.app;
            var AppPath = Application.getAppPath() + '/';
            var screenshot = require('electron').remote.require('desktop-screenshot');
            console.log(__dirname);
            screenshot(AppPath + "/screenshot.png", function(error, complete) {
                if(error)
                    console.log("Screenshot failed", error);
                else
                {
                    var electron = require('electron'); // 控制应用生命周期的模块。
                    var BrowserWindow = electron.remote.BrowserWindow;  // 创建原生浏览器窗口的模块
                    var size = require('electron').screen.getPrimaryDisplay().size;
                    var mainWindow = new BrowserWindow({fullscreen:true, alwaysOnTop:false, //transparent:true,thickFrame:false,  frame: false,  x:0, y:0, width:size.width, height:size.height,
                        webPreferences:
                        {webSecurity: false,allowDisplayingInsecureContent:true, allowRunningInsecureContent:true}});

                    mainWindow.setMenuBarVisibility(false);

                    if(require('electron').remote.getGlobal('isDebug') == true)
                    {
                        mainWindow.openDevTools();
                    }
                    mainWindow.class = 'screenShot';
                    console.log(__dirname);
                    mainWindow.loadURL(("http://127.0.0.1:#port#/xntalk/screenShot.html").replace("#port#", require('electron').remote.getGlobal('port')));
                    mainWindow.on('closed', function () {

                        var clipboard = require('electron').clipboard;
                        var fs = require("fs");
                        if(clipboard.readImage() && !clipboard.readImage().isEmpty())
                        {
                            //   var buffer = clipboard.readImage().toJPEG(80);

                            var controllerScope = $('div[ng-controller="sendFileController"]').scope();
                            controllerScope.nativeImage = clipboard.readImage();
                            var buffer =  controllerScope.nativeImage.toJPEG(80);
                            controllerScope.setFile("粘贴图片.jpg", buffer.length);

                            controllerScope.$apply(function () {

                                controllerScope.dataBase64 = controllerScope.nativeImage.toDataURL();
                                controllerScope.eleSendFileIsShow = true;
                            })
                            //
                            //
                            // var that = yunXin,
                            //     scene = that.$chatEditor.data('type'),
                            //     to = that.$chatEditor.data('to');
                            // var blob = new Blob(buffer, {type:"application/octet-stream"});
                            // {
                            //     yunXin.mysdk.nim.sendFile({
                            //         scene: scene,
                            //         to: to,
                            //         type: 'image',
                            //         dataURL:clipboard.readImage().toDataURL(),
                            //         uploadprogress: function (data) {
                            //             console && console.log(data.percentageText);
                            //         },
                            //         uploaderror: function () {
                            //             console && console.log('上传失败');
                            //         },
                            //         uploaddone: function (file) {
                            //             console && console.log('上传完成，服务器处理中...');
                            //         },
                            //         beforesend: function (msgId) {
                            //             console && console.log('正在发送消息, id=' + msgId);
                            //         },
                            //         done: yunXin.sendMsgDone.bind(yunXin)
                            //     });
                            // }

                        }
                    } );

                }
            });

        };

        $scope.tabNav=function (name,router) {

            window.location.href=remote.getGlobal('dirname')+"/"+name+"/page/main.html#/"+router;
        }

    }]);
    myApp.directive('createTenantGroup',function () {
        return {
            restrict:'EAC',
            templateUrl:'createTenantGroup.html',
            replace:true

        };
    });

    myApp.directive('contactSelect',function () {
        return {
            restrict:'EAC',
            templateUrl:'contactSelect.html',
            replace:true,
            scope:true

        };
    });


    myApp.directive('atGroupMember',function () {
        return {
            restrict:'EAC',
            templateUrl:'atGroupMember.html',
            replace:true

        };
    });
};









(function () {
    var remote=require('electron').remote;
    var electron = require('electron'); // 控制应用生命周期的模块。
    //定义module,并指明依赖模块。
    var panIndexController = function($scope, $http,$q, $modal,$filter,dialogService) {
        $scope.isShow = true;

        $scope.page= {
            disk : {},
            folderList : [],
            fileList : [],
            createFolder : false,
            totalCount : 0,
            newFolderName : {},
            localPath:{}
        };
        $scope.page.path = [];
        $scope.vm = {
            pageNumber : 1,
            pageSize : 0,
            type:"ALL",
            sortColumn:"FILE_NAME"
        };
        $scope.tab=0;
        $scope.flag=false;
        $scope.attachmentView="";
        $scope.sortColumns=[
            {img:"xn-icon icon-descendingorder",key:"FILE_NAME",value:"文件名"},
            {img:"xn-icon icon-descendingorder",key:"SIZE",value:"大小"},
            {img:"xn-icon icon-descendingorder",key:"CREATION_TIME",value:"最近上传"},
            {img:"xn-icon icon-descendingorder",key:"LAST_UPDATE_TIME",value:"修改日期"}
        ];

        //打开预览
        $scope.attachmentViewOpen=function(file){
            if($filter('diskFileType')(file.file.extension)=="img"){
                $scope.attachmentView=file.path;
                $scope.attachmentState=true;
            }
        };

        //关闭预览
        $scope.attachmentViewClose=function(){
            $scope.attachmentView="";
            $scope.attachmentState=false;
        };

        //logo切换承租人
        $(".union-ul").on("click","li",function(){
            event.stopPropagation();
            var nameLi=$(this).find(".logo-name").html();
            if(nameLi.length>6){
                nameLi=nameLi.substr(0,5)+"...";
            }
            $("#unionName").html(nameLi);
            var thisId=$(this).find(".logo-name").attr("data-id");
            $("#unionName").attr("data-id",thisId);
            $(".more-content").addClass("xn-hidden");
            $scope.$apply(function(){
                tenantId=thisId;
            });
            var diskByObjectIdRequest = new DiskByObjectIdRequest();
            diskByObjectIdRequest.setUnionId(userUID);
            diskByObjectIdRequest.setTenantId(tenantId);
            xn_http_post(diskByObjectIdRequest, function(data) {
                if (data.errors == null || data.errors.length > 0) {
                    dialogService.tip(data.errors)
                }
                else {
                    $scope.$apply(function(){
                        disk = data.disk;
                        diskId = disk.id;
                    });
                    var diskGetRequest = new DiskGetRequest();
                    diskGetRequest.setId(diskId);
                    diskGetRequest.setTenantId(tenantId);
                    xn_http_post(diskGetRequest, function(data){
                        if (data.errors == null || data.errors.length > 0){
                           dialogService.tip(data.errors)
                        }else{
                            $scope.$apply(function() {
                                $scope.page.disk = data.disk;
                                $scope.flag = false;
                                $scope.search($scope.page.disk.rootFolderId, $scope.page.disk.name);
                                $scope.vm.plan = "width:" + $scope.page.disk.usedSize / $scope.page.disk.maxSize * 100 + "%";
                                $scope.backHome();
                            })
                        }
                    });
                }
            })

        });

        //目录
        $scope.panMenu=[
            {img:"xn-icon icon-allfile",key:"ALL",value:"我的文件",bb:true,state:true},
            {img:"xn-icon icon-allfile",key:"AUDIO_VIDEO",value:"企业公共",bb:false},
            {img:"xn-icon icon-allfile",key:"DOCUMENT",value:"企业个人",bb:false }
        ];

        //doMenu
        $scope.doMenu=function(index){
            $scope.tab=1;
            angular.forEach($scope.panMenu,function(menu){
                menu.state=false;
            });
            $scope.panMenu[index].state=true;
            {
                tenantId = $('#unionName').attr('data-id');
                $scope.flag=false;
                if(index == 0){
                    $scope.isShow=true;
                    var diskByObjectIdRequest = new DiskByObjectIdRequest();
                    tenantId = 0;
                   // diskByObjectIdRequest.setTenantId(0);
                    diskByObjectIdRequest.setUnionId(userUID);
                    xn_http_post(diskByObjectIdRequest, function(data){
                        if (data.errors == null || data.errors.length > 0){
                           dialogService.tip(data.errors)
                        }else{
                            console.log("网盘id");
                            disk=data.disk;
                            diskId=disk.id;

                            $scope.page.disk = disk;
                            $scope.search($scope.page.disk.rootFolderId, $scope.page.disk.name);
                            $scope.vm.plan="width:"+"0%";
                            $scope.vm.plan="width:"+ $scope.page.disk.usedSize/ $scope.page.disk.maxSize*100 +"%";
                            $scope.backHome();
/*
                            console.log(diskId);
                            var diskGetRequest = new DiskGetRequest();
                            diskGetRequest.setId(diskId);
                            diskGetRequest.setTenantId(tenantId);
                            xn_http_post(diskGetRequest, function(data){
                                if (data.errors == null || data.errors.length > 0){
                                   dialogService.tip(data.errors)
                                }else{
                                    $scope.page.disk = data.disk;
                                    $scope.search($scope.page.disk.rootFolderId, $scope.page.disk.name);
                                    $scope.vm.plan="width:"+"0%";
                                    $scope.vm.plan="width:"+ $scope.page.disk.usedSize/ $scope.page.disk.maxSize*100 +"%";
                                    $scope.backHome();
                                }
                            });
                            */
                        }
                    });
                } else if(index == 1){
                    $scope.isShow=true;
                    var diskByObjectIdRequest = new DiskByObjectIdRequest();
                    diskByObjectIdRequest.setTenantId(tenantId);
                    xn_http_post(diskByObjectIdRequest, function(data){
                        if (data.errors == null || data.errors.length > 0){
                           dialogService.tip(data.errors)
                        }else{
                            console.log("网盘id");
                            disk=data.disk;
                            diskId=disk.id;
                            console.log(diskId);
                            var diskGetRequest = new DiskGetRequest();
                            diskGetRequest.setId(diskId);
                            diskGetRequest.setTenantId(tenantId);
                            xn_http_post(diskGetRequest, function(data){
                                if (data.errors == null || data.errors.length > 0){
                                   dialogService.tip(data.errors)
                                }else{
                                    $scope.page.disk = data.disk;
                                    $scope.search($scope.page.disk.rootFolderId, $scope.page.disk.name);
                                    $scope.vm.plan="width:"+"0%";
                                    $scope.vm.plan="width:"+ $scope.page.disk.usedSize/ $scope.page.disk.maxSize*100 +"%";
                                    $scope.backHome();
                                }
                            });
                        }
                    });

                }else if(index == 2){
                    $scope.isShow=true;
                    var diskByObjectIdRequest = new DiskByObjectIdRequest();
                    diskByObjectIdRequest.setTenantId(tenantId);
                    diskByObjectIdRequest.setUnionId(userUID);
                    xn_http_post(diskByObjectIdRequest, function(data){
                        if (data.errors == null || data.errors.length > 0){
                           dialogService.tip(data.errors)
                        }else{
                            console.log("网盘id");
                            disk=data.disk;
                            diskId=disk.id;
                            console.log(diskId);
                            var diskGetRequest = new DiskGetRequest();
                            diskGetRequest.setId(diskId);
                            diskGetRequest.setTenantId(tenantId);
                            xn_http_post(diskGetRequest, function(data){
                                if (data.errors == null || data.errors.length > 0){
                                   dialogService.tip(data.errors)
                                }else{
                                    $scope.page.disk = data.disk;
                                    $scope.search($scope.page.disk.rootFolderId, $scope.page.disk.name);
                                    $scope.vm.plan="width:"+"0%";
                                    $scope.vm.plan="width:"+ $scope.page.disk.usedSize/ $scope.page.disk.maxSize*100 +"%";
                                    $scope.backHome();
                                }
                            });
                        }
                    });
                }

            }

        };

        // 初始化页面时，查询用户的磁盘信息
        $scope.allFileShow=function(){
            var deferred = $q.defer();
            var promise = deferred.promise;
            yunXin.initUnion(deferred);
            promise.then(function(tenantId){
                console.log("tenantId****************************");
                console.log(tenantId);
                console.log(userUID);
                var diskByObjectIdRequest = new DiskByObjectIdRequest();
                //diskByObjectIdRequest.setUnionId(userUID);
                diskByObjectIdRequest.setTenantId(tenantId);
                xn_http_post(diskByObjectIdRequest, function(data){
                    if (data.errors == null || data.errors.length > 0){
                       dialogService.tip(data.errors)
                    }else{
                        console.log("网盘id");
                        disk=data.disk;
                        diskId=disk.id;
                        console.log(diskId);
                        var diskGetRequest = new DiskGetRequest();
                        diskGetRequest.setId(diskId);
                        diskGetRequest.setTenantId(tenantId);
                        xn_http_post(diskGetRequest, function(data){
                            if (data.errors == null || data.errors.length > 0){
                               dialogService.tip(data.errors)
                            }else{
                                $scope.page.disk = data.disk;
                                if(data.disk.trashFolderId){
                                    $scope.folderDelete={
                                        name:"回收站",
                                        creationTime:data.disk.creationTime,
                                        lastUpdateTime:data.disk.lastUpdateTime,
                                        id:data.disk.trashFolderId
                                    }
                                }
                                $scope.flag=false;
                                $scope.search($scope.page.disk.rootFolderId, $scope.page.disk.name);
                                $scope.vm.plan="width:"+ $scope.page.disk.usedSize/ $scope.page.disk.maxSize*100 +"%";
                                $scope.backHome();
                            }
                        });
                    }
                });


            });
        };
        $scope.allFileShow();
        // 返回根目录
        $scope.backHome = function() {
            $scope.page.folderList=[];
            $scope.page.folderDelete=[];
            $scope.page.fileList=[];
            $scope.page.totalCount = 2;
            $scope.page.path=[];
        };

        $scope.sortName='文件名';
        $scope.sortColumn=function(keyword){
            if(keyword=='FILE_NAME'){
                $scope.vm.sortColumn=keyword;
                $scope.sortName='文件名';
            }
            if(keyword=='SIZE'){
                $scope.vm.sortColumn=keyword;
                $scope.sortName='大小';
            }
            if(keyword=='CREATION_TIME'){
                $scope.vm.sortColumn=keyword;
                $scope.sortName='最近上传';
            }
            if(keyword=='LAST_UPDATE_TIME'){
                $scope.vm.sortColumn=keyword;
                $scope.sortName='修改日期';
            }
            $scope.flag=true;
            $scope.search($scope.page.disk.rootFolderId,$scope.page.disk.name, $scope.flag);
        };

        // 查询目录下的文件夹和文件
        $scope.search = function(folderId,folderName) {
            console.log("folderId folderName");
            console.log(folderId,folderName);
            $scope.vm.parentId = folderId;
            $scope.vm.parentName = folderName;
            var folderFileFindRequest = new FolderFileFindRequest();
            folderFileFindRequest.setTenantId(tenantId);
            folderFileFindRequest.setParentId(folderId);
            folderFileFindRequest.setSortColumn($scope.vm.sortColumn);

            xn_http_post(folderFileFindRequest, function(data){
                if (data.errors == null || data.errors.length > 0){
                   dialogService.tip(data.errors)
                }else{
                    console.log("文件夹******************************");
                    console.log(data);
                    $scope.page.fileList=[];
                    $scope.page.folderList = [];
                    $scope.page.folderDelete=[];
                    if(data.folderFileList != null) {
                        $scope.$apply(function(){$scope.page.fileList = data.folderFileList});
                            console.log("页面显示folderfileList*******************");
                            console.log($scope.page.fileList);
                            for (var i = 0, len = data.folderFileList.length; i < len; i++) {
                                if ($filter('diskFileType')($scope.page.fileList[i].file.extension) == "img") {
                                    $scope.page.fileList[i].newlineImgUrl = {"background-image": "url(\"" + $scope.page.fileList[i].path + "@40w_34h_0e\")"};
                                    $scope.page.fileList[i].newImgUrl = {"background-image": "url(\"" + $scope.page.fileList[i].path + "@85w_68h_0e\")"};
                                } else {
                                    $scope.page.fileList[i].newlineImgUrl = "";
                                    $scope.page.fileList[i].newimgUrl = "";
                                }
                                $scope.$apply(function(){
                                    $scope.page.fileList[i].state = false;
                                });
                            }
                    }

                    if(data.folderList != null) {
                        console.log("所有文件******************************");
                        $scope.$apply(function(){$scope.page.folderList = data.folderList});
                            for (var j = 0; j < $scope.page.folderList.length; j++) {
                                $scope.$apply(function() {
                                    $scope.page.folderList[j].state = false;
                                    $scope.page.folderList[j].lastClick = 0;
                                })
                            }

                    }
                    $scope.$apply(function(){$scope.page.totalCount = data.totalCount});
                    if(!$scope.flag){
                        if(folderName != null) {
                            console.log("添加：" + folderId + ":" + folderName);
                            $scope.page.path.push({
                                "id": folderId,
                                "name": folderName
                            });
                        }
                    }
                    $scope.$apply(function(){
                        $scope.page.localPath = folderId;
                        $scope.page.createFolder = false;
                    })

                }
            });
        };

        $scope.getList = function() {
            $scope.search($scope.page.localPath);
        };

        // 文件夹的单击和双击事件
        $scope.folderSingleClick = function(folder) {
            console.log("folder****************************");
            console.log(folder);
            var time = new Date().getTime();
            if(time - folder.lastClick < 500) {
                $scope.search(folder.id,folder.name)
            } else {
                folder.lastClick = time;
                folder.state = !folder.state;
            }
        };

        // 文件的单击和双击事件
        $scope.fileSingleClick = function(folder) {
            var time = new Date().getTime();
            if(time - folder.lastClick < 500) {
                /*$scope.search(folder.id,folder.name)*/

            } else {
                folder.lastClick = time;
                folder.state = !folder.state;
            }
        };
        $scope.keydown = function($event) {
            console.log("in keydown");
            console.log($event.keyCode);
        };

        $scope.keyup = function($event) {
            console.log("in keyup");
            console.log($event.keyCode);
        };

        //全选
        $scope.allSelect=function(){
            for(var i=0;i<$scope.page.folderList.length;i++){
                $scope.page.folderList[i].state=!$scope.page.folderList[i].state;
            }
            for(var j=0;j<$scope.page.fileList.length;j++){
                $scope.page.fileList[j].state=!$scope.page.fileList[j].state;
            }
        };
        //批量下载文件
        $scope.checkLenght=0;
        $scope.batchDownload=function(){
            for(var i=0; i<$scope.page.fileList.length;i++){
                if($scope.page.fileList[i].state) {
                    $scope.checkLenght++;
                }
            }
            if($scope.checkLenght){
                $scope.checkLenght=0;
                for(var i=0; i<$scope.page.fileList.length;i++){
                    if($scope.page.fileList[i].state) {
                        var electron = require('electron'); // 控制应用生命周期的模块。
                        var BrowserWindow = electron.remote.BrowserWindow;  // 创建原生浏览器窗口的模块
                        mainWindow = new BrowserWindow({frame: false, resizable: false,center:true, useContentSize:true, class:'Main',width:900, height: 600,minWidth:900, webPreferences:{webSecurity: false,allowDisplayingInsecureContent:true}});
                        mainWindow.setMenuBarVisibility(false);
                        mainWindow.loadURL($scope.page.fileList[i].path);
                    }
                }
            }else{
                dialogService.tip([{"message":"请选择要下载的文件"}]);
                return;
            }

        };
        // 从导航栏回到某一上级目录
        $scope.jumpTo = function(folderId,folderName) {
            for(var i=0;i<$scope.page.path.length;i++) {
                if(folderId === $scope.page.path[i].id) {
                    $scope.page.path = $scope.page.path.slice(0, i);
                    break;
                }
            }
            $scope.flag=false;
            $scope.search(folderId,folderName);
        };
        // 显示创建文件夹的栏位
        $scope.showCreateFolder = function() {
            var i = 0;
            var flag = true;
            for(var t=0;t<$scope.page.folderList.length;t++) {
                var existFolder = $scope.page.folderList[t];
                if("新建文件夹"==existFolder.name) {
                    flag = false;
                    break;
                }
            }
            while(!flag) {
                i ++;
                flag = true;
                for(t=0;t<$scope.page.folderList.length;t++) {
                    existFolder = $scope.page.folderList[t];
                    if("新建文件夹(" + i + ")"==existFolder.name) {
                        flag = false;
                        break;
                    }
                }
            }
            if(i == 0) {
                $scope.page.newFolderName = "新建文件夹";
            } else {
                $scope.page.newFolderName = "新建文件夹(" + i + ")";
            }
            $scope.page.createFolder = true;
        };

        // 创建文件夹
        $scope.createFolderFile = function() {
            $scope.folder = {
                parentId : $scope.page.path[$scope.page.path.length-1].id,
                name : $scope.page.newFolderName
            };
            console.log("this is param " + $scope.folder);
            var folderCreateRequest = new FolderCreateRequest();
            folderCreateRequest.setName($scope.folder.name);
            folderCreateRequest.setParentId($scope.folder.parentId);
            folderCreateRequest.setTenantId(tenantId);
            folderCreateRequest.setDiskId(diskId);
            xn_http_post(folderCreateRequest, function(data){
                if (data.errors == null || data.errors.length > 0){
                   dialogService.tip(data.errors)
                }else{
                    $scope.page.createFolder = false;
                    $scope.flag=false;
                    $scope.search($scope.page.localPath);
                }
            });
        };

        // 重命名文件夹
        $scope.renameFolder=function(folder) {
            var folderUpdateRequest = new FolderUpdateRequest();
            folderUpdateRequest.setName(folder.name);
            folderUpdateRequest.setTenantId(tenantId);
            folderUpdateRequest.setId(folder.id);
            folderUpdateRequest.setRowVersion(folder.rowVersion);
            xn_http_post(folderUpdateRequest, function(data){
                if (data.errors == null || data.errors.length > 0){
                   dialogService.tip(data.errors)
                }else{
                    $scope.flag=false;
                    $scope.search($scope.page.localPath);
                }
            });

        };

        // 打开选择目录的弹框
        $scope.openSelectFolder = function(type,obj) {
            var modalInstance = $modal.open({
                templateUrl: "selectFolder.html",
                controller: folderController,
                size:"",
                resolve: {
                    diskId: function () {
                        return $scope.page.disk.id;
                    },
                    rootId : function() {
                        return $scope.page.disk.rootFolderId;
                    },
                    object : function() {
                        return obj;
                    }
                }
            });
            modalInstance.result.then(function (targetId) {
                if(type == "folder") {
                    $scope.moveFolder(targetId, obj);
                } else {
                    $scope.moveFile(targetId, obj);
                }
                $scope.flag=false;
                $scope.search($scope.page.localPath);
            }, function () {
            });
        };

        // 移动文件夹
        $scope.moveFolder = function(targetId, object) {
            $scope.param = {
                folderId : object.id,
                targetId : targetId,
                rowVersion : object.rowVersion
            };
            var folderMoveRequest = new FolderMoveRequest();
            folderMoveRequest.setFolderId($scope.param.folderId);
            folderMoveRequest.setTargetId($scope.param.targetId);
            folderMoveRequest.setTenantId(tenantId);
            folderMoveRequest.setRowVersion($scope.param.rowVersion);
            xn_http_post(folderMoveRequest, function(data){
                if (data.errors == null || data.errors.length > 0){
                    dialogService.tip(data.errors);
                }else{
                    $scope.flag=false;
                    $scope.search($scope.page.localPath);
                    $scope.$apply();
                }
            });
        };

        // 删除文件夹
        $scope.deleteFolder = function(id) {
            var dialogDefaults={
                size:"sm"
            };
            var dialogOptions={
                closeButtonText: "取消",
                actionButtonText: "确定删除",
                headerText: "删除文件夹",
                bodyText: "您确定要删除该文件夹吗？",
                callback:function(){
                    $scope.folder = {
                        id : id
                    };
                    var folderDeleteRequest = new FolderDeleteRequest();
                    folderDeleteRequest.setId($scope.folder.id);
                    folderDeleteRequest.setTenantId(tenantId);
                    xn_http_post(folderDeleteRequest, function(data){
                        if (data.errors == null || data.errors.length > 0){
                           dialogService.tip(data.errors)
                        }else{
                            $scope.flag=false;
                            $scope.search($scope.page.localPath);
                        }
                    });
                }
            };
            dialogService.confirm(dialogDefaults,dialogOptions);

        };
        //删除选中文件夹
        $scope.list={
            folderIdList:[],
            folderFileIdList:[]
        };

        $scope.batchDeleteFolder=function(){
            var flag=0;
            var parme=0;
            //文件夹
            for(var i=0;i<$scope.page.folderList.length;i++){
                if($scope.page.folderList[i].state==false){
                    flag++;
                }
            }

            //文件
            for(var j=0;j<$scope.page.fileList.length;j++){
                if($scope.page.fileList[j].state==false){
                    parme++;
                }
            }
            if(flag==$scope.page.folderList.length && parme==$scope.page.fileList.length){
            dialogService.tip([{"message":"请选择需要删除的文件"}]);
            return;
            }

            var dialogDefaults={
                size:"sm"
            };
            var dialogOptions={
                closeButtonText: "取消",
                actionButtonText: "确定删除",
                headerText: "删除文件?",
                bodyText: "您确定要删除吗？",
                callback:
                    function(){
                    for(var i=0;i<$scope.page.folderList.length;i++){
                        if($scope.page.folderList[i].state){
                            $scope.list.folderIdList.push($scope.page.folderList[i].id)
                        }
                    }
                    for(var j=0;j<$scope.page.fileList.length;j++){
                        if($scope.page.fileList[j].state){
                            $scope.list.folderFileIdList.push($scope.page.fileList[j].id)
                        }
                    }
                        var folderFileDeleteByIdsRequest = new FolderFileDeleteByIdsRequest();
                        folderFileDeleteByIdsRequest.setFolderFileIdList($scope.list.folderFileIdList);
                        folderFileDeleteByIdsRequest.setFolderIdList($scope.list.folderIdList);
                        folderFileDeleteByIdsRequest.setTenantId(tenantId);
                        xn_http_post(folderFileDeleteByIdsRequest, function(data){
                            if (data.errors == null || data.errors.length > 0){
                               dialogService.tip(data.errors)
                            }else{
                                $scope.flag=false;
                                $scope.search($scope.page.localPath);
                                $scope.list.folderIdList=[];
                                $scope.list.folderFileIdList=[];
                                $scope.all.state=false;

                            }
                        });


                        var diskGetRequest = new DiskGetRequest();
                        diskGetRequest.setId(diskId);
                        diskGetRequest.setTenantId(tenantId);
                        xn_http_post(diskGetRequest, function(data){
                            if (data.errors == null || data.errors.length > 0){
                                dialogService.tip(data.errors)
                            }else{
                                $scope.$apply(function() {
                                    $scope.page.disk = data.disk;
                                })
                            }
                        });
                }
            };
            dialogService.confirm(dialogDefaults, dialogOptions);

        };
        // 上传文件
        $scope.uploadFile = function() {
            var fileId=document.getElementById("attachment");
            fileId.onchange=function(){
                var fileList = document.getElementById("attachment").files;
                for(var i = 0; i<fileList.length;i++) {
                    var file = fileList[i];
                    var fileReader = new FileReader();
                    fileReader.readAsDataURL(file);
                    fileReader.onload = function () {
                        document.getElementById("attachment").src = fileReader.result;
                        console.log(fileReader.result);
                        $scope.doUpload();
                    };
                    $scope.doUpload=function(){
                        //上传接口
                        var folderFileCreateRequest = new FolderFileCreateRequest();
                        folderFileCreateRequest.setTenantId(tenantId);
                        folderFileCreateRequest.setDiskId($scope.page.disk.id);
                        folderFileCreateRequest.setFileData(fileReader.result);
                        folderFileCreateRequest.setFileExt(file.type);
                        folderFileCreateRequest.setFileName(file.name);
                        //folderFileCreateRequest.setFileStream();
                        folderFileCreateRequest.setFolderId($scope.page.path[$scope.page.path.length-1].id);
                        xn_http_post(folderFileCreateRequest, function(data){
                            if (data.errors == null || data.errors.length > 0){
                                dialogService.tip(data.errors);
                            }else{
                                dialogService.tip("上传成功！");
                                $scope.search($scope.page.localPath);
                            }
                        });
                    };
                }
            };
        };

        //重命名文件
        $scope.renameFile = function(file) {
            var folderFileUpdateRequest = new FolderFileUpdateRequest();
            folderFileUpdateRequest.setId(file.id);
            folderFileUpdateRequest.setFileName(file.fileName);
            folderFileUpdateRequest.setTenantId(tenantId);
            folderFileUpdateRequest.setRowVersion(file.rowVersion);
            xn_http_post(folderFileUpdateRequest, function(data){
                if (data.errors == null || data.errors.length > 0){
                   dialogService.tip(data.errors)
                }else{
                    $scope.flag=false;
                    $scope.search($scope.page.localPath);
                }
            });
        };

        // 移动文件
        $scope.moveFile = function(targetId, object) {
            $scope.param = {
                id : object.id,
                targetId : targetId,
                rowVersion : object.rowVersion
            };
            var folderFileMoveRequest = new FolderFileMoveRequest();
            folderFileMoveRequest.setId($scope.param.id);
            folderFileMoveRequest.setTenantId(tenantId);
            folderFileMoveRequest.setTargetId($scope.param.targetId);
            folderFileMoveRequest.setRowVersion($scope.param.rowVersion);
            xn_http_post(folderFileMoveRequest, function(data){
                if (data.errors == null || data.errors.length > 0){
                   dialogService.tip(data.errors)
                }else{
                    $scope.flag=false;
                    $scope.search($scope.page.localPath);
                    $scope.$apply();
                }
            });

        };

        // 删除文件
        $scope.deleteFile = function(id) {
            var dialogDefaults={
                size:"sm"
            };
            var dialogOptions={
                closeButtonText: "取消",
                actionButtonText: "确定删除",
                headerText: "删除文件",
                bodyText: "您确定要删除吗？",
                callback:function(){
                    $scope.file = {
                        id : id
                    };
                    var folderFileDeleteRequest = new FolderFileDeleteRequest();
                    folderFileDeleteRequest.setId($scope.file.id);
                    folderFileDeleteRequest.setTenantId(tenantId);
                    xn_http_post(folderFileDeleteRequest, function(data){
                        if (data.errors == null || data.errors.length > 0){
                           dialogService.tip(data.errors)
                        }else{
                            $scope.flag=false;
                            $scope.search($scope.page.localPath);
                            $scope.$apply();
                        }
                    });
                }

            };
            dialogService.confirm(dialogDefaults,dialogOptions)
        };
        /**
         * 下载单个文件
         * @param id    文件的ID
         */
        $scope.download = function(id) {

        };

        /**
         * 打开文件
         */
        $scope.openFile = function(id) {

        };

        angular.element(".rightClick").bind('contextmenu', function(event) {
            event.preventDefault();
        });

    };
    var folderController = function($scope, $modalInstance,$http, $modal,diskId,rootId,object) {
        $scope.param={
            diskId : diskId,
            pageNumber : 1,
            pageSize : 0
        };

        //绑定页面的树
        $scope.trees=[];

        //整个树
        $scope.allTrees=[];

        $scope.collapsed=false;

        /**
         * 选择靶文件夹
         * @param tree  选中的文件夹
         */
        $scope.selectTarget = function(tree) {
            $modalInstance.close(tree.id);
        };

        /**
         * 递归查找下一级
         * @param pid  父级id
         * @param orgList   查找的数组
         * @param level     层级数
         */
        var getChild = function(pid,orgList,level){
            level ++;
            angular.forEach(orgList,function(org){
                if(org.parentId === pid){
                    if(org.id != object.id) {
                        org.level = level;
                        org.visable = false;
                        $scope.allTrees.push(org);
                        getChild(org.id, orgList, level);
                    }
                }
            });
        };
        var getParent = function(pId,orgList){
            angular.forEach($scope.allTrees,function(org){
                if(org.id === pId){
                    orgList.push(org);
                    getParent(org.parentId,orgList);
                }
            });
        };

        var countChild = function(pid,orgList){
            angular.forEach($scope.allTrees,function(org){
                if(org.parentId === pid){
                    orgList.push(org);
                    countChild(org.id,orgList);
                }
            });
        };
        var folderFindRequest = new FolderFindRequest();
        folderFindRequest.setDiskId($scope.param.diskId);
        folderFindRequest.setTenantId(tenantId);
        folderFindRequest.setPageSize(0);
        xn_http_post(folderFindRequest, function(data){
            if (data.errors == null || data.errors.length > 0){
               dialogService.tip(data.errors)
            }else{
                //组建新的树
                if(data.result.length > 0){
                    angular.forEach(data.result,function(folder){
                        if(folder.id == rootId){
                            if(folder.id != object.id) {       // 排除自已
                                folder.level = 0;
                                folder.visable = true;
                                $scope.allTrees.push(folder);
                                getChild(folder.id, data.result, 0);
                            }
                        }
                    });
                    //新建状态及是否有子栏目
                    for( var i=0; i< $scope.allTrees.length-1;i++){
                        if($scope.allTrees[i].id == $scope.allTrees[i+1].parentId){
                            $scope.allTrees[i].childState=true;
                            $scope.allTrees[i].collapsed=true;
                        }else{
                            $scope.allTrees[i].childState=false;
                            $scope.allTrees[i].collapsed=false;
                        }
                    }
                    $scope.allTrees[$scope.allTrees.length-1].childState=false;
                    angular.extend($scope.trees,$scope.allTrees);
                    console.log("文件夹……………………………………………………………………………………………………");
                    console.log($scope.trees);
                    $scope.$apply();
                }
            }
        });


        $scope.collapseTree = function(tree,parent){
            angular.forEach(tree,function(organization) {
                if(organization.parentId === parent.id){
                    organization.visable = (!parent.collapsed && parent.visable);
                    $scope.collapseTree(tree,organization);
                }
            });
        };
        $scope.toggle = function(i) {
            $scope.trees[i].collapsed=! $scope.trees[i].collapsed;
            $scope.collapseTree($scope.trees,$scope.trees[i]);

        };

        //删除树
        $scope.delete = function(tree) {
            var dialogDefaults = {
                size:"sm"
            };
            var dialogOptions = {
                closeButtonText: "取消",
                actionButtonText: "确定删除",
                headerText: "继续....?",
                bodyText: "您确定要删除组织吗？",
                callback: function () {
                    HrService.apiHrOrgDelete({id:tree.id}).success(function(data){
                        if(data.errors === null || data.errors.length > 0){
                            dialogService.tip(data.errors);
                        }else{
                            /**
                             * 获取树的值在数组中的位置
                             * @param data 当前数据
                             * @returns {number} 返回位置
                             */
                            var location = function(data,dataList){
                                for(var i=0; i < dataList.length; i++){
                                    if(dataList[i].id===data.id){
                                        return  i;
                                    }
                                }
                            };

                            /**
                             * 查找兄弟的个数
                             * @param data       当前数据
                             * @param dataList    查询的数组
                             * @returns {number}  返回兄弟和自己的个数
                             */

                            var brothers = function(data,dataList){
                                var number = 0;
                                for(var i=0; i < dataList.length; i++){
                                    if(dataList[i].parentId===data.parentId){
                                        number++;
                                    }
                                }
                                return number;
                            };

                            /**
                             * 查找父级别位置
                             * @param data
                             * @param dataList
                             * @returns {number}
                             */

                            var locationParent = function(data,dataList){
                                for(var i=0; i < dataList.length; i++){
                                    if(dataList[i].id ===data.parentId){
                                        return i;
                                    }
                                }
                            };
                            if( brothers(tree,$scope.trees)===1){
                                if(locationParent(tree,$scope.trees)!=null){
                                    $scope.trees[locationParent(tree,$scope.trees)].childState = false;
                                }
                            }

                            if( brothers(tree,$scope.allTrees)===1){
                                if(locationParent(tree,$scope.allTrees)!=null){
                                    $scope.allTrees[locationParent(tree,$scope.allTrees)].childState = false;
                                }
                            }

                            $scope.trees.splice(location(tree,$scope.trees),1);
                            $scope.allTrees.splice(location(tree,$scope.allTrees),1);
                            dialogService.tip([{"message":"删除成功！" }]);


                        }
                    });
                }
            };
            dialogService.confirm(dialogDefaults, dialogOptions);

        };

        //树编辑
        $scope.edit = function (tree) {
            $scope.org={};
            //复制
            angular.extend($scope.org ,tree);

            //弹出窗口
            var modalInstance = $modal.open({
                templateUrl: "treeEidt.html",
                controller:TreeEidt,
                size:"",
                resolve: {
                    items: function () {
                        return $scope.org;
                    }
                }
            });
            modalInstance.result.then(function (data){

                /**
                 * 获取树的值在数组中的位置
                 * @param data 当前数据
                 * @returns {number} 返回位置
                 */
                var location = function(data,dataList){
                    for(var i=0; i < dataList.length; i++){
                        if($scope.trees[i].id==data.id){
                            return i;
                        }
                    }
                };

                //数据替换
                $scope.trees.splice(location(data,$scope.trees),1,data);
                $scope.allTrees.splice(location(data,$scope.allTrees),1,data);
            });
        };

        //新建树节点
        $scope.addTree = function (tree) {

            $scope.org={};
            if(tree != null){
                $scope.org = {
                    parentName  :tree.name,
                    parentId :tree.id
                };
            }else{
                $scope.org = {
                    parentName  :"",
                    parentId :""
                };
            }
            //弹出窗口
            var modalInstance = $modal.open({
                templateUrl: "treeEidt.html",
                controller:TreeEidt,
                size:"",
                resolve: {
                    items: function () {
                        return $scope.org;
                    }
                }
            });
            modalInstance.result.then(function (data) {
                //获取父级位置
                var location = function(data,dataList){
                    for(var i=0; i < dataList.length; i++){
                        if(dataList[i].id==data.parentId){
                            return  i;
                        }
                    }
                };
                var locationEndChild=function(index,treeList){
                    for(var i=treeList.length-1;i>=0; i--){
                        if(treeList[index].id==treeList[i].parentId){
                            return locationEndChild(i,treeList);
                        }
                    }
                    return index;
                };

                if(data.parentId==""){
                    //增加顶级树
                    data.childState = false;
                    data.collapsed = false;
                    data.visable = true;
                    data.level=0;
                    $scope.trees.push(data);
                    $scope.allTrees.push(data);

                }else{

                    //增加子级树
                    $scope.trees[location(data,$scope.trees)].childState = true;
                    $scope.trees[location(data,$scope.trees)].collapsed = false;

                    for(var i=0;i<$scope.trees.length; i++){
                        if($scope.trees[i].parentId===data.parentId){
                            $scope.trees[i].visable=true;
                        }
                    }

                    data.childState = false;
                    data.collapsed = false;
                    data.visable = true;
                    data.level =  $scope.trees[location(data,$scope.trees)].level+1;

                    $scope.trees.splice(locationEndChild(location(data,$scope.trees),$scope.trees)+1,0,data);
                    $scope.allTrees.splice(locationEndChild(location(data,$scope.allTrees),$scope.allTrees)+1,0,data);
                }
            });
        };

        //树搜索
        $scope.treeSearch = function () {
            $scope.organizationSearch = [];
            if($scope.keyword != null){
                $scope.SearchName($scope.allTrees,$scope.keyword);
            } else{
                angular.extend($scope.organizationSearch,$scope.allTrees);
            }
            $scope.trees = $scope.organizationSearch;
        };
        $scope.SearchName = function (data,searchText) {
            var searchLength = searchText.length;
            var jsonArray = data;
            for(var i=0 ;i<jsonArray.length ; i++ ){
                var jsonObject = jsonArray[i];
                var name = jsonObject.name;
                var nameLength = name.length;
                var flag = false;
                for(var temp=0;temp< (nameLength-searchLength+1);temp++){
                    if(searchText == name.substring(temp,temp+searchLength)){
                        flag = true;
                        break;
                    }
                }
                if(flag){
                    var j = 0 ;
                    if(jsonObject.parentId != null){
                        var parentList = [];
                        getParent(jsonObject.parentId,parentList)
                        for(j = parentList.length-1; j >= 0 ;j--){
                            parentList[j].collapsed = false;
                            parentList[j].visable = true;
                            $scope.organizationSearch.push(parentList[j]);
                        }
                    }
                    var tempObj = {};
                    angular.extend(tempObj,jsonObject);
                    var childList = [];
                    countChild(jsonObject.id,childList);
                    if(childList.length == 0){
                        tempObj.collapsed = false;
                        tempObj.visable = true;
                        $scope.organizationSearch.push(tempObj);
                    } else {
                        tempObj.collapsed = true;
                        tempObj.visable = true;
                        $scope.organizationSearch.push(tempObj);
                        for(j = 0; j < childList.length ;j++){
                            $scope.organizationSearch.push(childList[j]);
                        }
                        i =  i + childList.length;
                    }
                }
            }
        };

        $scope.clean = function(){
            $scope.organization = null;
        };

        $scope.move = function() {

        };
        $scope.cancel = function () {
            $modalInstance.dismiss('cancel');
        };
        //关闭错误
        $scope.closeAlert = function (index,form) {
            form.splice(index,1);
        };
    };


    angular.module("xn.my.pan", [])
        .controller("PanIndexController", ["$scope", "$http","$q", "$modal","$filter","dialogService", panIndexController])
        .controller("FolderController", ["$scope","$modalInstance", "$http", "$modal","diskId", "dialogService", "toolsService", folderController])

})();
/**
 * Created by YQ on 2016/8/4.
 */

(function () {

    $("body").on("click", function(e) {
       // console.log(e);
        if(!$("#personQrcode").is(":hidden") && e.target.id != "personQrcode" && e.target.id != "qrcodeImg" && e.target.id != "personQrcode2" )
        {
            $("#personQrcode").addClass('hide');
        }
        // count=0;
        // getPar(e.target);
        // if(count == 0 ){
        //     $("#personQrcode").addClass('hide');
        // }
    });




  


    var personCardController = function($rootScope, $scope, $http, $q, $location, $filter, myApp) {

        var qrcode = new QRCode(document.getElementById("qrcodeImg"), {text:"https://auth.xiniunet.com/app", width: 130, height: 130});
        $scope.isSelf = false;
        //alert(myApp.yunXin.cache);
        //$scope.head = {"background": ("url('#url#')").replace("#url#",  $location.search().avatar)};
        $scope.tenants = [];
        //   $scope.head = {"background": "url('images/addTeam.png')"};
        $scope.vm = [];
        $scope.vm.name = "杨琦";

        $scope.vm.sex= "--";
        $scope.vm.birthDate= "1989";
        $scope.vm.provinceName= "-";
        $scope.vm.cityName= "-";

        $scope.vm.nick= "--";
        $scope.closePersonCard = function () {
            $('#j-mask').addClass("hide");
            $('#div_personCard').addClass("hide");
        };

        $scope.personCardQrcodeShowClick = function () {
            qrcode.makeCode("xn_union_qrcode_" + userUID);//"xn_union_qrcode_" +
            $scope.personCardQrcodeShow = true;
            $("#personQrcode").removeClass('hide');
        };
        $scope.personCardAdd = function () {

            myApp.yunXin.addFriendInBox();
            $scope.closePersonCard();
        };
        $scope.personCardRemove = function () {
            myApp.yunXin.removeFriend();
            $scope.closePersonCard();
        };

        $scope.personCardUpdateClick = function () {


            if($scope.vm.nickNew  != undefined && $scope.vm.nickNew != null && $scope.vm.nickNew != $scope.vm.nick  )
            {
                var uionUpdateNickNameRequest = new UnionUpdateNickNameRequest;
                uionUpdateNickNameRequest.setNickName($scope.vm.nickNew);
                xn_http_post(uionUpdateNickNameRequest, function (data) {});
                $scope.vm.nick = $scope.vm.nickNew;

               // alert($scope.vm.nick);
            }
            var birthDate =$("#personCardYead  option:selected").text().trim() + "-" + $("#personCardMonth  option:selected").text().trim() + "-" + $("#personCardDay  option:selected").text().trim();
           // alert(birthDate);
            if(birthDate != $scope.vm.birthDate)
            {
                var unionUpdateBirthDateRequest = new UnionUpdateBirthDateRequest();
                unionUpdateBirthDateRequest.setBirthDate(birthDate)
                xn_http_post(unionUpdateBirthDateRequest, function (data) {console.log(data);});
                $scope.vm.birthDate = birthDate;

               // alert($scope.vm.birthDate);
            }
            if($scope.vm.sexNew != undefined && $scope.vm.sexNew != null && $scope.vm.sex != $scope.vm.sexNew)
            {
                var unionUpdateGenderRequest = new UnionUpdateGenderRequest();
                if($scope.vm.sexNew == "男")
                {
                    unionUpdateGenderRequest.setGender("M");
                }
                else if($scope.vm.sexNew == "女")
                {
                    unionUpdateGenderRequest.setGender("W");
                }
                xn_http_post(unionUpdateGenderRequest, function (data) {console.log(data);});
                $scope.vm.sex = $scope.vm.sexNew;
            }
            if( $scope.vm.proviceId != $("#selectProv  option:selected").val() || $scope.vm.cityId != $("#selectCity  option:selected").val())
            {
                var unionUpdateAreaRequest = new UnionUpdateAreaRequest();
                unionUpdateAreaRequest.setCityId($("#selectCity  option:selected").val());
                unionUpdateAreaRequest.setProvinceId($("#selectProv  option:selected").val());
                unionUpdateAreaRequest.setCityName($("#selectCity  option:selected").text());
                unionUpdateAreaRequest.setProvinceName($("#selectProv  option:selected").text());
                xn_http_post(unionUpdateAreaRequest, function (data) {console.log(data);});

                $scope.vm.proviceId = $("#selectProv  option:selected").val();
                $scope.vm.cityId = $("#selectCity  option:selected").val();
                $scope.vm.provinceName = $("#selectProv  option:selected").text();
                $scope.vm.cityName = $("#selectCity  option:selected").text();
            }

            $scope.personCard.edit = false;
        };
        $scope.sendMsg = function () {
            $('#j-mask').addClass("hide");
            $('#div_personCard').addClass("hide");
            myApp.yunXin.doChat();

        };


        $rootScope.showPersonCard = function (user) {
            $scope.vm.provinceName= "-";
            $scope.vm.cityName= "-";
            $scope.personCardQrcodeShow = false;



           // alert($scope.isBuddy );
            var personUnionId = "0";
            if(user != undefined && user != null)
            {
                personUnionId = user.account;

            }
            else
            {
                personUnionId = userUID;
            }


            $('#j-mask').removeClass("hide");
            $('#div_personCard').removeClass("hide");

            var user = myApp.yunXin.cache.getUserById(personUnionId);

            console.log(getAvatar(user.avatar));
            $scope.personCard.edit= false;
            $scope.head =  getAvatar(user.avatar);
            if(personUnionId == userUID)
            {
                $scope.isSelf = true;
            }
            else
            {
                $scope.isSelf = false;
            }

            var  unionGetRequest = new UnionGetRequest();
            unionGetRequest.setId(personUnionId);
            xn_http_post(unionGetRequest, function (data) {
                $scope.$apply(function () {



                    var union = data.union;
                    if( union.gender)
                    {
                        if(union.gender == "W")
                        {
                            $scope.vm.sex = "女";
                        }
                        else if(union.gender == 'M')
                        {
                            $scope.vm.sex = "男";
                        }
                    }
                    if(union.name  != null && union.name != undefined)
                    {
                        $scope.vm.name = union.name;
                    }
                    else
                    {
                        $scope.vm.name = union.nickName;
                    }
                    if(union.nickName  != null && union.nickName != undefined)
                    {
                        $scope.vm.nick = union.nickName;
                    }



                    if(union.birthDate  != null && union.birthDate != undefined)
                    {
                        $scope.vm.birthDate =$filter('date')(new Date(union.birthDate), 'yyyy-MM-dd')   ;// $filter('dateFormat')(new Date(union.birthDate));

                        var index =  (new Date(Date.parse($scope.vm.birthDate))).getFullYear();
                        $(("#personCardYead  option[value='###']").replace("###", index)).attr("selected",true);
                        //   $("#personCardYead option[value='1999']").attr("selected",true);
                        index =  (new Date(Date.parse($scope.vm.birthDate))).getMonth();

                        $(("#personCardMonth  option[value='###'] ").replace("###", index + 1)).attr("selected",true);
                        index =  (new Date(Date.parse($scope.vm.birthDate))).getDate();
                        $(("#personCardDay  option[value='###'] ").replace("###", index)).attr("selected",true);
                    }

                    if(union.provinceId)
                    {

                        $('#selectProv').val(union.provinceId);
                        $('#selectProv').trigger('change');
                    }
                    if(union.cityId)
                    {
                        $('#selectCity').val(union.cityId);
                        $('#selectCity').trigger('change');
                    }


                    $scope.vm.provinceName = union.provinceName;
                    $scope.vm.cityName = union.cityName;

                });


            });
           // console.clear();
            var tenantGetAllListByUnionIdRequest = new TenantGetAllListByUnionIdRequest();
            tenantGetAllListByUnionIdRequest.setUnionId(personUnionId);
            xn_http_post(tenantGetAllListByUnionIdRequest, function(data){
                var tenants = [];
                if (data.errors == null || data.errors.length > 0){
                    alert(data.errors[0].message);
                }else {
                    $scope.$apply(function () {
                        tenants = data.result;
                    });
                    console.log(data);

                    var  employeeProfileGetRequest = new EmployeeProfileGetRequest();
                    employeeProfileGetRequest.setUnionId(personUnionId);
                    xn_http_post(employeeProfileGetRequest, function (data) {
                        console.log(data);
                        $scope.$apply(function () {

                            $scope.tenants = [];
                            for(var i=0; i<tenants.length; i++)
                            {
                                for(var j=0; j<data.result.length; j++)
                                {
                                    if(data.result[j].tenantId == tenants[i].id)
                                    {
                                        tenants[i].employeeDetail = data.result[j];
                                    }
                                }
                                if( tenants[i].employeeDetail == null || tenants[i].employeeDetail == undefined)
                                {
                                    tenants.splice(i, 1);
                                }
                                else 
                                {
                                    $scope.tenants.push(tenants[i]);
                                }
                            }



                            // for(var employeeDetail in data.result)
                            // {
                            //     console.log(employeeDetail);
                            //
                            // }


                        });

                    });


                }
            });


           // unionGetRequest.set
           // unionGetRequest.setTenantId()
        };


    };
    var myApp =  angular.module("xn.personCard", []);
    myApp.service('myApp', function() {
        this.yunXin = yunXin;
    });
    myApp.config(['$locationProvider', function($locationProvider) {
        $locationProvider.html5Mode(true);
    }]);
    myApp.controller("personCardController", ["$rootScope", "$scope", "$http","$q", "$location", "$filter", "myApp", personCardController])


})();
/**
 * Created by YQ on 2016/8/4.
 */

(function () {

    $("body").on("click", function(e) {
        // console.log(e);
        if(e.target.id !="div_TenantShow" && e.target.id != 'a_select')
        {
            var controllerScope = $('div[ng-controller="cloudFileSelectController"]').scope();
            controllerScope.eleTenantShow = false;


        }
    });



    var cloudFileSelectController = function($rootScope, $scope, $http, $q, $location, $filter, myApp) {
        if(!$rootScope.tenantGetAllListByUnionIdRenponse)
        {
            var tenantGetAllListByUnionIdRequest = new TenantGetAllListByUnionIdRequest();
            tenantGetAllListByUnionIdRequest.setUnionId(userUID);
            xn_http_post(tenantGetAllListByUnionIdRequest, function(data){
                if (data == null || (data.errors && data.errors.length > 0)){
                    alert(data.errors[0].message);
                }else {
                    $rootScope.$apply(function () {
                        $rootScope.tenantGetAllListByUnionIdRenponse = data;
                        $scope.tenants = data.result;
                        $scope.tenant = data.result[0];
                    })
                }
            });
        }



        $('#div_TenantShow').on('click', function (e) {
            var ev = e || window.event;
            if(ev.stopPropagation){
               // ev.stopPropagation();
            }
            else if(window.event){
                window.event.cancelBubble = true;//兼容IE
            }
        });
        $scope.tenants = [];//承租人列表

        $scope.openObjectList = [];
        $scope.objectList = []; //当前文件夹
        $scope.tenant = {};//当前选中承租人
        $scope.selectObjectList = {length:0};


        $scope.bytesToSize = function (bytes) {
            if (bytes === 0) return '0 B';
            var k = 1024;
            sizes = ['B','KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];

            i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseInt( (bytes / Math.pow(k, i)) + ' ') + sizes[i];
            //(0) 后面保留一位小数，如1.0GB                                                                                                                  //return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];
        }

        $scope.showFolder = function () {
            
        }


        $scope.tenantSelect = function (tenant, index) {

            $scope.selectObjectList = {length:0};
            $scope.openObjectList = [];
            $scope.objectList = []; //当前文件夹


            var deferred = $q.defer();
            var promise = deferred.promise;

            $scope.tenant = tenant;
            var diskByObjectIdRequest = new DiskByObjectIdRequest();
            diskByObjectIdRequest.setTenantId(tenant.id);
            diskByObjectIdRequest.setUnionId(localStorage.getItem('uid'));
            xn_http_post(diskByObjectIdRequest, function(data)
            {
                if (data.errors == null || data.errors.length > 0)
                {

                }
                else
                {
                    //console.clear();
                    //console.log(data);
                    deferred.resolve(data.disk);
                }
            });
            promise.then(function(disk){
                console.clear();
                console.log(disk);
                var folderFileFindRequest = new FolderFileFindRequest();
                folderFileFindRequest.setParentId(disk.rootFolderId);
                folderFileFindRequest.setTenantId($scope.tenant.id);
                folderFileFindRequest.pageSize = 10;
                folderFileFindRequest.pageNumber = 1;
                xn_http_post(folderFileFindRequest, function(data)
                {
                    console.log(data);
                    if (data.errors == null || data.errors.length > 0)
                    {

                    }
                    else
                    {
                        $scope.$apply(function () {
                            $scope.objectList = [];
                            $scope.objectList = $scope.objectList.concat(data.folderList);
                            $scope.objectList = $scope.objectList.concat(data.folderFileList);
                        })


                       // deferred.resolve(data);
                    }
                });
            });
        };

        $scope.back = function (){
          //  $scope.openObjectList = $scope.openObjectList.concat(object);

            var object = $scope.openObjectList.pop();
            object.id = object.parentId;
          //  $scope.openOejectList.push(object);
            $scope.openFolder(object, 0);
        };

        $scope.itemClick = function (object, index) {
            console.log(object);
            if(object.file)
            {

                object.isCheck = !object.isCheck;
                if(object.isCheck)
                {
                    $scope.selectObjectList[object.id] = object;

                }
                else
                {
                    delete  $scope.selectObjectList[object.id];
                }
                $scope.selectObjectList.length = Object.getOwnPropertyNames($scope.selectObjectList).length-1;
            }
            else
            {

                var array = [];
                for(var i=0; i<$scope.openObjectList.length; i++)
                {

                    if($scope.openObjectList[i].id == object.id)
                    {
                        break;
                    }
                    array.push($scope.openObjectList[i]);
                }
                array.push(object);

                $scope.openObjectList = array;
                $scope.openFolder(object, index);
            }
        }
        $scope.openFolder = function (object, index) {
            $scope.selectObjectList = {length:0};
            var folderFileFindRequest = new FolderFileFindRequest();
            folderFileFindRequest.setParentId(object.id);
            folderFileFindRequest.setTenantId($scope.tenant.id);
            folderFileFindRequest.pageSize = 10;
            folderFileFindRequest.pageNumber = 1;
            xn_http_post(folderFileFindRequest, function(data)
            {
                console.log(data);
                if (data.errors == null || data.errors.length > 0)
                {

                }
                else
                {
                    $scope.$apply(function () {
                        $scope.objectList = [];
                        $scope.objectList = $scope.objectList.concat(data.folderList);
                        $scope.objectList = $scope.objectList.concat(data.folderFileList);
                    });


                    // deferred.resolve(data);
                }
            });

        }

        $rootScope.search = function() {

            $scope.selectObjectList = {length:0};
            $scope.openObjectList = [];
            $scope.objectList = []; //当前文件夹
            $scope.eleCloudFileSelectisShow = true;
            $scope.tenants = $rootScope.tenantGetAllListByUnionIdRenponse.result;
            $scope.tenantSelect($scope.tenants[0], 0);

         };

         $scope.sendFile = function () {
             var array = new Array();
             for(var name in $scope.selectObjectList)
             {
                 if(name != "length")
                 {
                     var object = $scope.selectObjectList[name];
                     var messageBatchSendRequest = new MessageBatchSendRequest();
                     messageBatchSendRequest.setMessageType(6);
                     var messageData = {};
                     var body = {};
                     body.name = object.file.name;
                     body.md5="0";
                     body.url = object.path;
                     body.ext = object.file.extension;
                     body.size = object.file.size;
                     messageData.body=body;
                     messageBatchSendRequest.setMessageData(JSON.stringify(body));
                     messageBatchSendRequest.setSendUnionId(localStorage.getItem('uid'));
                     var that = yunXin,
                         scene = that.$chatEditor.data('type'),
                         to = that.$chatEditor.data('to');
                     messageBatchSendRequest.setreceiveUnionIds([to]);
                     // xn_http_post(messageBatchSendRequest, function(data){
                     //        console.log(data);
                     // });

                     nim.sendFile({
                         scene: scene || 'p2p',
                         to: to,
                         type:'file',
                         file:body,
                         done: myApp.yunXin.sendMsgDone.bind(myApp.yunXin)
                     });

                 }
             }

            $scope.eleCloudFileSelectisShow = false;
            // if()
         }
        //
        // $scope.getList = function() {
        //     $scope.search($scope.page.localPath);
        // };
    };
    var myApp =  angular.module("xn.cloudFileSelect", []);
    myApp.service('myApp', function() {
        this.yunXin = yunXin;
    });
    myApp.config(['$locationProvider', function($locationProvider) {
        $locationProvider.html5Mode(true);
    }]);
    myApp.controller("cloudFileSelectController", ["$rootScope", "$scope", "$http","$q", "$location", "$filter", "myApp", cloudFileSelectController])


})();
/**
 * Created by YQ on 2016/8/4.
 */

(function () {
  
    var addFriendController = function($rootScope, $scope, $http, $q, $filter,$timeout, myApp) {
       // alert(myApp);
        $scope.searchClick = function () {
            myApp.yunXin.searchFriend();
        };

        // $scope.friendSearchOptions = {
        //     pageSize : 10,
        //     pageNumber : 1,
        //     totalCount :0,
        //     method:'xntalk.global.search',
        //     methodName: "getFriendList"
        // };
        //
        //
        // $scope.getFriendList = function() {
        //
        //     xn_http_post($scope.friendSearchOptions, function (data) {
        //         $scope.personList = [];
        //         for(var obj in data.employeeList)
        //         {
        //             var person = new Object();
        //             person.name = obj.name;
        //             $scope.personList(obj);
        //         }
        //         console.log(data);
        //     });
        // };
        //
        //
        // $scope.selectFriend = function(line, inventory,index) {
        //
        //
        // };

        $scope.getList=function(parameter){
            if(!parameter.data.keyword)
            {
                parameter.data.keyword = "";
            }
            parameter.data.pageSize = 5;
            var request =
            {
                method:'xntalk.global.search',
                pageSize:5,
                pageNumber:parameter.data.pageNumber,
                keyword:parameter.data.keyword
            };

            xn_http_post(request, function (data) {
                var personList = [];
                var personMap = {};

                for(var i=0;data.employeeList && i<data.employeeList.length; i++)
                {
                    var person = new Object();
                    person.name = data.employeeList[i].name;
                    person.unionId = data.employeeList[i].unionId;
                    personMap[person.unionId] = person;
                }


                for(var i=0;data.userList &&  i<data.userList.length; i++)
                {
                    var person = new Object();
                    person.name = data.userList[i].name;
                    person.unionId = data.userList[i].unionId;
                    personMap[person.unionId] = person;
                }

                for(var obj in personMap)
                {
                    personList.push(personMap[obj]);
                }

                // index++;
                var itemList=[

                ];
                for(var i=parameter.data.pageSize*(parameter.data.pageNumber-1);
                    i<parameter.data.pageSize*(parameter.data.pageNumber) && i<personList.length; i++)
                {
                    itemList.push(personList[i]);
                }

                parameter.deferred.resolve({itemList:itemList,totalCount:personList.length});
            });


        };

        // //选择框
        // $scope.selectLookup=function(data) {
        //     console.log(data);
        // }


    };
    var myApp =  angular.module("xn.addFriend", []);
    myApp.service('myApp', function() {
        this.yunXin = yunXin;
    });
    myApp.controller("addFriendController", ["$rootScope", "$scope", "$http","$q", "$filter", "$timeout", "myApp", addFriendController]);

})();


(function () {
    //定义module,并指明依赖模块。
    var listController = function($scope, $http,$q, $modal,$filter,dialogService) {
       $scope.tenantIdList="";
       $scope.tenantNameList="";
        //点击企业通讯录
        $("#addressListDiv").on('click',".panel_item",function(){
            $(".right-panel").addClass("hide");
            $("#j-right-addressList").removeClass("hide");
            $scope.tenantIdList=$(this).attr("data-id");
            $scope.tenantNameList=$(this).find(".panel_single-row").html();
            $scope.getList("-1",$scope.tenantNameList);
            $scope.path=[];
        });
        $scope.path=[];
        $scope.branchList=[];
        $scope.personList=[];
        $scope.totalCount=0;
        $scope.tenantName=[];
        $scope.newBranchList=[];
        $scope.tenantName.push($scope.tenantNameList);
        $scope.inIndex=0;
        $scope.inIndexName="";


        $scope.getList=function(parentId,parentName){
            var branchQueryRequest = new BranchQueryRequest();
            branchQueryRequest.setParentId(parentId);
            branchQueryRequest.setTenantId($scope.tenantIdList);
            xn_http_post(branchQueryRequest, function(data){
                if (data.errors != null && data.errors.length > 0){
                    dialogService.tip(data.errors)
                }
                else if(!!data.subErrors == true && data.subErrors.length > 0)
                {
                        dialogService.tip(data.subErrors)
                }
                else{
                    console.log(data.branchList);
                    console.log(data.personList);
                    $scope.newBranchList=data.branchList;
                    $scope.$apply(function(){
                        angular.forEach($scope.newBranchList, function(data){
                            $scope.dataLen=data.id.length;
                            $scope.inIndex=data.id.substr($scope.dataLen-1,1);
                            $scope.inIndexName=data.name.substr(0,1);
                            data.idIndex=$scope.inIndex;
                            data.idName=$scope.inIndexName;
                        });
                        $scope.branchList = $scope.newBranchList;
                        $scope.personList = data.personList;
                        $scope.listTotalCount=$scope.branchList.length+$scope.personList.length;
                        //if(parentId!=-1){
                            $scope.path.push({"id":parentId ,"name":parentName});
                        //}

                    })

                }
            });
        };
        $scope.openChat=function(account,scene){
            if(account.isUnionActived){
                yunXin.openChatBox(account.unionId,scene);
                $("#j-right-addressList").addClass("hide");
            }else{
                dialogService.tip([{"message":"暂未激活，无法聊天！"}],null,1000) ;
            }

        };
        $scope.showInfo=function(account,scene){
            if(scene == 'p2p')
            {
                var user = yunXin.cache.getUserById(account.unionId);
                yunXin.showInfoBox(user);
            }
            // if(account.isUnionActived){
            //     yunXin.openChatBox(account.unionId,scene);
            //     $("#j-right-addressList").addClass("hide");
            // }else{
            //     dialogService.tip([{"message":"暂未激活，无法聊天！"}],null,1000) ;
            // }

        };
        // 从导航栏回到某一上级目录
        $scope.jumpTo = function(id,name) {
            for(var i=0;i<$scope.path.length;i++) {
                if(id === $scope.path[i].id) {
                    $scope.path = $scope.path.slice(0, i);
                    break;
                }
            }
            $scope.flag=false;
            $scope.getList(id,name);
        };

        //$("#j-right-friends-ul").on("click",".panel_item",function(){
        //    var scene=$(this).attr("data-scene");
        //    var account=$(this).attr("data-account");
        //    yunXin.openChatBox(account,scene);
        //})



    };

    angular.module("xn.my.list", [])
        .controller("ListController", ["$scope", "$http","$q", "$modal","$filter","dialogService", listController])

})();